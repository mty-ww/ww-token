{
	"id": "e02ce7c6235d43ee2ba01153808d9f6a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/WW.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract WorldWarToken is ERC20, Ownable {\n    uint256 public taxRate = 1; // 1% on all transfers\n\n    address public reserveWallet;\n    address public devWallet;\n    address public donationWallet;\n\n    mapping(address => bool) private _isExcludedFromTax;\n    address public router;\n\n    constructor(address _reserve, address _dev, address _donation) ERC20(\"World War Token\", \"WW\") Ownable(msg.sender) {\n        uint256 totalSupply = 100_000_000 * 10 ** decimals();\n\n        uint256 devAmount = (totalSupply * 15) / 100;\n        uint256 reserveAmount = totalSupply - devAmount;\n\n        reserveWallet = _reserve;\n        devWallet = _dev;\n        donationWallet = _donation;\n\n        _mint(devWallet, devAmount);\n        _mint(reserveWallet, reserveAmount);\n\n        // Exclude from tax\n        _isExcludedFromTax[msg.sender] = true;\n        _isExcludedFromTax[reserveWallet] = true;\n        _isExcludedFromTax[devWallet] = true;\n        _isExcludedFromTax[donationWallet] = true;\n    }\n\n    function setRouter(address _router) external onlyOwner {\n        router = _router;\n    }\n\n    function excludeFromTax(address account, bool excluded) external onlyOwner {\n        _isExcludedFromTax[account] = excluded;\n    }\n\n    function _handleTax(address sender, address recipient, uint256 amount) internal returns (uint256) {\n        if (_isExcludedFromTax[sender] || _isExcludedFromTax[recipient]) {\n            return amount;\n        }\n        uint256 taxAmount = (amount * taxRate) / 100;\n        if (taxAmount > 0) {\n            super._transfer(sender, donationWallet, taxAmount);\n        }\n        return amount - taxAmount;\n    }\n\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\n        uint256 finalAmount = _handleTax(msg.sender, recipient, amount);\n        return super.transfer(recipient, finalAmount);\n    }\n\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\n        uint256 finalAmount = _handleTax(sender, recipient, amount);\n        _approve(sender, _msgSender(), allowance(sender, _msgSender()) - (amount));\n        return super.transferFrom(sender, recipient, finalAmount);\n    }\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "berlin"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/WW.sol": {
				"WorldWarToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_reserve",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_dev",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_donation",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "devWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "donationWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "excluded",
									"type": "bool"
								}
							],
							"name": "excludeFromTax",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserveWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "router",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_router",
									"type": "address"
								}
							],
							"name": "setRouter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "taxRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/WW.sol\":167:2362  contract WorldWarToken is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/WW.sol\":239:240  1 */\n  0x01\n    /* \"contracts/WW.sol\":214:240  uint256 public taxRate = 1 */\n  0x06\n  sstore\n    /* \"contracts/WW.sol\":455:1153  constructor(address _reserve, address _dev, address _donation) ERC20(\"World War Token\", \"WW\") Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/WW.sol\":557:567  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0f\n  dup2\n  mstore\n  0x20\n  add\n  0x576f726c642057617220546f6b656e0000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x02\n  dup2\n  mstore\n  0x20\n  add\n  0x5757000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/WW.sol\":579:598  uint256 totalSupply */\n  0x00\n    /* \"contracts/WW.sol\":621:631  decimals() */\n  tag_18\n    /* \"contracts/WW.sol\":621:629  decimals */\n  shl(0x20, tag_19)\n    /* \"contracts/WW.sol\":621:631  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"contracts/WW.sol\":615:617  10 */\n  0x0a\n    /* \"contracts/WW.sol\":615:631  10 ** decimals() */\n  tag_20\n  swap2\n  swap1\n  tag_21\n  jump\t// in\ntag_20:\n    /* \"contracts/WW.sol\":601:612  100_000_000 */\n  0x05f5e100\n    /* \"contracts/WW.sol\":601:631  100_000_000 * 10 ** decimals() */\n  tag_22\n  swap2\n  swap1\n  tag_23\n  jump\t// in\ntag_22:\n    /* \"contracts/WW.sol\":579:631  uint256 totalSupply = 100_000_000 * 10 ** decimals() */\n  swap1\n  pop\n    /* \"contracts/WW.sol\":642:659  uint256 devAmount */\n  0x00\n    /* \"contracts/WW.sol\":683:686  100 */\n  0x64\n    /* \"contracts/WW.sol\":677:679  15 */\n  0x0f\n    /* \"contracts/WW.sol\":663:674  totalSupply */\n  dup4\n    /* \"contracts/WW.sol\":663:679  totalSupply * 15 */\n  tag_24\n  swap2\n  swap1\n  tag_23\n  jump\t// in\ntag_24:\n    /* \"contracts/WW.sol\":662:686  (totalSupply * 15) / 100 */\n  tag_25\n  swap2\n  swap1\n  tag_26\n  jump\t// in\ntag_25:\n    /* \"contracts/WW.sol\":642:686  uint256 devAmount = (totalSupply * 15) / 100 */\n  swap1\n  pop\n    /* \"contracts/WW.sol\":696:717  uint256 reserveAmount */\n  0x00\n    /* \"contracts/WW.sol\":734:743  devAmount */\n  dup2\n    /* \"contracts/WW.sol\":720:731  totalSupply */\n  dup4\n    /* \"contracts/WW.sol\":720:743  totalSupply - devAmount */\n  tag_27\n  swap2\n  swap1\n  tag_28\n  jump\t// in\ntag_27:\n    /* \"contracts/WW.sol\":696:743  uint256 reserveAmount = totalSupply - devAmount */\n  swap1\n  pop\n    /* \"contracts/WW.sol\":770:778  _reserve */\n  dup6\n    /* \"contracts/WW.sol\":754:767  reserveWallet */\n  0x07\n  0x00\n    /* \"contracts/WW.sol\":754:778  reserveWallet = _reserve */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/WW.sol\":800:804  _dev */\n  dup5\n    /* \"contracts/WW.sol\":788:797  devWallet */\n  0x08\n  0x00\n    /* \"contracts/WW.sol\":788:804  devWallet = _dev */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/WW.sol\":831:840  _donation */\n  dup4\n    /* \"contracts/WW.sol\":814:828  donationWallet */\n  0x09\n  0x00\n    /* \"contracts/WW.sol\":814:840  donationWallet = _donation */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/WW.sol\":851:878  _mint(devWallet, devAmount) */\n  tag_29\n    /* \"contracts/WW.sol\":857:866  devWallet */\n  0x08\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/WW.sol\":868:877  devAmount */\n  dup4\n    /* \"contracts/WW.sol\":851:856  _mint */\n  shl(0x20, tag_30)\n    /* \"contracts/WW.sol\":851:878  _mint(devWallet, devAmount) */\n  0x20\n  shr\n  jump\t// in\ntag_29:\n    /* \"contracts/WW.sol\":888:923  _mint(reserveWallet, reserveAmount) */\n  tag_31\n    /* \"contracts/WW.sol\":894:907  reserveWallet */\n  0x07\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/WW.sol\":909:922  reserveAmount */\n  dup3\n    /* \"contracts/WW.sol\":888:893  _mint */\n  shl(0x20, tag_30)\n    /* \"contracts/WW.sol\":888:923  _mint(reserveWallet, reserveAmount) */\n  0x20\n  shr\n  jump\t// in\ntag_31:\n    /* \"contracts/WW.sol\":995:999  true */\n  0x01\n    /* \"contracts/WW.sol\":962:980  _isExcludedFromTax */\n  0x0a\n    /* \"contracts/WW.sol\":962:992  _isExcludedFromTax[msg.sender] */\n  0x00\n    /* \"contracts/WW.sol\":981:991  msg.sender */\n  caller\n    /* \"contracts/WW.sol\":962:992  _isExcludedFromTax[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/WW.sol\":962:999  _isExcludedFromTax[msg.sender] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/WW.sol\":1045:1049  true */\n  0x01\n    /* \"contracts/WW.sol\":1009:1027  _isExcludedFromTax */\n  0x0a\n    /* \"contracts/WW.sol\":1009:1042  _isExcludedFromTax[reserveWallet] */\n  0x00\n    /* \"contracts/WW.sol\":1028:1041  reserveWallet */\n  0x07\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/WW.sol\":1009:1042  _isExcludedFromTax[reserveWallet] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/WW.sol\":1009:1049  _isExcludedFromTax[reserveWallet] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/WW.sol\":1091:1095  true */\n  0x01\n    /* \"contracts/WW.sol\":1059:1077  _isExcludedFromTax */\n  0x0a\n    /* \"contracts/WW.sol\":1059:1088  _isExcludedFromTax[devWallet] */\n  0x00\n    /* \"contracts/WW.sol\":1078:1087  devWallet */\n  0x08\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/WW.sol\":1059:1088  _isExcludedFromTax[devWallet] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/WW.sol\":1059:1095  _isExcludedFromTax[devWallet] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/WW.sol\":1142:1146  true */\n  0x01\n    /* \"contracts/WW.sol\":1105:1123  _isExcludedFromTax */\n  0x0a\n    /* \"contracts/WW.sol\":1105:1139  _isExcludedFromTax[donationWallet] */\n  0x00\n    /* \"contracts/WW.sol\":1124:1138  donationWallet */\n  0x09\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/WW.sol\":1105:1139  _isExcludedFromTax[donationWallet] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/WW.sol\":1105:1146  _isExcludedFromTax[donationWallet] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/WW.sol\":569:1153  {... */\n  pop\n  pop\n  pop\n    /* \"contracts/WW.sol\":455:1153  constructor(address _reserve, address _dev, address _donation) ERC20(\"World War Token\", \"WW\") Ownable(msg.sender) {... */\n  pop\n  pop\n  pop\n    /* \"contracts/WW.sol\":167:2362  contract WorldWarToken is ERC20, Ownable {... */\n  jump(tag_32)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\ntag_19:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2737:2742  uint8 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n  0x12\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\ntag_30:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7529  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7516  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n  tag_36\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_37\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_37:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\ntag_36:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n  tag_38\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n  shl(0x20, tag_39)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_38:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_39:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6095  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6082  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  tag_41\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_42\n  swap2\n  swap1\n  tag_43\n  jump\t// in\ntag_42:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  jump(tag_44)\ntag_41:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6297  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6298:6302  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6303  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6335:6340  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n  iszero\n  tag_45\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6392:6396  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6398:6409  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6416  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_46\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_47\n  jump\t// in\ntag_46:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\ntag_45:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6584:6589  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6581  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6562:6566  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6252:6614  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\ntag_44:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6642:6643  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6630  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  tag_48\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6812  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  jump(tag_49)\ntag_48:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7019:7024  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7012:7014  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\ntag_49:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  mload(0x40)\n  tag_50\n  swap2\n  swap1\n  tag_51\n  jump\t// in\ntag_50:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_53:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_55:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_56:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_93\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_55\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_57:\n    /* \"#utility.yul\":641:665   */\n  tag_95\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_56\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_96\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_96:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_58:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_98\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_57\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1508   */\ntag_3:\n    /* \"#utility.yul\":933:939   */\n  0x00\n    /* \"#utility.yul\":941:947   */\n  dup1\n    /* \"#utility.yul\":949:955   */\n  0x00\n    /* \"#utility.yul\":998:1000   */\n  0x60\n    /* \"#utility.yul\":986:995   */\n  dup5\n    /* \"#utility.yul\":977:984   */\n  dup7\n    /* \"#utility.yul\":973:996   */\n  sub\n    /* \"#utility.yul\":969:1001   */\n  slt\n    /* \"#utility.yul\":966:1085   */\n  iszero\n  tag_100\n  jumpi\n    /* \"#utility.yul\":1004:1083   */\n  tag_101\n  tag_53\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":966:1085   */\ntag_100:\n    /* \"#utility.yul\":1124:1125   */\n  0x00\n    /* \"#utility.yul\":1149:1213   */\n  tag_102\n    /* \"#utility.yul\":1205:1212   */\n  dup7\n    /* \"#utility.yul\":1196:1202   */\n  dup3\n    /* \"#utility.yul\":1185:1194   */\n  dup8\n    /* \"#utility.yul\":1181:1203   */\n  add\n    /* \"#utility.yul\":1149:1213   */\n  tag_58\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":1139:1213   */\n  swap4\n  pop\n    /* \"#utility.yul\":1095:1223   */\n  pop\n    /* \"#utility.yul\":1262:1264   */\n  0x20\n    /* \"#utility.yul\":1288:1352   */\n  tag_103\n    /* \"#utility.yul\":1344:1351   */\n  dup7\n    /* \"#utility.yul\":1335:1341   */\n  dup3\n    /* \"#utility.yul\":1324:1333   */\n  dup8\n    /* \"#utility.yul\":1320:1342   */\n  add\n    /* \"#utility.yul\":1288:1352   */\n  tag_58\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":1278:1352   */\n  swap3\n  pop\n    /* \"#utility.yul\":1233:1362   */\n  pop\n    /* \"#utility.yul\":1401:1403   */\n  0x40\n    /* \"#utility.yul\":1427:1491   */\n  tag_104\n    /* \"#utility.yul\":1483:1490   */\n  dup7\n    /* \"#utility.yul\":1474:1480   */\n  dup3\n    /* \"#utility.yul\":1463:1472   */\n  dup8\n    /* \"#utility.yul\":1459:1481   */\n  add\n    /* \"#utility.yul\":1427:1491   */\n  tag_58\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":1417:1491   */\n  swap2\n  pop\n    /* \"#utility.yul\":1372:1501   */\n  pop\n    /* \"#utility.yul\":845:1508   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1514:1613   */\ntag_59:\n    /* \"#utility.yul\":1566:1572   */\n  0x00\n    /* \"#utility.yul\":1600:1605   */\n  dup2\n    /* \"#utility.yul\":1594:1606   */\n  mload\n    /* \"#utility.yul\":1584:1606   */\n  swap1\n  pop\n    /* \"#utility.yul\":1514:1613   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1619:1799   */\ntag_60:\n    /* \"#utility.yul\":1667:1744   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1664:1665   */\n  0x00\n    /* \"#utility.yul\":1657:1745   */\n  mstore\n    /* \"#utility.yul\":1764:1768   */\n  0x41\n    /* \"#utility.yul\":1761:1762   */\n  0x04\n    /* \"#utility.yul\":1754:1769   */\n  mstore\n    /* \"#utility.yul\":1788:1792   */\n  0x24\n    /* \"#utility.yul\":1785:1786   */\n  0x00\n    /* \"#utility.yul\":1778:1793   */\n  revert\n    /* \"#utility.yul\":1805:1985   */\ntag_61:\n    /* \"#utility.yul\":1853:1930   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1850:1851   */\n  0x00\n    /* \"#utility.yul\":1843:1931   */\n  mstore\n    /* \"#utility.yul\":1950:1954   */\n  0x22\n    /* \"#utility.yul\":1947:1948   */\n  0x04\n    /* \"#utility.yul\":1940:1955   */\n  mstore\n    /* \"#utility.yul\":1974:1978   */\n  0x24\n    /* \"#utility.yul\":1971:1972   */\n  0x00\n    /* \"#utility.yul\":1964:1979   */\n  revert\n    /* \"#utility.yul\":1991:2311   */\ntag_62:\n    /* \"#utility.yul\":2035:2041   */\n  0x00\n    /* \"#utility.yul\":2072:2073   */\n  0x02\n    /* \"#utility.yul\":2066:2070   */\n  dup3\n    /* \"#utility.yul\":2062:2074   */\n  div\n    /* \"#utility.yul\":2052:2074   */\n  swap1\n  pop\n    /* \"#utility.yul\":2119:2120   */\n  0x01\n    /* \"#utility.yul\":2113:2117   */\n  dup3\n    /* \"#utility.yul\":2109:2121   */\n  and\n    /* \"#utility.yul\":2140:2158   */\n  dup1\n    /* \"#utility.yul\":2130:2211   */\n  tag_109\n  jumpi\n    /* \"#utility.yul\":2196:2200   */\n  0x7f\n    /* \"#utility.yul\":2188:2194   */\n  dup3\n    /* \"#utility.yul\":2184:2201   */\n  and\n    /* \"#utility.yul\":2174:2201   */\n  swap2\n  pop\n    /* \"#utility.yul\":2130:2211   */\ntag_109:\n    /* \"#utility.yul\":2258:2260   */\n  0x20\n    /* \"#utility.yul\":2250:2256   */\n  dup3\n    /* \"#utility.yul\":2247:2261   */\n  lt\n    /* \"#utility.yul\":2227:2245   */\n  dup2\n    /* \"#utility.yul\":2224:2262   */\n  sub\n    /* \"#utility.yul\":2221:2305   */\n  tag_110\n  jumpi\n    /* \"#utility.yul\":2277:2295   */\n  tag_111\n  tag_61\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":2221:2305   */\ntag_110:\n    /* \"#utility.yul\":2042:2311   */\n  pop\n    /* \"#utility.yul\":1991:2311   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2317:2458   */\ntag_63:\n    /* \"#utility.yul\":2366:2370   */\n  0x00\n    /* \"#utility.yul\":2389:2392   */\n  dup2\n    /* \"#utility.yul\":2381:2392   */\n  swap1\n  pop\n    /* \"#utility.yul\":2412:2415   */\n  dup2\n    /* \"#utility.yul\":2409:2410   */\n  0x00\n    /* \"#utility.yul\":2402:2416   */\n  mstore\n    /* \"#utility.yul\":2446:2450   */\n  0x20\n    /* \"#utility.yul\":2443:2444   */\n  0x00\n    /* \"#utility.yul\":2433:2451   */\n  keccak256\n    /* \"#utility.yul\":2425:2451   */\n  swap1\n  pop\n    /* \"#utility.yul\":2317:2458   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2464:2557   */\ntag_64:\n    /* \"#utility.yul\":2501:2507   */\n  0x00\n    /* \"#utility.yul\":2548:2550   */\n  0x20\n    /* \"#utility.yul\":2543:2545   */\n  0x1f\n    /* \"#utility.yul\":2536:2541   */\n  dup4\n    /* \"#utility.yul\":2532:2546   */\n  add\n    /* \"#utility.yul\":2528:2551   */\n  div\n    /* \"#utility.yul\":2518:2551   */\n  swap1\n  pop\n    /* \"#utility.yul\":2464:2557   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2563:2670   */\ntag_65:\n    /* \"#utility.yul\":2607:2615   */\n  0x00\n    /* \"#utility.yul\":2657:2662   */\n  dup3\n    /* \"#utility.yul\":2651:2655   */\n  dup3\n    /* \"#utility.yul\":2647:2663   */\n  shl\n    /* \"#utility.yul\":2626:2663   */\n  swap1\n  pop\n    /* \"#utility.yul\":2563:2670   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2676:3069   */\ntag_66:\n    /* \"#utility.yul\":2745:2751   */\n  0x00\n    /* \"#utility.yul\":2795:2796   */\n  0x08\n    /* \"#utility.yul\":2783:2793   */\n  dup4\n    /* \"#utility.yul\":2779:2797   */\n  mul\n    /* \"#utility.yul\":2818:2915   */\n  tag_116\n    /* \"#utility.yul\":2848:2914   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2837:2846   */\n  dup3\n    /* \"#utility.yul\":2818:2915   */\n  tag_65\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":2936:2975   */\n  tag_117\n    /* \"#utility.yul\":2966:2974   */\n  dup7\n    /* \"#utility.yul\":2955:2964   */\n  dup4\n    /* \"#utility.yul\":2936:2975   */\n  tag_65\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":2924:2975   */\n  swap6\n  pop\n    /* \"#utility.yul\":3008:3012   */\n  dup1\n    /* \"#utility.yul\":3004:3013   */\n  not\n    /* \"#utility.yul\":2997:3002   */\n  dup5\n    /* \"#utility.yul\":2993:3014   */\n  and\n    /* \"#utility.yul\":2984:3014   */\n  swap4\n  pop\n    /* \"#utility.yul\":3057:3061   */\n  dup1\n    /* \"#utility.yul\":3047:3055   */\n  dup7\n    /* \"#utility.yul\":3043:3062   */\n  and\n    /* \"#utility.yul\":3036:3041   */\n  dup5\n    /* \"#utility.yul\":3033:3063   */\n  or\n    /* \"#utility.yul\":3023:3063   */\n  swap3\n  pop\n    /* \"#utility.yul\":2752:3069   */\n  pop\n  pop\n    /* \"#utility.yul\":2676:3069   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3075:3152   */\ntag_67:\n    /* \"#utility.yul\":3112:3119   */\n  0x00\n    /* \"#utility.yul\":3141:3146   */\n  dup2\n    /* \"#utility.yul\":3130:3146   */\n  swap1\n  pop\n    /* \"#utility.yul\":3075:3152   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3158:3218   */\ntag_68:\n    /* \"#utility.yul\":3186:3189   */\n  0x00\n    /* \"#utility.yul\":3207:3212   */\n  dup2\n    /* \"#utility.yul\":3200:3212   */\n  swap1\n  pop\n    /* \"#utility.yul\":3158:3218   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3224:3366   */\ntag_69:\n    /* \"#utility.yul\":3274:3283   */\n  0x00\n    /* \"#utility.yul\":3307:3360   */\n  tag_121\n    /* \"#utility.yul\":3325:3359   */\n  tag_122\n    /* \"#utility.yul\":3334:3358   */\n  tag_123\n    /* \"#utility.yul\":3352:3357   */\n  dup5\n    /* \"#utility.yul\":3334:3358   */\n  tag_67\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":3325:3359   */\n  tag_68\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":3307:3360   */\n  tag_67\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":3294:3360   */\n  swap1\n  pop\n    /* \"#utility.yul\":3224:3366   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3372:3447   */\ntag_70:\n    /* \"#utility.yul\":3415:3418   */\n  0x00\n    /* \"#utility.yul\":3436:3441   */\n  dup2\n    /* \"#utility.yul\":3429:3441   */\n  swap1\n  pop\n    /* \"#utility.yul\":3372:3447   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3453:3722   */\ntag_71:\n    /* \"#utility.yul\":3563:3602   */\n  tag_126\n    /* \"#utility.yul\":3594:3601   */\n  dup4\n    /* \"#utility.yul\":3563:3602   */\n  tag_69\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":3624:3715   */\n  tag_127\n    /* \"#utility.yul\":3673:3714   */\n  tag_128\n    /* \"#utility.yul\":3697:3713   */\n  dup3\n    /* \"#utility.yul\":3673:3714   */\n  tag_70\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":3665:3671   */\n  dup5\n    /* \"#utility.yul\":3658:3662   */\n  dup5\n    /* \"#utility.yul\":3652:3663   */\n  sload\n    /* \"#utility.yul\":3624:3715   */\n  tag_66\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":3618:3622   */\n  dup3\n    /* \"#utility.yul\":3611:3716   */\n  sstore\n    /* \"#utility.yul\":3529:3722   */\n  pop\n    /* \"#utility.yul\":3453:3722   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3728:3801   */\ntag_72:\n    /* \"#utility.yul\":3773:3776   */\n  0x00\n    /* \"#utility.yul\":3728:3801   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3807:3996   */\ntag_73:\n    /* \"#utility.yul\":3884:3916   */\n  tag_131\n  tag_72\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":3925:3990   */\n  tag_132\n    /* \"#utility.yul\":3983:3989   */\n  dup2\n    /* \"#utility.yul\":3975:3981   */\n  dup5\n    /* \"#utility.yul\":3969:3973   */\n  dup5\n    /* \"#utility.yul\":3925:3990   */\n  tag_71\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":3860:3996   */\n  pop\n    /* \"#utility.yul\":3807:3996   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4002:4188   */\ntag_74:\n    /* \"#utility.yul\":4062:4182   */\ntag_134:\n    /* \"#utility.yul\":4079:4082   */\n  dup2\n    /* \"#utility.yul\":4072:4077   */\n  dup2\n    /* \"#utility.yul\":4069:4083   */\n  lt\n    /* \"#utility.yul\":4062:4182   */\n  iszero\n  tag_136\n  jumpi\n    /* \"#utility.yul\":4133:4172   */\n  tag_137\n    /* \"#utility.yul\":4170:4171   */\n  0x00\n    /* \"#utility.yul\":4163:4168   */\n  dup3\n    /* \"#utility.yul\":4133:4172   */\n  tag_73\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":4106:4107   */\n  0x01\n    /* \"#utility.yul\":4099:4104   */\n  dup2\n    /* \"#utility.yul\":4095:4108   */\n  add\n    /* \"#utility.yul\":4086:4108   */\n  swap1\n  pop\n    /* \"#utility.yul\":4062:4182   */\n  jump(tag_134)\ntag_136:\n    /* \"#utility.yul\":4002:4188   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4194:4737   */\ntag_75:\n    /* \"#utility.yul\":4295:4297   */\n  0x1f\n    /* \"#utility.yul\":4290:4293   */\n  dup3\n    /* \"#utility.yul\":4287:4298   */\n  gt\n    /* \"#utility.yul\":4284:4730   */\n  iszero\n  tag_139\n  jumpi\n    /* \"#utility.yul\":4329:4367   */\n  tag_140\n    /* \"#utility.yul\":4361:4366   */\n  dup2\n    /* \"#utility.yul\":4329:4367   */\n  tag_63\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":4413:4442   */\n  tag_141\n    /* \"#utility.yul\":4431:4441   */\n  dup5\n    /* \"#utility.yul\":4413:4442   */\n  tag_64\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":4403:4411   */\n  dup2\n    /* \"#utility.yul\":4399:4443   */\n  add\n    /* \"#utility.yul\":4596:4598   */\n  0x20\n    /* \"#utility.yul\":4584:4594   */\n  dup6\n    /* \"#utility.yul\":4581:4599   */\n  lt\n    /* \"#utility.yul\":4578:4627   */\n  iszero\n  tag_142\n  jumpi\n    /* \"#utility.yul\":4617:4625   */\n  dup2\n    /* \"#utility.yul\":4602:4625   */\n  swap1\n  pop\n    /* \"#utility.yul\":4578:4627   */\ntag_142:\n    /* \"#utility.yul\":4640:4720   */\n  tag_143\n    /* \"#utility.yul\":4696:4718   */\n  tag_144\n    /* \"#utility.yul\":4714:4717   */\n  dup6\n    /* \"#utility.yul\":4696:4718   */\n  tag_64\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":4686:4694   */\n  dup4\n    /* \"#utility.yul\":4682:4719   */\n  add\n    /* \"#utility.yul\":4669:4680   */\n  dup3\n    /* \"#utility.yul\":4640:4720   */\n  tag_74\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":4299:4730   */\n  pop\n  pop\n    /* \"#utility.yul\":4284:4730   */\ntag_139:\n    /* \"#utility.yul\":4194:4737   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4743:4860   */\ntag_76:\n    /* \"#utility.yul\":4797:4805   */\n  0x00\n    /* \"#utility.yul\":4847:4852   */\n  dup3\n    /* \"#utility.yul\":4841:4845   */\n  dup3\n    /* \"#utility.yul\":4837:4853   */\n  shr\n    /* \"#utility.yul\":4816:4853   */\n  swap1\n  pop\n    /* \"#utility.yul\":4743:4860   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4866:5035   */\ntag_77:\n    /* \"#utility.yul\":4910:4916   */\n  0x00\n    /* \"#utility.yul\":4943:4994   */\n  tag_147\n    /* \"#utility.yul\":4991:4992   */\n  0x00\n    /* \"#utility.yul\":4987:4993   */\n  not\n    /* \"#utility.yul\":4979:4984   */\n  dup5\n    /* \"#utility.yul\":4976:4977   */\n  0x08\n    /* \"#utility.yul\":4972:4985   */\n  mul\n    /* \"#utility.yul\":4943:4994   */\n  tag_76\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":4939:4995   */\n  not\n    /* \"#utility.yul\":5024:5028   */\n  dup1\n    /* \"#utility.yul\":5018:5022   */\n  dup4\n    /* \"#utility.yul\":5014:5029   */\n  and\n    /* \"#utility.yul\":5004:5029   */\n  swap2\n  pop\n    /* \"#utility.yul\":4917:5035   */\n  pop\n    /* \"#utility.yul\":4866:5035   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5040:5335   */\ntag_78:\n    /* \"#utility.yul\":5116:5120   */\n  0x00\n    /* \"#utility.yul\":5262:5291   */\n  tag_149\n    /* \"#utility.yul\":5287:5290   */\n  dup4\n    /* \"#utility.yul\":5281:5285   */\n  dup4\n    /* \"#utility.yul\":5262:5291   */\n  tag_77\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":5254:5291   */\n  swap2\n  pop\n    /* \"#utility.yul\":5324:5327   */\n  dup3\n    /* \"#utility.yul\":5321:5322   */\n  0x02\n    /* \"#utility.yul\":5317:5328   */\n  mul\n    /* \"#utility.yul\":5311:5315   */\n  dup3\n    /* \"#utility.yul\":5308:5329   */\n  or\n    /* \"#utility.yul\":5300:5329   */\n  swap1\n  pop\n    /* \"#utility.yul\":5040:5335   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5340:6735   */\ntag_9:\n    /* \"#utility.yul\":5457:5494   */\n  tag_151\n    /* \"#utility.yul\":5490:5493   */\n  dup3\n    /* \"#utility.yul\":5457:5494   */\n  tag_59\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":5559:5577   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5551:5557   */\n  dup2\n    /* \"#utility.yul\":5548:5578   */\n  gt\n    /* \"#utility.yul\":5545:5601   */\n  iszero\n  tag_152\n  jumpi\n    /* \"#utility.yul\":5581:5599   */\n  tag_153\n  tag_60\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":5545:5601   */\ntag_152:\n    /* \"#utility.yul\":5625:5663   */\n  tag_154\n    /* \"#utility.yul\":5657:5661   */\n  dup3\n    /* \"#utility.yul\":5651:5662   */\n  sload\n    /* \"#utility.yul\":5625:5663   */\n  tag_62\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":5710:5777   */\n  tag_155\n    /* \"#utility.yul\":5770:5776   */\n  dup3\n    /* \"#utility.yul\":5762:5768   */\n  dup3\n    /* \"#utility.yul\":5756:5760   */\n  dup6\n    /* \"#utility.yul\":5710:5777   */\n  tag_75\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":5804:5805   */\n  0x00\n    /* \"#utility.yul\":5828:5832   */\n  0x20\n    /* \"#utility.yul\":5815:5832   */\n  swap1\n  pop\n    /* \"#utility.yul\":5860:5862   */\n  0x1f\n    /* \"#utility.yul\":5852:5858   */\n  dup4\n    /* \"#utility.yul\":5849:5863   */\n  gt\n    /* \"#utility.yul\":5877:5878   */\n  0x01\n    /* \"#utility.yul\":5872:6490   */\n  dup2\n  eq\n  tag_157\n  jumpi\n    /* \"#utility.yul\":6534:6535   */\n  0x00\n    /* \"#utility.yul\":6551:6557   */\n  dup5\n    /* \"#utility.yul\":6548:6625   */\n  iszero\n  tag_158\n  jumpi\n    /* \"#utility.yul\":6600:6609   */\n  dup3\n    /* \"#utility.yul\":6595:6598   */\n  dup8\n    /* \"#utility.yul\":6591:6610   */\n  add\n    /* \"#utility.yul\":6585:6611   */\n  mload\n    /* \"#utility.yul\":6576:6611   */\n  swap1\n  pop\n    /* \"#utility.yul\":6548:6625   */\ntag_158:\n    /* \"#utility.yul\":6651:6718   */\n  tag_159\n    /* \"#utility.yul\":6711:6717   */\n  dup6\n    /* \"#utility.yul\":6704:6709   */\n  dup3\n    /* \"#utility.yul\":6651:6718   */\n  tag_78\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":6645:6649   */\n  dup7\n    /* \"#utility.yul\":6638:6719   */\n  sstore\n    /* \"#utility.yul\":6507:6729   */\n  pop\n    /* \"#utility.yul\":5842:6729   */\n  jump(tag_156)\n    /* \"#utility.yul\":5872:6490   */\ntag_157:\n    /* \"#utility.yul\":5924:5928   */\n  0x1f\n    /* \"#utility.yul\":5920:5929   */\n  not\n    /* \"#utility.yul\":5912:5918   */\n  dup5\n    /* \"#utility.yul\":5908:5930   */\n  and\n    /* \"#utility.yul\":5958:5995   */\n  tag_160\n    /* \"#utility.yul\":5990:5994   */\n  dup7\n    /* \"#utility.yul\":5958:5995   */\n  tag_63\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":6017:6018   */\n  0x00\n    /* \"#utility.yul\":6031:6239   */\ntag_161:\n    /* \"#utility.yul\":6045:6052   */\n  dup3\n    /* \"#utility.yul\":6042:6043   */\n  dup2\n    /* \"#utility.yul\":6039:6053   */\n  lt\n    /* \"#utility.yul\":6031:6239   */\n  iszero\n  tag_163\n  jumpi\n    /* \"#utility.yul\":6124:6133   */\n  dup5\n    /* \"#utility.yul\":6119:6122   */\n  dup10\n    /* \"#utility.yul\":6115:6134   */\n  add\n    /* \"#utility.yul\":6109:6135   */\n  mload\n    /* \"#utility.yul\":6101:6107   */\n  dup3\n    /* \"#utility.yul\":6094:6136   */\n  sstore\n    /* \"#utility.yul\":6175:6176   */\n  0x01\n    /* \"#utility.yul\":6167:6173   */\n  dup3\n    /* \"#utility.yul\":6163:6177   */\n  add\n    /* \"#utility.yul\":6153:6177   */\n  swap2\n  pop\n    /* \"#utility.yul\":6222:6224   */\n  0x20\n    /* \"#utility.yul\":6211:6220   */\n  dup6\n    /* \"#utility.yul\":6207:6225   */\n  add\n    /* \"#utility.yul\":6194:6225   */\n  swap5\n  pop\n    /* \"#utility.yul\":6068:6072   */\n  0x20\n    /* \"#utility.yul\":6065:6066   */\n  dup2\n    /* \"#utility.yul\":6061:6073   */\n  add\n    /* \"#utility.yul\":6056:6073   */\n  swap1\n  pop\n    /* \"#utility.yul\":6031:6239   */\n  jump(tag_161)\ntag_163:\n    /* \"#utility.yul\":6267:6273   */\n  dup7\n    /* \"#utility.yul\":6258:6265   */\n  dup4\n    /* \"#utility.yul\":6255:6274   */\n  lt\n    /* \"#utility.yul\":6252:6431   */\n  iszero\n  tag_164\n  jumpi\n    /* \"#utility.yul\":6325:6334   */\n  dup5\n    /* \"#utility.yul\":6320:6323   */\n  dup10\n    /* \"#utility.yul\":6316:6335   */\n  add\n    /* \"#utility.yul\":6310:6336   */\n  mload\n    /* \"#utility.yul\":6368:6416   */\n  tag_165\n    /* \"#utility.yul\":6410:6414   */\n  0x1f\n    /* \"#utility.yul\":6402:6408   */\n  dup10\n    /* \"#utility.yul\":6398:6415   */\n  and\n    /* \"#utility.yul\":6387:6396   */\n  dup3\n    /* \"#utility.yul\":6368:6416   */\n  tag_77\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":6360:6366   */\n  dup4\n    /* \"#utility.yul\":6353:6417   */\n  sstore\n    /* \"#utility.yul\":6275:6431   */\n  pop\n    /* \"#utility.yul\":6252:6431   */\ntag_164:\n    /* \"#utility.yul\":6477:6478   */\n  0x01\n    /* \"#utility.yul\":6473:6474   */\n  0x02\n    /* \"#utility.yul\":6465:6471   */\n  dup9\n    /* \"#utility.yul\":6461:6475   */\n  mul\n    /* \"#utility.yul\":6457:6479   */\n  add\n    /* \"#utility.yul\":6451:6455   */\n  dup9\n    /* \"#utility.yul\":6444:6480   */\n  sstore\n    /* \"#utility.yul\":5879:6490   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5842:6729   */\ntag_156:\n  pop\n    /* \"#utility.yul\":5432:6735   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5340:6735   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6741:6859   */\ntag_79:\n    /* \"#utility.yul\":6828:6852   */\n  tag_167\n    /* \"#utility.yul\":6846:6851   */\n  dup2\n    /* \"#utility.yul\":6828:6852   */\n  tag_56\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":6823:6826   */\n  dup3\n    /* \"#utility.yul\":6816:6853   */\n  mstore\n    /* \"#utility.yul\":6741:6859   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6865:7087   */\ntag_14:\n    /* \"#utility.yul\":6958:6962   */\n  0x00\n    /* \"#utility.yul\":6996:6998   */\n  0x20\n    /* \"#utility.yul\":6985:6994   */\n  dup3\n    /* \"#utility.yul\":6981:6999   */\n  add\n    /* \"#utility.yul\":6973:6999   */\n  swap1\n  pop\n    /* \"#utility.yul\":7009:7080   */\n  tag_169\n    /* \"#utility.yul\":7077:7078   */\n  0x00\n    /* \"#utility.yul\":7066:7075   */\n  dup4\n    /* \"#utility.yul\":7062:7079   */\n  add\n    /* \"#utility.yul\":7053:7059   */\n  dup5\n    /* \"#utility.yul\":7009:7080   */\n  tag_79\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":6865:7087   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7093:7273   */\ntag_80:\n    /* \"#utility.yul\":7141:7218   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":7138:7139   */\n  0x00\n    /* \"#utility.yul\":7131:7219   */\n  mstore\n    /* \"#utility.yul\":7238:7242   */\n  0x11\n    /* \"#utility.yul\":7235:7236   */\n  0x04\n    /* \"#utility.yul\":7228:7243   */\n  mstore\n    /* \"#utility.yul\":7262:7266   */\n  0x24\n    /* \"#utility.yul\":7259:7260   */\n  0x00\n    /* \"#utility.yul\":7252:7267   */\n  revert\n    /* \"#utility.yul\":7279:7381   */\ntag_81:\n    /* \"#utility.yul\":7321:7329   */\n  0x00\n    /* \"#utility.yul\":7368:7373   */\n  dup2\n    /* \"#utility.yul\":7365:7366   */\n  0x01\n    /* \"#utility.yul\":7361:7374   */\n  shr\n    /* \"#utility.yul\":7340:7374   */\n  swap1\n  pop\n    /* \"#utility.yul\":7279:7381   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7387:8235   */\ntag_82:\n    /* \"#utility.yul\":7448:7453   */\n  0x00\n    /* \"#utility.yul\":7455:7459   */\n  dup1\n    /* \"#utility.yul\":7479:7485   */\n  dup3\n    /* \"#utility.yul\":7470:7485   */\n  swap2\n  pop\n    /* \"#utility.yul\":7503:7508   */\n  dup4\n    /* \"#utility.yul\":7494:7508   */\n  swap1\n  pop\n    /* \"#utility.yul\":7517:8229   */\ntag_173:\n    /* \"#utility.yul\":7538:7539   */\n  0x01\n    /* \"#utility.yul\":7528:7536   */\n  dup6\n    /* \"#utility.yul\":7525:7540   */\n  gt\n    /* \"#utility.yul\":7517:8229   */\n  iszero\n  tag_175\n  jumpi\n    /* \"#utility.yul\":7633:7637   */\n  dup1\n    /* \"#utility.yul\":7628:7631   */\n  dup7\n    /* \"#utility.yul\":7624:7638   */\n  div\n    /* \"#utility.yul\":7618:7622   */\n  dup2\n    /* \"#utility.yul\":7615:7639   */\n  gt\n    /* \"#utility.yul\":7612:7662   */\n  iszero\n  tag_176\n  jumpi\n    /* \"#utility.yul\":7642:7660   */\n  tag_177\n  tag_80\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":7612:7662   */\ntag_176:\n    /* \"#utility.yul\":7692:7693   */\n  0x01\n    /* \"#utility.yul\":7682:7690   */\n  dup6\n    /* \"#utility.yul\":7678:7694   */\n  and\n    /* \"#utility.yul\":7675:8126   */\n  iszero\n  tag_178\n  jumpi\n    /* \"#utility.yul\":8107:8111   */\n  dup1\n    /* \"#utility.yul\":8100:8105   */\n  dup3\n    /* \"#utility.yul\":8096:8112   */\n  mul\n    /* \"#utility.yul\":8087:8112   */\n  swap2\n  pop\n    /* \"#utility.yul\":7675:8126   */\ntag_178:\n    /* \"#utility.yul\":8157:8161   */\n  dup1\n    /* \"#utility.yul\":8151:8155   */\n  dup2\n    /* \"#utility.yul\":8147:8162   */\n  mul\n    /* \"#utility.yul\":8139:8162   */\n  swap1\n  pop\n    /* \"#utility.yul\":8187:8219   */\n  tag_179\n    /* \"#utility.yul\":8210:8218   */\n  dup6\n    /* \"#utility.yul\":8187:8219   */\n  tag_81\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":8175:8219   */\n  swap5\n  pop\n    /* \"#utility.yul\":7517:8229   */\n  jump(tag_173)\ntag_175:\n    /* \"#utility.yul\":7387:8235   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8241:9314   */\ntag_83:\n    /* \"#utility.yul\":8295:8300   */\n  0x00\n    /* \"#utility.yul\":8486:8494   */\n  dup3\n    /* \"#utility.yul\":8476:8516   */\n  tag_181\n  jumpi\n    /* \"#utility.yul\":8507:8508   */\n  0x01\n    /* \"#utility.yul\":8498:8508   */\n  swap1\n  pop\n    /* \"#utility.yul\":8509:8514   */\n  jump(tag_180)\n    /* \"#utility.yul\":8476:8516   */\ntag_181:\n    /* \"#utility.yul\":8535:8539   */\n  dup2\n    /* \"#utility.yul\":8525:8561   */\n  tag_182\n  jumpi\n    /* \"#utility.yul\":8552:8553   */\n  0x00\n    /* \"#utility.yul\":8543:8553   */\n  swap1\n  pop\n    /* \"#utility.yul\":8554:8559   */\n  jump(tag_180)\n    /* \"#utility.yul\":8525:8561   */\ntag_182:\n    /* \"#utility.yul\":8621:8625   */\n  dup2\n    /* \"#utility.yul\":8669:8670   */\n  0x01\n    /* \"#utility.yul\":8664:8691   */\n  dup2\n  eq\n  tag_184\n  jumpi\n    /* \"#utility.yul\":8705:8706   */\n  0x02\n    /* \"#utility.yul\":8700:8891   */\n  dup2\n  eq\n  tag_185\n  jumpi\n    /* \"#utility.yul\":8614:8891   */\n  jump(tag_183)\n    /* \"#utility.yul\":8664:8691   */\ntag_184:\n    /* \"#utility.yul\":8682:8683   */\n  0x01\n    /* \"#utility.yul\":8673:8683   */\n  swap2\n  pop\n    /* \"#utility.yul\":8684:8689   */\n  pop\n  jump(tag_180)\n    /* \"#utility.yul\":8700:8891   */\ntag_185:\n    /* \"#utility.yul\":8745:8748   */\n  0xff\n    /* \"#utility.yul\":8735:8743   */\n  dup5\n    /* \"#utility.yul\":8732:8749   */\n  gt\n    /* \"#utility.yul\":8729:8772   */\n  iszero\n  tag_186\n  jumpi\n    /* \"#utility.yul\":8752:8770   */\n  tag_187\n  tag_80\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":8729:8772   */\ntag_186:\n    /* \"#utility.yul\":8801:8809   */\n  dup4\n    /* \"#utility.yul\":8798:8799   */\n  0x02\n    /* \"#utility.yul\":8794:8810   */\n  exp\n    /* \"#utility.yul\":8785:8810   */\n  swap2\n  pop\n    /* \"#utility.yul\":8836:8839   */\n  dup5\n    /* \"#utility.yul\":8829:8834   */\n  dup3\n    /* \"#utility.yul\":8826:8840   */\n  gt\n    /* \"#utility.yul\":8823:8863   */\n  iszero\n  tag_188\n  jumpi\n    /* \"#utility.yul\":8843:8861   */\n  tag_189\n  tag_80\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":8823:8863   */\ntag_188:\n    /* \"#utility.yul\":8876:8881   */\n  pop\n  jump(tag_180)\n    /* \"#utility.yul\":8614:8891   */\ntag_183:\n  pop\n    /* \"#utility.yul\":9000:9002   */\n  0x20\n    /* \"#utility.yul\":8990:8998   */\n  dup4\n    /* \"#utility.yul\":8987:9003   */\n  lt\n    /* \"#utility.yul\":8981:8984   */\n  0x0133\n    /* \"#utility.yul\":8975:8979   */\n  dup4\n    /* \"#utility.yul\":8972:8985   */\n  lt\n    /* \"#utility.yul\":8968:9004   */\n  and\n    /* \"#utility.yul\":8950:8952   */\n  0x4e\n    /* \"#utility.yul\":8940:8948   */\n  dup5\n    /* \"#utility.yul\":8937:8953   */\n  lt\n    /* \"#utility.yul\":8932:8934   */\n  0x0b\n    /* \"#utility.yul\":8926:8930   */\n  dup5\n    /* \"#utility.yul\":8923:8935   */\n  lt\n    /* \"#utility.yul\":8919:8954   */\n  and\n    /* \"#utility.yul\":8903:9014   */\n  or\n    /* \"#utility.yul\":8900:9146   */\n  iszero\n  tag_190\n  jumpi\n    /* \"#utility.yul\":9056:9064   */\n  dup3\n    /* \"#utility.yul\":9050:9054   */\n  dup3\n    /* \"#utility.yul\":9046:9065   */\n  exp\n    /* \"#utility.yul\":9037:9065   */\n  swap1\n  pop\n    /* \"#utility.yul\":9091:9094   */\n  dup4\n    /* \"#utility.yul\":9084:9089   */\n  dup2\n    /* \"#utility.yul\":9081:9095   */\n  gt\n    /* \"#utility.yul\":9078:9118   */\n  iszero\n  tag_191\n  jumpi\n    /* \"#utility.yul\":9098:9116   */\n  tag_192\n  tag_80\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":9078:9118   */\ntag_191:\n    /* \"#utility.yul\":9131:9136   */\n  jump(tag_180)\n    /* \"#utility.yul\":8900:9146   */\ntag_190:\n    /* \"#utility.yul\":9171:9213   */\n  tag_193\n    /* \"#utility.yul\":9209:9212   */\n  dup5\n    /* \"#utility.yul\":9199:9207   */\n  dup5\n    /* \"#utility.yul\":9193:9197   */\n  dup5\n    /* \"#utility.yul\":9190:9191   */\n  0x01\n    /* \"#utility.yul\":9171:9213   */\n  tag_82\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":9156:9213   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":9245:9249   */\n  dup2\n    /* \"#utility.yul\":9240:9243   */\n  dup5\n    /* \"#utility.yul\":9236:9250   */\n  div\n    /* \"#utility.yul\":9229:9234   */\n  dup2\n    /* \"#utility.yul\":9226:9251   */\n  gt\n    /* \"#utility.yul\":9223:9274   */\n  iszero\n  tag_194\n  jumpi\n    /* \"#utility.yul\":9254:9272   */\n  tag_195\n  tag_80\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":9223:9274   */\ntag_194:\n    /* \"#utility.yul\":9303:9307   */\n  dup2\n    /* \"#utility.yul\":9296:9301   */\n  dup2\n    /* \"#utility.yul\":9292:9308   */\n  mul\n    /* \"#utility.yul\":9283:9308   */\n  swap1\n  pop\n    /* \"#utility.yul\":8241:9314   */\ntag_180:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9320:9406   */\ntag_84:\n    /* \"#utility.yul\":9355:9362   */\n  0x00\n    /* \"#utility.yul\":9395:9399   */\n  0xff\n    /* \"#utility.yul\":9388:9393   */\n  dup3\n    /* \"#utility.yul\":9384:9400   */\n  and\n    /* \"#utility.yul\":9373:9400   */\n  swap1\n  pop\n    /* \"#utility.yul\":9320:9406   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9412:9693   */\ntag_21:\n    /* \"#utility.yul\":9470:9475   */\n  0x00\n    /* \"#utility.yul\":9494:9517   */\n  tag_198\n    /* \"#utility.yul\":9512:9516   */\n  dup3\n    /* \"#utility.yul\":9494:9517   */\n  tag_67\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":9486:9517   */\n  swap2\n  pop\n    /* \"#utility.yul\":9538:9563   */\n  tag_199\n    /* \"#utility.yul\":9554:9562   */\n  dup4\n    /* \"#utility.yul\":9538:9563   */\n  tag_84\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":9526:9563   */\n  swap3\n  pop\n    /* \"#utility.yul\":9582:9686   */\n  tag_200\n    /* \"#utility.yul\":9619:9685   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":9609:9617   */\n  dup5\n    /* \"#utility.yul\":9603:9607   */\n  dup5\n    /* \"#utility.yul\":9582:9686   */\n  tag_83\n  jump\t// in\ntag_200:\n    /* \"#utility.yul\":9573:9686   */\n  swap1\n  pop\n    /* \"#utility.yul\":9412:9693   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9699:10109   */\ntag_23:\n    /* \"#utility.yul\":9739:9746   */\n  0x00\n    /* \"#utility.yul\":9762:9782   */\n  tag_202\n    /* \"#utility.yul\":9780:9781   */\n  dup3\n    /* \"#utility.yul\":9762:9782   */\n  tag_67\n  jump\t// in\ntag_202:\n    /* \"#utility.yul\":9757:9782   */\n  swap2\n  pop\n    /* \"#utility.yul\":9796:9816   */\n  tag_203\n    /* \"#utility.yul\":9814:9815   */\n  dup4\n    /* \"#utility.yul\":9796:9816   */\n  tag_67\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":9791:9816   */\n  swap3\n  pop\n    /* \"#utility.yul\":9851:9852   */\n  dup3\n    /* \"#utility.yul\":9848:9849   */\n  dup3\n    /* \"#utility.yul\":9844:9853   */\n  mul\n    /* \"#utility.yul\":9873:9903   */\n  tag_204\n    /* \"#utility.yul\":9891:9902   */\n  dup2\n    /* \"#utility.yul\":9873:9903   */\n  tag_67\n  jump\t// in\ntag_204:\n    /* \"#utility.yul\":9862:9903   */\n  swap2\n  pop\n    /* \"#utility.yul\":10052:10053   */\n  dup3\n    /* \"#utility.yul\":10043:10050   */\n  dup3\n    /* \"#utility.yul\":10039:10054   */\n  div\n    /* \"#utility.yul\":10036:10037   */\n  dup5\n    /* \"#utility.yul\":10033:10055   */\n  eq\n    /* \"#utility.yul\":10013:10014   */\n  dup4\n    /* \"#utility.yul\":10006:10015   */\n  iszero\n    /* \"#utility.yul\":9986:10069   */\n  or\n    /* \"#utility.yul\":9963:10102   */\n  tag_205\n  jumpi\n    /* \"#utility.yul\":10082:10100   */\n  tag_206\n  tag_80\n  jump\t// in\ntag_206:\n    /* \"#utility.yul\":9963:10102   */\ntag_205:\n    /* \"#utility.yul\":9747:10109   */\n  pop\n    /* \"#utility.yul\":9699:10109   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10115:10295   */\ntag_85:\n    /* \"#utility.yul\":10163:10240   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":10160:10161   */\n  0x00\n    /* \"#utility.yul\":10153:10241   */\n  mstore\n    /* \"#utility.yul\":10260:10264   */\n  0x12\n    /* \"#utility.yul\":10257:10258   */\n  0x04\n    /* \"#utility.yul\":10250:10265   */\n  mstore\n    /* \"#utility.yul\":10284:10288   */\n  0x24\n    /* \"#utility.yul\":10281:10282   */\n  0x00\n    /* \"#utility.yul\":10274:10289   */\n  revert\n    /* \"#utility.yul\":10301:10486   */\ntag_26:\n    /* \"#utility.yul\":10341:10342   */\n  0x00\n    /* \"#utility.yul\":10358:10378   */\n  tag_209\n    /* \"#utility.yul\":10376:10377   */\n  dup3\n    /* \"#utility.yul\":10358:10378   */\n  tag_67\n  jump\t// in\ntag_209:\n    /* \"#utility.yul\":10353:10378   */\n  swap2\n  pop\n    /* \"#utility.yul\":10392:10412   */\n  tag_210\n    /* \"#utility.yul\":10410:10411   */\n  dup4\n    /* \"#utility.yul\":10392:10412   */\n  tag_67\n  jump\t// in\ntag_210:\n    /* \"#utility.yul\":10387:10412   */\n  swap3\n  pop\n    /* \"#utility.yul\":10431:10432   */\n  dup3\n    /* \"#utility.yul\":10421:10456   */\n  tag_211\n  jumpi\n    /* \"#utility.yul\":10436:10454   */\n  tag_212\n  tag_85\n  jump\t// in\ntag_212:\n    /* \"#utility.yul\":10421:10456   */\ntag_211:\n    /* \"#utility.yul\":10478:10479   */\n  dup3\n    /* \"#utility.yul\":10475:10476   */\n  dup3\n    /* \"#utility.yul\":10471:10480   */\n  div\n    /* \"#utility.yul\":10466:10480   */\n  swap1\n  pop\n    /* \"#utility.yul\":10301:10486   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10492:10686   */\ntag_28:\n    /* \"#utility.yul\":10532:10536   */\n  0x00\n    /* \"#utility.yul\":10552:10572   */\n  tag_214\n    /* \"#utility.yul\":10570:10571   */\n  dup3\n    /* \"#utility.yul\":10552:10572   */\n  tag_67\n  jump\t// in\ntag_214:\n    /* \"#utility.yul\":10547:10572   */\n  swap2\n  pop\n    /* \"#utility.yul\":10586:10606   */\n  tag_215\n    /* \"#utility.yul\":10604:10605   */\n  dup4\n    /* \"#utility.yul\":10586:10606   */\n  tag_67\n  jump\t// in\ntag_215:\n    /* \"#utility.yul\":10581:10606   */\n  swap3\n  pop\n    /* \"#utility.yul\":10630:10631   */\n  dup3\n    /* \"#utility.yul\":10627:10628   */\n  dup3\n    /* \"#utility.yul\":10623:10632   */\n  sub\n    /* \"#utility.yul\":10615:10632   */\n  swap1\n  pop\n    /* \"#utility.yul\":10654:10655   */\n  dup2\n    /* \"#utility.yul\":10648:10652   */\n  dup2\n    /* \"#utility.yul\":10645:10656   */\n  gt\n    /* \"#utility.yul\":10642:10679   */\n  iszero\n  tag_216\n  jumpi\n    /* \"#utility.yul\":10659:10677   */\n  tag_217\n  tag_80\n  jump\t// in\ntag_217:\n    /* \"#utility.yul\":10642:10679   */\ntag_216:\n    /* \"#utility.yul\":10492:10686   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10692:10883   */\ntag_43:\n    /* \"#utility.yul\":10732:10735   */\n  0x00\n    /* \"#utility.yul\":10751:10771   */\n  tag_219\n    /* \"#utility.yul\":10769:10770   */\n  dup3\n    /* \"#utility.yul\":10751:10771   */\n  tag_67\n  jump\t// in\ntag_219:\n    /* \"#utility.yul\":10746:10771   */\n  swap2\n  pop\n    /* \"#utility.yul\":10785:10805   */\n  tag_220\n    /* \"#utility.yul\":10803:10804   */\n  dup4\n    /* \"#utility.yul\":10785:10805   */\n  tag_67\n  jump\t// in\ntag_220:\n    /* \"#utility.yul\":10780:10805   */\n  swap3\n  pop\n    /* \"#utility.yul\":10828:10829   */\n  dup3\n    /* \"#utility.yul\":10825:10826   */\n  dup3\n    /* \"#utility.yul\":10821:10830   */\n  add\n    /* \"#utility.yul\":10814:10830   */\n  swap1\n  pop\n    /* \"#utility.yul\":10849:10852   */\n  dup1\n    /* \"#utility.yul\":10846:10847   */\n  dup3\n    /* \"#utility.yul\":10843:10853   */\n  gt\n    /* \"#utility.yul\":10840:10876   */\n  iszero\n  tag_221\n  jumpi\n    /* \"#utility.yul\":10856:10874   */\n  tag_222\n  tag_80\n  jump\t// in\ntag_222:\n    /* \"#utility.yul\":10840:10876   */\ntag_221:\n    /* \"#utility.yul\":10692:10883   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10889:11007   */\ntag_86:\n    /* \"#utility.yul\":10976:11000   */\n  tag_224\n    /* \"#utility.yul\":10994:10999   */\n  dup2\n    /* \"#utility.yul\":10976:11000   */\n  tag_67\n  jump\t// in\ntag_224:\n    /* \"#utility.yul\":10971:10974   */\n  dup3\n    /* \"#utility.yul\":10964:11001   */\n  mstore\n    /* \"#utility.yul\":10889:11007   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11013:11455   */\ntag_47:\n    /* \"#utility.yul\":11162:11166   */\n  0x00\n    /* \"#utility.yul\":11200:11202   */\n  0x60\n    /* \"#utility.yul\":11189:11198   */\n  dup3\n    /* \"#utility.yul\":11185:11203   */\n  add\n    /* \"#utility.yul\":11177:11203   */\n  swap1\n  pop\n    /* \"#utility.yul\":11213:11284   */\n  tag_226\n    /* \"#utility.yul\":11281:11282   */\n  0x00\n    /* \"#utility.yul\":11270:11279   */\n  dup4\n    /* \"#utility.yul\":11266:11283   */\n  add\n    /* \"#utility.yul\":11257:11263   */\n  dup7\n    /* \"#utility.yul\":11213:11284   */\n  tag_79\n  jump\t// in\ntag_226:\n    /* \"#utility.yul\":11294:11366   */\n  tag_227\n    /* \"#utility.yul\":11362:11364   */\n  0x20\n    /* \"#utility.yul\":11351:11360   */\n  dup4\n    /* \"#utility.yul\":11347:11365   */\n  add\n    /* \"#utility.yul\":11338:11344   */\n  dup6\n    /* \"#utility.yul\":11294:11366   */\n  tag_86\n  jump\t// in\ntag_227:\n    /* \"#utility.yul\":11376:11448   */\n  tag_228\n    /* \"#utility.yul\":11444:11446   */\n  0x40\n    /* \"#utility.yul\":11433:11442   */\n  dup4\n    /* \"#utility.yul\":11429:11447   */\n  add\n    /* \"#utility.yul\":11420:11426   */\n  dup5\n    /* \"#utility.yul\":11376:11448   */\n  tag_86\n  jump\t// in\ntag_228:\n    /* \"#utility.yul\":11013:11455   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11461:11683   */\ntag_51:\n    /* \"#utility.yul\":11554:11558   */\n  0x00\n    /* \"#utility.yul\":11592:11594   */\n  0x20\n    /* \"#utility.yul\":11581:11590   */\n  dup3\n    /* \"#utility.yul\":11577:11595   */\n  add\n    /* \"#utility.yul\":11569:11595   */\n  swap1\n  pop\n    /* \"#utility.yul\":11605:11676   */\n  tag_230\n    /* \"#utility.yul\":11673:11674   */\n  0x00\n    /* \"#utility.yul\":11662:11671   */\n  dup4\n    /* \"#utility.yul\":11658:11675   */\n  add\n    /* \"#utility.yul\":11649:11655   */\n  dup5\n    /* \"#utility.yul\":11605:11676   */\n  tag_86\n  jump\t// in\ntag_230:\n    /* \"#utility.yul\":11461:11683   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/WW.sol\":167:2362  contract WorldWarToken is ERC20, Ownable {... */\ntag_32:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/WW.sol\":167:2362  contract WorldWarToken is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8ea5220f\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xd72b11bd\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xd72b11bd\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xe7b94df4\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf887ea40\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x8ea5220f\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xc0d78655\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xc6a30647\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x313ce567\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x771a3a1d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/WW.sol\":2029:2360  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {... */\n    tag_6:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_8:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_9:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      stop\n        /* \"contracts/WW.sol\":214:240  uint256 public taxRate = 1 */\n    tag_10:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_11:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/WW.sol\":304:328  address public devWallet */\n    tag_12:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_13:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/WW.sol\":1804:2023  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n    tag_14:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/WW.sol\":1159:1247  function setRouter(address _router) external onlyOwner {... */\n    tag_15:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n    tag_72:\n      stop\n        /* \"contracts/WW.sol\":1253:1383  function excludeFromTax(address account, bool excluded) external onlyOwner {... */\n    tag_16:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      stop\n        /* \"contracts/WW.sol\":270:298  address public reserveWallet */\n    tag_17:\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_18:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      tag_85\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/WW.sol\":334:363  address public donationWallet */\n    tag_19:\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_20:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n    tag_90:\n      stop\n        /* \"contracts/WW.sol\":427:448  address public router */\n    tag_21:\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_97\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_99\n      swap1\n      tag_98\n      jump\t// in\n    tag_99:\n      dup1\n      iszero\n      tag_100\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_101\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_100)\n    tag_101:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_102:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_102\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_100:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4052:4056  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4081  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4094  _msgSender */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4096  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4115:4120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4122:4129  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4131:4136  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4114  _approve */\n      tag_107\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4154:4158  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4147:4158  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2882:2889  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2908:2920  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2920  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/WW.sol\":2029:2360  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {... */\n    tag_42:\n        /* \"contracts/WW.sol\":2127:2131  bool */\n      0x00\n        /* \"contracts/WW.sol\":2143:2162  uint256 finalAmount */\n      dup1\n        /* \"contracts/WW.sol\":2165:2202  _handleTax(sender, recipient, amount) */\n      tag_110\n        /* \"contracts/WW.sol\":2176:2182  sender */\n      dup6\n        /* \"contracts/WW.sol\":2184:2193  recipient */\n      dup6\n        /* \"contracts/WW.sol\":2195:2201  amount */\n      dup6\n        /* \"contracts/WW.sol\":2165:2175  _handleTax */\n      tag_111\n        /* \"contracts/WW.sol\":2165:2202  _handleTax(sender, recipient, amount) */\n      jump\t// in\n    tag_110:\n        /* \"contracts/WW.sol\":2143:2202  uint256 finalAmount = _handleTax(sender, recipient, amount) */\n      swap1\n      pop\n        /* \"contracts/WW.sol\":2212:2286  _approve(sender, _msgSender(), allowance(sender, _msgSender()) - (amount)) */\n      tag_112\n        /* \"contracts/WW.sol\":2221:2227  sender */\n      dup6\n        /* \"contracts/WW.sol\":2229:2241  _msgSender() */\n      tag_113\n        /* \"contracts/WW.sol\":2229:2239  _msgSender */\n      tag_105\n        /* \"contracts/WW.sol\":2229:2241  _msgSender() */\n      jump\t// in\n    tag_113:\n        /* \"contracts/WW.sol\":2278:2284  amount */\n      dup6\n        /* \"contracts/WW.sol\":2243:2274  allowance(sender, _msgSender()) */\n      tag_114\n        /* \"contracts/WW.sol\":2253:2259  sender */\n      dup10\n        /* \"contracts/WW.sol\":2261:2273  _msgSender() */\n      tag_115\n        /* \"contracts/WW.sol\":2261:2271  _msgSender */\n      tag_105\n        /* \"contracts/WW.sol\":2261:2273  _msgSender() */\n      jump\t// in\n    tag_115:\n        /* \"contracts/WW.sol\":2243:2252  allowance */\n      tag_85\n        /* \"contracts/WW.sol\":2243:2274  allowance(sender, _msgSender()) */\n      jump\t// in\n    tag_114:\n        /* \"contracts/WW.sol\":2243:2285  allowance(sender, _msgSender()) - (amount) */\n      tag_116\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n        /* \"contracts/WW.sol\":2212:2220  _approve */\n      tag_107\n        /* \"contracts/WW.sol\":2212:2286  _approve(sender, _msgSender(), allowance(sender, _msgSender()) - (amount)) */\n      jump\t// in\n    tag_112:\n        /* \"contracts/WW.sol\":2303:2353  super.transferFrom(sender, recipient, finalAmount) */\n      tag_118\n        /* \"contracts/WW.sol\":2322:2328  sender */\n      dup6\n        /* \"contracts/WW.sol\":2330:2339  recipient */\n      dup6\n        /* \"contracts/WW.sol\":2341:2352  finalAmount */\n      dup4\n        /* \"contracts/WW.sol\":2303:2321  super.transferFrom */\n      tag_119\n        /* \"contracts/WW.sol\":2303:2353  super.transferFrom(sender, recipient, finalAmount) */\n      jump\t// in\n    tag_118:\n        /* \"contracts/WW.sol\":2296:2353  return super.transferFrom(sender, recipient, finalAmount) */\n      swap2\n      pop\n      pop\n        /* \"contracts/WW.sol\":2029:2360  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2737:2742  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3050:3057  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3085  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3093  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3094  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_123\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_123:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_126\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/WW.sol\":214:240  uint256 public taxRate = 1 */\n    tag_56:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/WW.sol\":304:328  address public devWallet */\n    tag_63:\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_130\n      swap1\n      tag_98\n      jump\t// in\n    tag_130:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_131\n      swap1\n      tag_98\n      jump\t// in\n    tag_131:\n      dup1\n      iszero\n      tag_132\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_133\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_132)\n    tag_133:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_134:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_134\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_132:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/WW.sol\":1804:2023  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n    tag_70:\n        /* \"contracts/WW.sol\":1882:1886  bool */\n      0x00\n        /* \"contracts/WW.sol\":1898:1917  uint256 finalAmount */\n      dup1\n        /* \"contracts/WW.sol\":1920:1961  _handleTax(msg.sender, recipient, amount) */\n      tag_136\n        /* \"contracts/WW.sol\":1931:1941  msg.sender */\n      caller\n        /* \"contracts/WW.sol\":1943:1952  recipient */\n      dup6\n        /* \"contracts/WW.sol\":1954:1960  amount */\n      dup6\n        /* \"contracts/WW.sol\":1920:1930  _handleTax */\n      tag_111\n        /* \"contracts/WW.sol\":1920:1961  _handleTax(msg.sender, recipient, amount) */\n      jump\t// in\n    tag_136:\n        /* \"contracts/WW.sol\":1898:1961  uint256 finalAmount = _handleTax(msg.sender, recipient, amount) */\n      swap1\n      pop\n        /* \"contracts/WW.sol\":1978:2016  super.transfer(recipient, finalAmount) */\n      tag_137\n        /* \"contracts/WW.sol\":1993:2002  recipient */\n      dup5\n        /* \"contracts/WW.sol\":2004:2015  finalAmount */\n      dup3\n        /* \"contracts/WW.sol\":1978:1992  super.transfer */\n      tag_138\n        /* \"contracts/WW.sol\":1978:2016  super.transfer(recipient, finalAmount) */\n      jump\t// in\n    tag_137:\n        /* \"contracts/WW.sol\":1971:2016  return super.transfer(recipient, finalAmount) */\n      swap2\n      pop\n      pop\n        /* \"contracts/WW.sol\":1804:2023  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/WW.sol\":1159:1247  function setRouter(address _router) external onlyOwner {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_140\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_140:\n        /* \"contracts/WW.sol\":1233:1240  _router */\n      dup1\n        /* \"contracts/WW.sol\":1224:1230  router */\n      0x0b\n      0x00\n        /* \"contracts/WW.sol\":1224:1240  router = _router */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/WW.sol\":1159:1247  function setRouter(address _router) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/WW.sol\":1253:1383  function excludeFromTax(address account, bool excluded) external onlyOwner {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_143\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_143:\n        /* \"contracts/WW.sol\":1368:1376  excluded */\n      dup1\n        /* \"contracts/WW.sol\":1338:1356  _isExcludedFromTax */\n      0x0a\n        /* \"contracts/WW.sol\":1338:1365  _isExcludedFromTax[account] */\n      0x00\n        /* \"contracts/WW.sol\":1357:1364  account */\n      dup5\n        /* \"contracts/WW.sol\":1338:1365  _isExcludedFromTax[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/WW.sol\":1338:1376  _isExcludedFromTax[account] = excluded */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/WW.sol\":1253:1383  function excludeFromTax(address account, bool excluded) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/WW.sol\":270:298  address public reserveWallet */\n    tag_80:\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3612:3619  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3655  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3664  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3665  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/WW.sol\":334:363  address public donationWallet */\n    tag_88:\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_147\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_147:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_149\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/WW.sol\":427:448  address public router */\n    tag_94:\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      tag_154\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8800:8805  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8807:8814  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8816:8821  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8823:8827  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8799  _approve */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/WW.sol\":1389:1798  function _handleTax(address sender, address recipient, uint256 amount) internal returns (uint256) {... */\n    tag_111:\n        /* \"contracts/WW.sol\":1478:1485  uint256 */\n      0x00\n        /* \"contracts/WW.sol\":1501:1519  _isExcludedFromTax */\n      0x0a\n        /* \"contracts/WW.sol\":1501:1527  _isExcludedFromTax[sender] */\n      0x00\n        /* \"contracts/WW.sol\":1520:1526  sender */\n      dup6\n        /* \"contracts/WW.sol\":1501:1527  _isExcludedFromTax[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/WW.sol\":1501:1560  _isExcludedFromTax[sender] || _isExcludedFromTax[recipient] */\n      dup1\n      tag_157\n      jumpi\n      pop\n        /* \"contracts/WW.sol\":1531:1549  _isExcludedFromTax */\n      0x0a\n        /* \"contracts/WW.sol\":1531:1560  _isExcludedFromTax[recipient] */\n      0x00\n        /* \"contracts/WW.sol\":1550:1559  recipient */\n      dup5\n        /* \"contracts/WW.sol\":1531:1560  _isExcludedFromTax[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/WW.sol\":1501:1560  _isExcludedFromTax[sender] || _isExcludedFromTax[recipient] */\n    tag_157:\n        /* \"contracts/WW.sol\":1497:1600  if (_isExcludedFromTax[sender] || _isExcludedFromTax[recipient]) {... */\n      iszero\n      tag_158\n      jumpi\n        /* \"contracts/WW.sol\":1583:1589  amount */\n      dup2\n        /* \"contracts/WW.sol\":1576:1589  return amount */\n      swap1\n      pop\n      jump(tag_156)\n        /* \"contracts/WW.sol\":1497:1600  if (_isExcludedFromTax[sender] || _isExcludedFromTax[recipient]) {... */\n    tag_158:\n        /* \"contracts/WW.sol\":1609:1626  uint256 taxAmount */\n      0x00\n        /* \"contracts/WW.sol\":1650:1653  100 */\n      0x64\n        /* \"contracts/WW.sol\":1639:1646  taxRate */\n      sload(0x06)\n        /* \"contracts/WW.sol\":1630:1636  amount */\n      dup5\n        /* \"contracts/WW.sol\":1630:1646  amount * taxRate */\n      tag_159\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n        /* \"contracts/WW.sol\":1629:1653  (amount * taxRate) / 100 */\n      tag_161\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n        /* \"contracts/WW.sol\":1609:1653  uint256 taxAmount = (amount * taxRate) / 100 */\n      swap1\n      pop\n        /* \"contracts/WW.sol\":1679:1680  0 */\n      0x00\n        /* \"contracts/WW.sol\":1667:1676  taxAmount */\n      dup2\n        /* \"contracts/WW.sol\":1667:1680  taxAmount > 0 */\n      gt\n        /* \"contracts/WW.sol\":1663:1757  if (taxAmount > 0) {... */\n      iszero\n      tag_163\n      jumpi\n        /* \"contracts/WW.sol\":1696:1746  super._transfer(sender, donationWallet, taxAmount) */\n      tag_164\n        /* \"contracts/WW.sol\":1712:1718  sender */\n      dup6\n        /* \"contracts/WW.sol\":1720:1734  donationWallet */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/WW.sol\":1736:1745  taxAmount */\n      dup4\n        /* \"contracts/WW.sol\":1696:1711  super._transfer */\n      tag_165\n        /* \"contracts/WW.sol\":1696:1746  super._transfer(sender, donationWallet, taxAmount) */\n      jump\t// in\n    tag_164:\n        /* \"contracts/WW.sol\":1663:1757  if (taxAmount > 0) {... */\n    tag_163:\n        /* \"contracts/WW.sol\":1782:1791  taxAmount */\n      dup1\n        /* \"contracts/WW.sol\":1773:1779  amount */\n      dup4\n        /* \"contracts/WW.sol\":1773:1791  amount - taxAmount */\n      tag_166\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_166:\n        /* \"contracts/WW.sol\":1766:1791  return amount - taxAmount */\n      swap2\n      pop\n      pop\n        /* \"contracts/WW.sol\":1389:1798  function _handleTax(address sender, address recipient, uint256 amount) internal returns (uint256) {... */\n    tag_156:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4844:4848  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4875  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4888  _msgSender */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4890  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4916:4920  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4922:4929  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4931:4936  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4915  _spendAllowance */\n      tag_170\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_169:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4957:4961  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4963:4965  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4967:4972  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4956  _transfer */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4990:4994  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4983:4994  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_105\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_174\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_59\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_175\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_176\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_105\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_175:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3365:3369  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3394  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      tag_180\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3407  _msgSender */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3409  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      tag_181\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3429:3434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3436:3438  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3440:3445  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3428  _transfer */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3463:3467  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3456:3467  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9812  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9799  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n      tag_183\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9865:9866  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_184\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n    tag_183:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9912  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9899  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n      tag_185\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9964:9965  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_186\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n    tag_185:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10017:10022  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:9998  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9999:10004  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10013  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10022  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10045  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n      iszero\n      tag_187\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10082:10089  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10080  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10091:10096  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_188\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5473:5474  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5461  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n      tag_190\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5525:5526  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5567  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5554  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n      tag_192\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5620:5621  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      tag_194\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5651:5655  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5657:5659  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5661:5666  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5650  _update */\n      tag_195\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      jump\t// in\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10519  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      tag_197\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10532:10537  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10539:10546  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10531  allowance */\n      tag_85\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      jump\t// in\n    tag_197:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10547  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10597  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10577  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10597  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_198\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10641  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10633  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10641  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n      iszero\n      tag_199\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10695:10702  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10704:10720  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10722:10727  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n    tag_199:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      tag_202\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10793:10798  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10800:10807  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10833  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10825  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10833  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10840  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10792  _approve */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10485:10872  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6095  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6082  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_204\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_205\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_205:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      jump(tag_207)\n    tag_204:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6297  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6298:6302  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6303  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6335:6340  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n      iszero\n      tag_208\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6392:6396  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6398:6409  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6416  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_209\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6584:6589  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6581  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6562:6566  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6252:6614  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n    tag_207:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6642:6643  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6630  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      tag_210\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6812  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      jump(tag_211)\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7019:7024  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7012:7014  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      mload(0x40)\n      tag_212\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_213:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_214:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:535   */\n    tag_215:\n        /* \"#utility.yul\":369:370   */\n      0x00\n        /* \"#utility.yul\":379:492   */\n    tag_243:\n        /* \"#utility.yul\":393:399   */\n      dup4\n        /* \"#utility.yul\":390:391   */\n      dup2\n        /* \"#utility.yul\":387:400   */\n      lt\n        /* \"#utility.yul\":379:492   */\n      iszero\n      tag_245\n      jumpi\n        /* \"#utility.yul\":478:479   */\n      dup1\n        /* \"#utility.yul\":473:476   */\n      dup3\n        /* \"#utility.yul\":469:480   */\n      add\n        /* \"#utility.yul\":463:481   */\n      mload\n        /* \"#utility.yul\":459:460   */\n      dup2\n        /* \"#utility.yul\":454:457   */\n      dup5\n        /* \"#utility.yul\":450:461   */\n      add\n        /* \"#utility.yul\":443:482   */\n      mstore\n        /* \"#utility.yul\":415:417   */\n      0x20\n        /* \"#utility.yul\":412:413   */\n      dup2\n        /* \"#utility.yul\":408:418   */\n      add\n        /* \"#utility.yul\":403:418   */\n      swap1\n      pop\n        /* \"#utility.yul\":379:492   */\n      jump(tag_243)\n    tag_245:\n        /* \"#utility.yul\":526:527   */\n      0x00\n        /* \"#utility.yul\":517:523   */\n      dup5\n        /* \"#utility.yul\":512:515   */\n      dup5\n        /* \"#utility.yul\":508:524   */\n      add\n        /* \"#utility.yul\":501:528   */\n      mstore\n        /* \"#utility.yul\":349:535   */\n      pop\n        /* \"#utility.yul\":287:535   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":541:643   */\n    tag_216:\n        /* \"#utility.yul\":582:588   */\n      0x00\n        /* \"#utility.yul\":633:635   */\n      0x1f\n        /* \"#utility.yul\":629:636   */\n      not\n        /* \"#utility.yul\":624:626   */\n      0x1f\n        /* \"#utility.yul\":617:622   */\n      dup4\n        /* \"#utility.yul\":613:627   */\n      add\n        /* \"#utility.yul\":609:637   */\n      and\n        /* \"#utility.yul\":599:637   */\n      swap1\n      pop\n        /* \"#utility.yul\":541:643   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":649:1026   */\n    tag_217:\n        /* \"#utility.yul\":737:740   */\n      0x00\n        /* \"#utility.yul\":765:804   */\n      tag_248\n        /* \"#utility.yul\":798:803   */\n      dup3\n        /* \"#utility.yul\":765:804   */\n      tag_213\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":820:891   */\n      tag_249\n        /* \"#utility.yul\":884:890   */\n      dup2\n        /* \"#utility.yul\":879:882   */\n      dup6\n        /* \"#utility.yul\":820:891   */\n      tag_214\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":813:891   */\n      swap4\n      pop\n        /* \"#utility.yul\":900:965   */\n      tag_250\n        /* \"#utility.yul\":958:964   */\n      dup2\n        /* \"#utility.yul\":953:956   */\n      dup6\n        /* \"#utility.yul\":946:950   */\n      0x20\n        /* \"#utility.yul\":939:944   */\n      dup7\n        /* \"#utility.yul\":935:951   */\n      add\n        /* \"#utility.yul\":900:965   */\n      tag_215\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":990:1019   */\n      tag_251\n        /* \"#utility.yul\":1012:1018   */\n      dup2\n        /* \"#utility.yul\":990:1019   */\n      tag_216\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":985:988   */\n      dup5\n        /* \"#utility.yul\":981:1020   */\n      add\n        /* \"#utility.yul\":974:1020   */\n      swap2\n      pop\n        /* \"#utility.yul\":741:1026   */\n      pop\n        /* \"#utility.yul\":649:1026   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1032:1345   */\n    tag_28:\n        /* \"#utility.yul\":1145:1149   */\n      0x00\n        /* \"#utility.yul\":1183:1185   */\n      0x20\n        /* \"#utility.yul\":1172:1181   */\n      dup3\n        /* \"#utility.yul\":1168:1186   */\n      add\n        /* \"#utility.yul\":1160:1186   */\n      swap1\n      pop\n        /* \"#utility.yul\":1232:1241   */\n      dup2\n        /* \"#utility.yul\":1226:1230   */\n      dup2\n        /* \"#utility.yul\":1222:1242   */\n      sub\n        /* \"#utility.yul\":1218:1219   */\n      0x00\n        /* \"#utility.yul\":1207:1216   */\n      dup4\n        /* \"#utility.yul\":1203:1220   */\n      add\n        /* \"#utility.yul\":1196:1243   */\n      mstore\n        /* \"#utility.yul\":1260:1338   */\n      tag_253\n        /* \"#utility.yul\":1333:1337   */\n      dup2\n        /* \"#utility.yul\":1324:1330   */\n      dup5\n        /* \"#utility.yul\":1260:1338   */\n      tag_217\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":1252:1338   */\n      swap1\n      pop\n        /* \"#utility.yul\":1032:1345   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1432:1549   */\n    tag_219:\n        /* \"#utility.yul\":1541:1542   */\n      0x00\n        /* \"#utility.yul\":1538:1539   */\n      dup1\n        /* \"#utility.yul\":1531:1543   */\n      revert\n        /* \"#utility.yul\":1678:1804   */\n    tag_221:\n        /* \"#utility.yul\":1715:1722   */\n      0x00\n        /* \"#utility.yul\":1755:1797   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1748:1753   */\n      dup3\n        /* \"#utility.yul\":1744:1798   */\n      and\n        /* \"#utility.yul\":1733:1798   */\n      swap1\n      pop\n        /* \"#utility.yul\":1678:1804   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1810:1906   */\n    tag_222:\n        /* \"#utility.yul\":1847:1854   */\n      0x00\n        /* \"#utility.yul\":1876:1900   */\n      tag_259\n        /* \"#utility.yul\":1894:1899   */\n      dup3\n        /* \"#utility.yul\":1876:1900   */\n      tag_221\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":1865:1900   */\n      swap1\n      pop\n        /* \"#utility.yul\":1810:1906   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1912:2034   */\n    tag_223:\n        /* \"#utility.yul\":1985:2009   */\n      tag_261\n        /* \"#utility.yul\":2003:2008   */\n      dup2\n        /* \"#utility.yul\":1985:2009   */\n      tag_222\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":1978:1983   */\n      dup2\n        /* \"#utility.yul\":1975:2010   */\n      eq\n        /* \"#utility.yul\":1965:2028   */\n      tag_262\n      jumpi\n        /* \"#utility.yul\":2024:2025   */\n      0x00\n        /* \"#utility.yul\":2021:2022   */\n      dup1\n        /* \"#utility.yul\":2014:2026   */\n      revert\n        /* \"#utility.yul\":1965:2028   */\n    tag_262:\n        /* \"#utility.yul\":1912:2034   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2040:2179   */\n    tag_224:\n        /* \"#utility.yul\":2086:2091   */\n      0x00\n        /* \"#utility.yul\":2124:2130   */\n      dup2\n        /* \"#utility.yul\":2111:2131   */\n      calldataload\n        /* \"#utility.yul\":2102:2131   */\n      swap1\n      pop\n        /* \"#utility.yul\":2140:2173   */\n      tag_264\n        /* \"#utility.yul\":2167:2172   */\n      dup2\n        /* \"#utility.yul\":2140:2173   */\n      tag_223\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":2040:2179   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2185:2262   */\n    tag_225:\n        /* \"#utility.yul\":2222:2229   */\n      0x00\n        /* \"#utility.yul\":2251:2256   */\n      dup2\n        /* \"#utility.yul\":2240:2256   */\n      swap1\n      pop\n        /* \"#utility.yul\":2185:2262   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2268:2390   */\n    tag_226:\n        /* \"#utility.yul\":2341:2365   */\n      tag_267\n        /* \"#utility.yul\":2359:2364   */\n      dup2\n        /* \"#utility.yul\":2341:2365   */\n      tag_225\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":2334:2339   */\n      dup2\n        /* \"#utility.yul\":2331:2366   */\n      eq\n        /* \"#utility.yul\":2321:2384   */\n      tag_268\n      jumpi\n        /* \"#utility.yul\":2380:2381   */\n      0x00\n        /* \"#utility.yul\":2377:2378   */\n      dup1\n        /* \"#utility.yul\":2370:2382   */\n      revert\n        /* \"#utility.yul\":2321:2384   */\n    tag_268:\n        /* \"#utility.yul\":2268:2390   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2396:2535   */\n    tag_227:\n        /* \"#utility.yul\":2442:2447   */\n      0x00\n        /* \"#utility.yul\":2480:2486   */\n      dup2\n        /* \"#utility.yul\":2467:2487   */\n      calldataload\n        /* \"#utility.yul\":2458:2487   */\n      swap1\n      pop\n        /* \"#utility.yul\":2496:2529   */\n      tag_270\n        /* \"#utility.yul\":2523:2528   */\n      dup2\n        /* \"#utility.yul\":2496:2529   */\n      tag_226\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":2396:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:3015   */\n    tag_31:\n        /* \"#utility.yul\":2609:2615   */\n      0x00\n        /* \"#utility.yul\":2617:2623   */\n      dup1\n        /* \"#utility.yul\":2666:2668   */\n      0x40\n        /* \"#utility.yul\":2654:2663   */\n      dup4\n        /* \"#utility.yul\":2645:2652   */\n      dup6\n        /* \"#utility.yul\":2641:2664   */\n      sub\n        /* \"#utility.yul\":2637:2669   */\n      slt\n        /* \"#utility.yul\":2634:2753   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":2672:2751   */\n      tag_273\n      tag_219\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":2634:2753   */\n    tag_272:\n        /* \"#utility.yul\":2792:2793   */\n      0x00\n        /* \"#utility.yul\":2817:2870   */\n      tag_274\n        /* \"#utility.yul\":2862:2869   */\n      dup6\n        /* \"#utility.yul\":2853:2859   */\n      dup3\n        /* \"#utility.yul\":2842:2851   */\n      dup7\n        /* \"#utility.yul\":2838:2860   */\n      add\n        /* \"#utility.yul\":2817:2870   */\n      tag_224\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":2807:2870   */\n      swap3\n      pop\n        /* \"#utility.yul\":2763:2880   */\n      pop\n        /* \"#utility.yul\":2919:2921   */\n      0x20\n        /* \"#utility.yul\":2945:2998   */\n      tag_275\n        /* \"#utility.yul\":2990:2997   */\n      dup6\n        /* \"#utility.yul\":2981:2987   */\n      dup3\n        /* \"#utility.yul\":2970:2979   */\n      dup7\n        /* \"#utility.yul\":2966:2988   */\n      add\n        /* \"#utility.yul\":2945:2998   */\n      tag_227\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":2935:2998   */\n      swap2\n      pop\n        /* \"#utility.yul\":2890:3008   */\n      pop\n        /* \"#utility.yul\":2541:3015   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3021:3111   */\n    tag_228:\n        /* \"#utility.yul\":3055:3062   */\n      0x00\n        /* \"#utility.yul\":3098:3103   */\n      dup2\n        /* \"#utility.yul\":3091:3104   */\n      iszero\n        /* \"#utility.yul\":3084:3105   */\n      iszero\n        /* \"#utility.yul\":3073:3105   */\n      swap1\n      pop\n        /* \"#utility.yul\":3021:3111   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3117:3226   */\n    tag_229:\n        /* \"#utility.yul\":3198:3219   */\n      tag_278\n        /* \"#utility.yul\":3213:3218   */\n      dup2\n        /* \"#utility.yul\":3198:3219   */\n      tag_228\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":3193:3196   */\n      dup3\n        /* \"#utility.yul\":3186:3220   */\n      mstore\n        /* \"#utility.yul\":3117:3226   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3232:3442   */\n    tag_34:\n        /* \"#utility.yul\":3319:3323   */\n      0x00\n        /* \"#utility.yul\":3357:3359   */\n      0x20\n        /* \"#utility.yul\":3346:3355   */\n      dup3\n        /* \"#utility.yul\":3342:3360   */\n      add\n        /* \"#utility.yul\":3334:3360   */\n      swap1\n      pop\n        /* \"#utility.yul\":3370:3435   */\n      tag_280\n        /* \"#utility.yul\":3432:3433   */\n      0x00\n        /* \"#utility.yul\":3421:3430   */\n      dup4\n        /* \"#utility.yul\":3417:3434   */\n      add\n        /* \"#utility.yul\":3408:3414   */\n      dup5\n        /* \"#utility.yul\":3370:3435   */\n      tag_229\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":3232:3442   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3448:3566   */\n    tag_230:\n        /* \"#utility.yul\":3535:3559   */\n      tag_282\n        /* \"#utility.yul\":3553:3558   */\n      dup2\n        /* \"#utility.yul\":3535:3559   */\n      tag_225\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":3530:3533   */\n      dup3\n        /* \"#utility.yul\":3523:3560   */\n      mstore\n        /* \"#utility.yul\":3448:3566   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3572:3794   */\n    tag_38:\n        /* \"#utility.yul\":3665:3669   */\n      0x00\n        /* \"#utility.yul\":3703:3705   */\n      0x20\n        /* \"#utility.yul\":3692:3701   */\n      dup3\n        /* \"#utility.yul\":3688:3706   */\n      add\n        /* \"#utility.yul\":3680:3706   */\n      swap1\n      pop\n        /* \"#utility.yul\":3716:3787   */\n      tag_284\n        /* \"#utility.yul\":3784:3785   */\n      0x00\n        /* \"#utility.yul\":3773:3782   */\n      dup4\n        /* \"#utility.yul\":3769:3786   */\n      add\n        /* \"#utility.yul\":3760:3766   */\n      dup5\n        /* \"#utility.yul\":3716:3787   */\n      tag_230\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":3572:3794   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3800:4419   */\n    tag_41:\n        /* \"#utility.yul\":3877:3883   */\n      0x00\n        /* \"#utility.yul\":3885:3891   */\n      dup1\n        /* \"#utility.yul\":3893:3899   */\n      0x00\n        /* \"#utility.yul\":3942:3944   */\n      0x60\n        /* \"#utility.yul\":3930:3939   */\n      dup5\n        /* \"#utility.yul\":3921:3928   */\n      dup7\n        /* \"#utility.yul\":3917:3940   */\n      sub\n        /* \"#utility.yul\":3913:3945   */\n      slt\n        /* \"#utility.yul\":3910:4029   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":3948:4027   */\n      tag_287\n      tag_219\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":3910:4029   */\n    tag_286:\n        /* \"#utility.yul\":4068:4069   */\n      0x00\n        /* \"#utility.yul\":4093:4146   */\n      tag_288\n        /* \"#utility.yul\":4138:4145   */\n      dup7\n        /* \"#utility.yul\":4129:4135   */\n      dup3\n        /* \"#utility.yul\":4118:4127   */\n      dup8\n        /* \"#utility.yul\":4114:4136   */\n      add\n        /* \"#utility.yul\":4093:4146   */\n      tag_224\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":4083:4146   */\n      swap4\n      pop\n        /* \"#utility.yul\":4039:4156   */\n      pop\n        /* \"#utility.yul\":4195:4197   */\n      0x20\n        /* \"#utility.yul\":4221:4274   */\n      tag_289\n        /* \"#utility.yul\":4266:4273   */\n      dup7\n        /* \"#utility.yul\":4257:4263   */\n      dup3\n        /* \"#utility.yul\":4246:4255   */\n      dup8\n        /* \"#utility.yul\":4242:4264   */\n      add\n        /* \"#utility.yul\":4221:4274   */\n      tag_224\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":4211:4274   */\n      swap3\n      pop\n        /* \"#utility.yul\":4166:4284   */\n      pop\n        /* \"#utility.yul\":4323:4325   */\n      0x40\n        /* \"#utility.yul\":4349:4402   */\n      tag_290\n        /* \"#utility.yul\":4394:4401   */\n      dup7\n        /* \"#utility.yul\":4385:4391   */\n      dup3\n        /* \"#utility.yul\":4374:4383   */\n      dup8\n        /* \"#utility.yul\":4370:4392   */\n      add\n        /* \"#utility.yul\":4349:4402   */\n      tag_227\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":4339:4402   */\n      swap2\n      pop\n        /* \"#utility.yul\":4294:4412   */\n      pop\n        /* \"#utility.yul\":3800:4419   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4425:4511   */\n    tag_231:\n        /* \"#utility.yul\":4460:4467   */\n      0x00\n        /* \"#utility.yul\":4500:4504   */\n      0xff\n        /* \"#utility.yul\":4493:4498   */\n      dup3\n        /* \"#utility.yul\":4489:4505   */\n      and\n        /* \"#utility.yul\":4478:4505   */\n      swap1\n      pop\n        /* \"#utility.yul\":4425:4511   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4517:4629   */\n    tag_232:\n        /* \"#utility.yul\":4600:4622   */\n      tag_293\n        /* \"#utility.yul\":4616:4621   */\n      dup2\n        /* \"#utility.yul\":4600:4622   */\n      tag_231\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":4595:4598   */\n      dup3\n        /* \"#utility.yul\":4588:4623   */\n      mstore\n        /* \"#utility.yul\":4517:4629   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4635:4849   */\n    tag_47:\n        /* \"#utility.yul\":4724:4728   */\n      0x00\n        /* \"#utility.yul\":4762:4764   */\n      0x20\n        /* \"#utility.yul\":4751:4760   */\n      dup3\n        /* \"#utility.yul\":4747:4765   */\n      add\n        /* \"#utility.yul\":4739:4765   */\n      swap1\n      pop\n        /* \"#utility.yul\":4775:4842   */\n      tag_295\n        /* \"#utility.yul\":4839:4840   */\n      0x00\n        /* \"#utility.yul\":4828:4837   */\n      dup4\n        /* \"#utility.yul\":4824:4841   */\n      add\n        /* \"#utility.yul\":4815:4821   */\n      dup5\n        /* \"#utility.yul\":4775:4842   */\n      tag_232\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":4635:4849   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4855:5184   */\n    tag_50:\n        /* \"#utility.yul\":4914:4920   */\n      0x00\n        /* \"#utility.yul\":4963:4965   */\n      0x20\n        /* \"#utility.yul\":4951:4960   */\n      dup3\n        /* \"#utility.yul\":4942:4949   */\n      dup5\n        /* \"#utility.yul\":4938:4961   */\n      sub\n        /* \"#utility.yul\":4934:4966   */\n      slt\n        /* \"#utility.yul\":4931:5050   */\n      iszero\n      tag_297\n      jumpi\n        /* \"#utility.yul\":4969:5048   */\n      tag_298\n      tag_219\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":4931:5050   */\n    tag_297:\n        /* \"#utility.yul\":5089:5090   */\n      0x00\n        /* \"#utility.yul\":5114:5167   */\n      tag_299\n        /* \"#utility.yul\":5159:5166   */\n      dup5\n        /* \"#utility.yul\":5150:5156   */\n      dup3\n        /* \"#utility.yul\":5139:5148   */\n      dup6\n        /* \"#utility.yul\":5135:5157   */\n      add\n        /* \"#utility.yul\":5114:5167   */\n      tag_224\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":5104:5167   */\n      swap2\n      pop\n        /* \"#utility.yul\":5060:5177   */\n      pop\n        /* \"#utility.yul\":4855:5184   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5190:5308   */\n    tag_233:\n        /* \"#utility.yul\":5277:5301   */\n      tag_301\n        /* \"#utility.yul\":5295:5300   */\n      dup2\n        /* \"#utility.yul\":5277:5301   */\n      tag_222\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":5272:5275   */\n      dup3\n        /* \"#utility.yul\":5265:5302   */\n      mstore\n        /* \"#utility.yul\":5190:5308   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5314:5536   */\n    tag_61:\n        /* \"#utility.yul\":5407:5411   */\n      0x00\n        /* \"#utility.yul\":5445:5447   */\n      0x20\n        /* \"#utility.yul\":5434:5443   */\n      dup3\n        /* \"#utility.yul\":5430:5448   */\n      add\n        /* \"#utility.yul\":5422:5448   */\n      swap1\n      pop\n        /* \"#utility.yul\":5458:5529   */\n      tag_303\n        /* \"#utility.yul\":5526:5527   */\n      0x00\n        /* \"#utility.yul\":5515:5524   */\n      dup4\n        /* \"#utility.yul\":5511:5528   */\n      add\n        /* \"#utility.yul\":5502:5508   */\n      dup5\n        /* \"#utility.yul\":5458:5529   */\n      tag_233\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":5314:5536   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5542:5658   */\n    tag_234:\n        /* \"#utility.yul\":5612:5633   */\n      tag_305\n        /* \"#utility.yul\":5627:5632   */\n      dup2\n        /* \"#utility.yul\":5612:5633   */\n      tag_228\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":5605:5610   */\n      dup2\n        /* \"#utility.yul\":5602:5634   */\n      eq\n        /* \"#utility.yul\":5592:5652   */\n      tag_306\n      jumpi\n        /* \"#utility.yul\":5648:5649   */\n      0x00\n        /* \"#utility.yul\":5645:5646   */\n      dup1\n        /* \"#utility.yul\":5638:5650   */\n      revert\n        /* \"#utility.yul\":5592:5652   */\n    tag_306:\n        /* \"#utility.yul\":5542:5658   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5664:5797   */\n    tag_235:\n        /* \"#utility.yul\":5707:5712   */\n      0x00\n        /* \"#utility.yul\":5745:5751   */\n      dup2\n        /* \"#utility.yul\":5732:5752   */\n      calldataload\n        /* \"#utility.yul\":5723:5752   */\n      swap1\n      pop\n        /* \"#utility.yul\":5761:5791   */\n      tag_308\n        /* \"#utility.yul\":5785:5790   */\n      dup2\n        /* \"#utility.yul\":5761:5791   */\n      tag_234\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":5664:5797   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5803:6271   */\n    tag_77:\n        /* \"#utility.yul\":5868:5874   */\n      0x00\n        /* \"#utility.yul\":5876:5882   */\n      dup1\n        /* \"#utility.yul\":5925:5927   */\n      0x40\n        /* \"#utility.yul\":5913:5922   */\n      dup4\n        /* \"#utility.yul\":5904:5911   */\n      dup6\n        /* \"#utility.yul\":5900:5923   */\n      sub\n        /* \"#utility.yul\":5896:5928   */\n      slt\n        /* \"#utility.yul\":5893:6012   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":5931:6010   */\n      tag_311\n      tag_219\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":5893:6012   */\n    tag_310:\n        /* \"#utility.yul\":6051:6052   */\n      0x00\n        /* \"#utility.yul\":6076:6129   */\n      tag_312\n        /* \"#utility.yul\":6121:6128   */\n      dup6\n        /* \"#utility.yul\":6112:6118   */\n      dup3\n        /* \"#utility.yul\":6101:6110   */\n      dup7\n        /* \"#utility.yul\":6097:6119   */\n      add\n        /* \"#utility.yul\":6076:6129   */\n      tag_224\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":6066:6129   */\n      swap3\n      pop\n        /* \"#utility.yul\":6022:6139   */\n      pop\n        /* \"#utility.yul\":6178:6180   */\n      0x20\n        /* \"#utility.yul\":6204:6254   */\n      tag_313\n        /* \"#utility.yul\":6246:6253   */\n      dup6\n        /* \"#utility.yul\":6237:6243   */\n      dup3\n        /* \"#utility.yul\":6226:6235   */\n      dup7\n        /* \"#utility.yul\":6222:6244   */\n      add\n        /* \"#utility.yul\":6204:6254   */\n      tag_235\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":6194:6254   */\n      swap2\n      pop\n        /* \"#utility.yul\":6149:6264   */\n      pop\n        /* \"#utility.yul\":5803:6271   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6277:6751   */\n    tag_84:\n        /* \"#utility.yul\":6345:6351   */\n      0x00\n        /* \"#utility.yul\":6353:6359   */\n      dup1\n        /* \"#utility.yul\":6402:6404   */\n      0x40\n        /* \"#utility.yul\":6390:6399   */\n      dup4\n        /* \"#utility.yul\":6381:6388   */\n      dup6\n        /* \"#utility.yul\":6377:6400   */\n      sub\n        /* \"#utility.yul\":6373:6405   */\n      slt\n        /* \"#utility.yul\":6370:6489   */\n      iszero\n      tag_315\n      jumpi\n        /* \"#utility.yul\":6408:6487   */\n      tag_316\n      tag_219\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":6370:6489   */\n    tag_315:\n        /* \"#utility.yul\":6528:6529   */\n      0x00\n        /* \"#utility.yul\":6553:6606   */\n      tag_317\n        /* \"#utility.yul\":6598:6605   */\n      dup6\n        /* \"#utility.yul\":6589:6595   */\n      dup3\n        /* \"#utility.yul\":6578:6587   */\n      dup7\n        /* \"#utility.yul\":6574:6596   */\n      add\n        /* \"#utility.yul\":6553:6606   */\n      tag_224\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":6543:6606   */\n      swap3\n      pop\n        /* \"#utility.yul\":6499:6616   */\n      pop\n        /* \"#utility.yul\":6655:6657   */\n      0x20\n        /* \"#utility.yul\":6681:6734   */\n      tag_318\n        /* \"#utility.yul\":6726:6733   */\n      dup6\n        /* \"#utility.yul\":6717:6723   */\n      dup3\n        /* \"#utility.yul\":6706:6715   */\n      dup7\n        /* \"#utility.yul\":6702:6724   */\n      add\n        /* \"#utility.yul\":6681:6734   */\n      tag_224\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":6671:6734   */\n      swap2\n      pop\n        /* \"#utility.yul\":6626:6744   */\n      pop\n        /* \"#utility.yul\":6277:6751   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6757:6937   */\n    tag_236:\n        /* \"#utility.yul\":6805:6882   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6802:6803   */\n      0x00\n        /* \"#utility.yul\":6795:6883   */\n      mstore\n        /* \"#utility.yul\":6902:6906   */\n      0x22\n        /* \"#utility.yul\":6899:6900   */\n      0x04\n        /* \"#utility.yul\":6892:6907   */\n      mstore\n        /* \"#utility.yul\":6926:6930   */\n      0x24\n        /* \"#utility.yul\":6923:6924   */\n      0x00\n        /* \"#utility.yul\":6916:6931   */\n      revert\n        /* \"#utility.yul\":6943:7263   */\n    tag_98:\n        /* \"#utility.yul\":6987:6993   */\n      0x00\n        /* \"#utility.yul\":7024:7025   */\n      0x02\n        /* \"#utility.yul\":7018:7022   */\n      dup3\n        /* \"#utility.yul\":7014:7026   */\n      div\n        /* \"#utility.yul\":7004:7026   */\n      swap1\n      pop\n        /* \"#utility.yul\":7071:7072   */\n      0x01\n        /* \"#utility.yul\":7065:7069   */\n      dup3\n        /* \"#utility.yul\":7061:7073   */\n      and\n        /* \"#utility.yul\":7092:7110   */\n      dup1\n        /* \"#utility.yul\":7082:7163   */\n      tag_321\n      jumpi\n        /* \"#utility.yul\":7148:7152   */\n      0x7f\n        /* \"#utility.yul\":7140:7146   */\n      dup3\n        /* \"#utility.yul\":7136:7153   */\n      and\n        /* \"#utility.yul\":7126:7153   */\n      swap2\n      pop\n        /* \"#utility.yul\":7082:7163   */\n    tag_321:\n        /* \"#utility.yul\":7210:7212   */\n      0x20\n        /* \"#utility.yul\":7202:7208   */\n      dup3\n        /* \"#utility.yul\":7199:7213   */\n      lt\n        /* \"#utility.yul\":7179:7197   */\n      dup2\n        /* \"#utility.yul\":7176:7214   */\n      sub\n        /* \"#utility.yul\":7173:7257   */\n      tag_322\n      jumpi\n        /* \"#utility.yul\":7229:7247   */\n      tag_323\n      tag_236\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":7173:7257   */\n    tag_322:\n        /* \"#utility.yul\":6994:7263   */\n      pop\n        /* \"#utility.yul\":6943:7263   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7269:7449   */\n    tag_237:\n        /* \"#utility.yul\":7317:7394   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7314:7315   */\n      0x00\n        /* \"#utility.yul\":7307:7395   */\n      mstore\n        /* \"#utility.yul\":7414:7418   */\n      0x11\n        /* \"#utility.yul\":7411:7412   */\n      0x04\n        /* \"#utility.yul\":7404:7419   */\n      mstore\n        /* \"#utility.yul\":7438:7442   */\n      0x24\n        /* \"#utility.yul\":7435:7436   */\n      0x00\n        /* \"#utility.yul\":7428:7443   */\n      revert\n        /* \"#utility.yul\":7455:7649   */\n    tag_117:\n        /* \"#utility.yul\":7495:7499   */\n      0x00\n        /* \"#utility.yul\":7515:7535   */\n      tag_326\n        /* \"#utility.yul\":7533:7534   */\n      dup3\n        /* \"#utility.yul\":7515:7535   */\n      tag_225\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":7510:7535   */\n      swap2\n      pop\n        /* \"#utility.yul\":7549:7569   */\n      tag_327\n        /* \"#utility.yul\":7567:7568   */\n      dup4\n        /* \"#utility.yul\":7549:7569   */\n      tag_225\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":7544:7569   */\n      swap3\n      pop\n        /* \"#utility.yul\":7593:7594   */\n      dup3\n        /* \"#utility.yul\":7590:7591   */\n      dup3\n        /* \"#utility.yul\":7586:7595   */\n      sub\n        /* \"#utility.yul\":7578:7595   */\n      swap1\n      pop\n        /* \"#utility.yul\":7617:7618   */\n      dup2\n        /* \"#utility.yul\":7611:7615   */\n      dup2\n        /* \"#utility.yul\":7608:7619   */\n      gt\n        /* \"#utility.yul\":7605:7642   */\n      iszero\n      tag_328\n      jumpi\n        /* \"#utility.yul\":7622:7640   */\n      tag_329\n      tag_237\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":7605:7642   */\n    tag_328:\n        /* \"#utility.yul\":7455:7649   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7655:8065   */\n    tag_160:\n        /* \"#utility.yul\":7695:7702   */\n      0x00\n        /* \"#utility.yul\":7718:7738   */\n      tag_331\n        /* \"#utility.yul\":7736:7737   */\n      dup3\n        /* \"#utility.yul\":7718:7738   */\n      tag_225\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":7713:7738   */\n      swap2\n      pop\n        /* \"#utility.yul\":7752:7772   */\n      tag_332\n        /* \"#utility.yul\":7770:7771   */\n      dup4\n        /* \"#utility.yul\":7752:7772   */\n      tag_225\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":7747:7772   */\n      swap3\n      pop\n        /* \"#utility.yul\":7807:7808   */\n      dup3\n        /* \"#utility.yul\":7804:7805   */\n      dup3\n        /* \"#utility.yul\":7800:7809   */\n      mul\n        /* \"#utility.yul\":7829:7859   */\n      tag_333\n        /* \"#utility.yul\":7847:7858   */\n      dup2\n        /* \"#utility.yul\":7829:7859   */\n      tag_225\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":7818:7859   */\n      swap2\n      pop\n        /* \"#utility.yul\":8008:8009   */\n      dup3\n        /* \"#utility.yul\":7999:8006   */\n      dup3\n        /* \"#utility.yul\":7995:8010   */\n      div\n        /* \"#utility.yul\":7992:7993   */\n      dup5\n        /* \"#utility.yul\":7989:8011   */\n      eq\n        /* \"#utility.yul\":7969:7970   */\n      dup4\n        /* \"#utility.yul\":7962:7971   */\n      iszero\n        /* \"#utility.yul\":7942:8025   */\n      or\n        /* \"#utility.yul\":7919:8058   */\n      tag_334\n      jumpi\n        /* \"#utility.yul\":8038:8056   */\n      tag_335\n      tag_237\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":7919:8058   */\n    tag_334:\n        /* \"#utility.yul\":7703:8065   */\n      pop\n        /* \"#utility.yul\":7655:8065   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8071:8251   */\n    tag_238:\n        /* \"#utility.yul\":8119:8196   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8116:8117   */\n      0x00\n        /* \"#utility.yul\":8109:8197   */\n      mstore\n        /* \"#utility.yul\":8216:8220   */\n      0x12\n        /* \"#utility.yul\":8213:8214   */\n      0x04\n        /* \"#utility.yul\":8206:8221   */\n      mstore\n        /* \"#utility.yul\":8240:8244   */\n      0x24\n        /* \"#utility.yul\":8237:8238   */\n      0x00\n        /* \"#utility.yul\":8230:8245   */\n      revert\n        /* \"#utility.yul\":8257:8442   */\n    tag_162:\n        /* \"#utility.yul\":8297:8298   */\n      0x00\n        /* \"#utility.yul\":8314:8334   */\n      tag_338\n        /* \"#utility.yul\":8332:8333   */\n      dup3\n        /* \"#utility.yul\":8314:8334   */\n      tag_225\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":8309:8334   */\n      swap2\n      pop\n        /* \"#utility.yul\":8348:8368   */\n      tag_339\n        /* \"#utility.yul\":8366:8367   */\n      dup4\n        /* \"#utility.yul\":8348:8368   */\n      tag_225\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":8343:8368   */\n      swap3\n      pop\n        /* \"#utility.yul\":8387:8388   */\n      dup3\n        /* \"#utility.yul\":8377:8412   */\n      tag_340\n      jumpi\n        /* \"#utility.yul\":8392:8410   */\n      tag_341\n      tag_238\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":8377:8412   */\n    tag_340:\n        /* \"#utility.yul\":8434:8435   */\n      dup3\n        /* \"#utility.yul\":8431:8432   */\n      dup3\n        /* \"#utility.yul\":8427:8436   */\n      div\n        /* \"#utility.yul\":8422:8436   */\n      swap1\n      pop\n        /* \"#utility.yul\":8257:8442   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8448:8890   */\n    tag_201:\n        /* \"#utility.yul\":8597:8601   */\n      0x00\n        /* \"#utility.yul\":8635:8637   */\n      0x60\n        /* \"#utility.yul\":8624:8633   */\n      dup3\n        /* \"#utility.yul\":8620:8638   */\n      add\n        /* \"#utility.yul\":8612:8638   */\n      swap1\n      pop\n        /* \"#utility.yul\":8648:8719   */\n      tag_343\n        /* \"#utility.yul\":8716:8717   */\n      0x00\n        /* \"#utility.yul\":8705:8714   */\n      dup4\n        /* \"#utility.yul\":8701:8718   */\n      add\n        /* \"#utility.yul\":8692:8698   */\n      dup7\n        /* \"#utility.yul\":8648:8719   */\n      tag_233\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":8729:8801   */\n      tag_344\n        /* \"#utility.yul\":8797:8799   */\n      0x20\n        /* \"#utility.yul\":8786:8795   */\n      dup4\n        /* \"#utility.yul\":8782:8800   */\n      add\n        /* \"#utility.yul\":8773:8779   */\n      dup6\n        /* \"#utility.yul\":8729:8801   */\n      tag_230\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":8811:8883   */\n      tag_345\n        /* \"#utility.yul\":8879:8881   */\n      0x40\n        /* \"#utility.yul\":8868:8877   */\n      dup4\n        /* \"#utility.yul\":8864:8882   */\n      add\n        /* \"#utility.yul\":8855:8861   */\n      dup5\n        /* \"#utility.yul\":8811:8883   */\n      tag_230\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":8448:8890   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8896:9087   */\n    tag_206:\n        /* \"#utility.yul\":8936:8939   */\n      0x00\n        /* \"#utility.yul\":8955:8975   */\n      tag_347\n        /* \"#utility.yul\":8973:8974   */\n      dup3\n        /* \"#utility.yul\":8955:8975   */\n      tag_225\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":8950:8975   */\n      swap2\n      pop\n        /* \"#utility.yul\":8989:9009   */\n      tag_348\n        /* \"#utility.yul\":9007:9008   */\n      dup4\n        /* \"#utility.yul\":8989:9009   */\n      tag_225\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":8984:9009   */\n      swap3\n      pop\n        /* \"#utility.yul\":9032:9033   */\n      dup3\n        /* \"#utility.yul\":9029:9030   */\n      dup3\n        /* \"#utility.yul\":9025:9034   */\n      add\n        /* \"#utility.yul\":9018:9034   */\n      swap1\n      pop\n        /* \"#utility.yul\":9053:9056   */\n      dup1\n        /* \"#utility.yul\":9050:9051   */\n      dup3\n        /* \"#utility.yul\":9047:9057   */\n      gt\n        /* \"#utility.yul\":9044:9080   */\n      iszero\n      tag_349\n      jumpi\n        /* \"#utility.yul\":9060:9078   */\n      tag_350\n      tag_237\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":9044:9080   */\n    tag_349:\n        /* \"#utility.yul\":8896:9087   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220494f42b9501d8285f4b158adf5d0cb0691f011d2395ec7afda8831f5140db0df64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1045": {
									"entryPoint": null,
									"id": 1045,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 1385,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 1178,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 1521,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": 1376,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 2148,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_address_fromMemory": {
									"entryPoint": 2169,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3054,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3804,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3069,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3819,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3874,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2406,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2252,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3752,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3651,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 3156,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 3463,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 3239,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3538,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2703,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2107,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2075,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2538,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3450,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2668,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2558,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2844,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 2427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2357,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2816,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2548,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2786,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3096,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3604,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 2310,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2263,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2592,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2070,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 2443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 3143,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2456,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2602,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2125,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2639,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11686:7",
										"nodeType": "YulBlock",
										"src": "0:11686:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:81:7",
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nativeSrc": "389:65:7",
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:7",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nativeSrc": "400:54:7",
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nativeSrc": "511:51:7",
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nativeSrc": "521:35:7",
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nativeSrc": "532:24:7",
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:7",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:7",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nativeSrc": "611:79:7",
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:7",
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:7",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:7",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nativeSrc": "670:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nativeSrc": "670:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nativeSrc": "641:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nativeSrc": "631:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nativeSrc": "624:43:7",
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nativeSrc": "621:63:7",
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:7",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nativeSrc": "759:80:7",
													"nodeType": "YulBlock",
													"src": "759:80:7",
													"statements": [
														{
															"nativeSrc": "769:22:7",
															"nodeType": "YulAssignment",
															"src": "769:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:7"
																},
																"nativeSrc": "778:13:7",
																"nodeType": "YulFunctionCall",
																"src": "778:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:7"
																},
																"nativeSrc": "800:33:7",
																"nodeType": "YulFunctionCall",
																"src": "800:33:7"
															},
															"nativeSrc": "800:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:7",
														"nodeType": "YulTypedName",
														"src": "737:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:7",
														"nodeType": "YulTypedName",
														"src": "745:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:7",
														"nodeType": "YulTypedName",
														"src": "753:5:7",
														"type": ""
													}
												],
												"src": "696:143:7"
											},
											{
												"body": {
													"nativeSrc": "956:552:7",
													"nodeType": "YulBlock",
													"src": "956:552:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1002:83:7",
																"nodeType": "YulBlock",
																"src": "1002:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1004:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "1004:77:7"
																			},
																			"nativeSrc": "1004:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1004:79:7"
																		},
																		"nativeSrc": "1004:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1004:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "977:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "977:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "986:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "986:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "973:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "973:3:7"
																		},
																		"nativeSrc": "973:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "973:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "998:2:7",
																		"nodeType": "YulLiteral",
																		"src": "998:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "969:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "969:3:7"
																},
																"nativeSrc": "969:32:7",
																"nodeType": "YulFunctionCall",
																"src": "969:32:7"
															},
															"nativeSrc": "966:119:7",
															"nodeType": "YulIf",
															"src": "966:119:7"
														},
														{
															"nativeSrc": "1095:128:7",
															"nodeType": "YulBlock",
															"src": "1095:128:7",
															"statements": [
																{
																	"nativeSrc": "1110:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1110:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1124:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1124:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1114:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1114:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1139:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1139:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1185:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1185:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1196:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1196:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1181:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1181:3:7"
																				},
																				"nativeSrc": "1181:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1181:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1205:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1205:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1149:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1149:31:7"
																		},
																		"nativeSrc": "1149:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1149:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1139:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1139:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1233:129:7",
															"nodeType": "YulBlock",
															"src": "1233:129:7",
															"statements": [
																{
																	"nativeSrc": "1248:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1248:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1262:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1262:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1252:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1252:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1278:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1278:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1324:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1324:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1335:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1335:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1320:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1320:3:7"
																				},
																				"nativeSrc": "1320:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1320:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1344:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1344:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1288:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1288:31:7"
																		},
																		"nativeSrc": "1288:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1288:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1278:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1278:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1372:129:7",
															"nodeType": "YulBlock",
															"src": "1372:129:7",
															"statements": [
																{
																	"nativeSrc": "1387:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1387:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1401:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1401:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1391:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1391:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1417:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1417:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1463:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1463:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1474:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1474:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1459:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1459:3:7"
																				},
																				"nativeSrc": "1459:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1459:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1483:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1483:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1427:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1427:31:7"
																		},
																		"nativeSrc": "1427:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1427:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1417:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1417:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_address_fromMemory",
												"nativeSrc": "845:663:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "910:9:7",
														"nodeType": "YulTypedName",
														"src": "910:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "921:7:7",
														"nodeType": "YulTypedName",
														"src": "921:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "933:6:7",
														"nodeType": "YulTypedName",
														"src": "933:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "941:6:7",
														"nodeType": "YulTypedName",
														"src": "941:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "949:6:7",
														"nodeType": "YulTypedName",
														"src": "949:6:7",
														"type": ""
													}
												],
												"src": "845:663:7"
											},
											{
												"body": {
													"nativeSrc": "1573:40:7",
													"nodeType": "YulBlock",
													"src": "1573:40:7",
													"statements": [
														{
															"nativeSrc": "1584:22:7",
															"nodeType": "YulAssignment",
															"src": "1584:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1600:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1600:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1594:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1594:5:7"
																},
																"nativeSrc": "1594:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1594:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1584:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1584:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1514:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1556:5:7",
														"nodeType": "YulTypedName",
														"src": "1556:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1566:6:7",
														"nodeType": "YulTypedName",
														"src": "1566:6:7",
														"type": ""
													}
												],
												"src": "1514:99:7"
											},
											{
												"body": {
													"nativeSrc": "1647:152:7",
													"nodeType": "YulBlock",
													"src": "1647:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1664:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1664:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1667:77:7",
																		"nodeType": "YulLiteral",
																		"src": "1667:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1657:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1657:6:7"
																},
																"nativeSrc": "1657:88:7",
																"nodeType": "YulFunctionCall",
																"src": "1657:88:7"
															},
															"nativeSrc": "1657:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "1657:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1761:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1761:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1764:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1764:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1754:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1754:6:7"
																},
																"nativeSrc": "1754:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1754:15:7"
															},
															"nativeSrc": "1754:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1754:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1785:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1785:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1788:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1788:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1778:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1778:6:7"
																},
																"nativeSrc": "1778:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1778:15:7"
															},
															"nativeSrc": "1778:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1778:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1619:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1619:180:7"
											},
											{
												"body": {
													"nativeSrc": "1833:152:7",
													"nodeType": "YulBlock",
													"src": "1833:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1850:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1850:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1853:77:7",
																		"nodeType": "YulLiteral",
																		"src": "1853:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1843:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1843:6:7"
																},
																"nativeSrc": "1843:88:7",
																"nodeType": "YulFunctionCall",
																"src": "1843:88:7"
															},
															"nativeSrc": "1843:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "1843:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1947:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1947:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1950:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1950:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1940:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1940:6:7"
																},
																"nativeSrc": "1940:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1940:15:7"
															},
															"nativeSrc": "1940:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1940:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1971:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1971:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1974:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1974:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1964:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1964:6:7"
																},
																"nativeSrc": "1964:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1964:15:7"
															},
															"nativeSrc": "1964:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1964:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1805:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1805:180:7"
											},
											{
												"body": {
													"nativeSrc": "2042:269:7",
													"nodeType": "YulBlock",
													"src": "2042:269:7",
													"statements": [
														{
															"nativeSrc": "2052:22:7",
															"nodeType": "YulAssignment",
															"src": "2052:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2066:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2066:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2072:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2072:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2062:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2062:3:7"
																},
																"nativeSrc": "2062:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2062:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2052:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2052:6:7"
																}
															]
														},
														{
															"nativeSrc": "2083:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2083:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2113:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2113:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2119:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2119:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2109:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2109:3:7"
																},
																"nativeSrc": "2109:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2109:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2087:18:7",
																	"nodeType": "YulTypedName",
																	"src": "2087:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2160:51:7",
																"nodeType": "YulBlock",
																"src": "2160:51:7",
																"statements": [
																	{
																		"nativeSrc": "2174:27:7",
																		"nodeType": "YulAssignment",
																		"src": "2174:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2188:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "2188:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2196:4:7",
																					"nodeType": "YulLiteral",
																					"src": "2196:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2184:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2184:3:7"
																			},
																			"nativeSrc": "2184:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2184:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2174:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2174:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2140:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "2140:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2133:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2133:6:7"
																},
																"nativeSrc": "2133:26:7",
																"nodeType": "YulFunctionCall",
																"src": "2133:26:7"
															},
															"nativeSrc": "2130:81:7",
															"nodeType": "YulIf",
															"src": "2130:81:7"
														},
														{
															"body": {
																"nativeSrc": "2263:42:7",
																"nodeType": "YulBlock",
																"src": "2263:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "2277:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "2277:16:7"
																			},
																			"nativeSrc": "2277:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2277:18:7"
																		},
																		"nativeSrc": "2277:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2277:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2227:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "2227:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2250:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2250:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2258:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2258:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2247:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2247:2:7"
																		},
																		"nativeSrc": "2247:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2247:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2224:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2224:2:7"
																},
																"nativeSrc": "2224:38:7",
																"nodeType": "YulFunctionCall",
																"src": "2224:38:7"
															},
															"nativeSrc": "2221:84:7",
															"nodeType": "YulIf",
															"src": "2221:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1991:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2026:4:7",
														"nodeType": "YulTypedName",
														"src": "2026:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2035:6:7",
														"nodeType": "YulTypedName",
														"src": "2035:6:7",
														"type": ""
													}
												],
												"src": "1991:320:7"
											},
											{
												"body": {
													"nativeSrc": "2371:87:7",
													"nodeType": "YulBlock",
													"src": "2371:87:7",
													"statements": [
														{
															"nativeSrc": "2381:11:7",
															"nodeType": "YulAssignment",
															"src": "2381:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "2389:3:7",
																"nodeType": "YulIdentifier",
																"src": "2389:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2381:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2381:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2409:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2409:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2412:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2412:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2402:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:7"
																},
																"nativeSrc": "2402:14:7",
																"nodeType": "YulFunctionCall",
																"src": "2402:14:7"
															},
															"nativeSrc": "2402:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "2402:14:7"
														},
														{
															"nativeSrc": "2425:26:7",
															"nodeType": "YulAssignment",
															"src": "2425:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2443:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2443:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2446:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2446:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2433:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "2433:9:7"
																},
																"nativeSrc": "2433:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2433:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2425:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2425:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2317:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2358:3:7",
														"nodeType": "YulTypedName",
														"src": "2358:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2366:4:7",
														"nodeType": "YulTypedName",
														"src": "2366:4:7",
														"type": ""
													}
												],
												"src": "2317:141:7"
											},
											{
												"body": {
													"nativeSrc": "2508:49:7",
													"nodeType": "YulBlock",
													"src": "2508:49:7",
													"statements": [
														{
															"nativeSrc": "2518:33:7",
															"nodeType": "YulAssignment",
															"src": "2518:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2536:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2536:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2543:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2543:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2532:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:7"
																		},
																		"nativeSrc": "2532:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2548:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2548:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2528:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:7"
																},
																"nativeSrc": "2528:23:7",
																"nodeType": "YulFunctionCall",
																"src": "2528:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2518:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2518:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2464:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2491:5:7",
														"nodeType": "YulTypedName",
														"src": "2491:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2501:6:7",
														"nodeType": "YulTypedName",
														"src": "2501:6:7",
														"type": ""
													}
												],
												"src": "2464:93:7"
											},
											{
												"body": {
													"nativeSrc": "2616:54:7",
													"nodeType": "YulBlock",
													"src": "2616:54:7",
													"statements": [
														{
															"nativeSrc": "2626:37:7",
															"nodeType": "YulAssignment",
															"src": "2626:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2651:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2651:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2657:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2657:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2647:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2647:3:7"
																},
																"nativeSrc": "2647:16:7",
																"nodeType": "YulFunctionCall",
																"src": "2647:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2626:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "2626:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2563:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2591:4:7",
														"nodeType": "YulTypedName",
														"src": "2591:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2597:5:7",
														"nodeType": "YulTypedName",
														"src": "2597:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2607:8:7",
														"nodeType": "YulTypedName",
														"src": "2607:8:7",
														"type": ""
													}
												],
												"src": "2563:107:7"
											},
											{
												"body": {
													"nativeSrc": "2752:317:7",
													"nodeType": "YulBlock",
													"src": "2752:317:7",
													"statements": [
														{
															"nativeSrc": "2762:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2762:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2783:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "2783:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2795:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2795:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2779:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2779:3:7"
																},
																"nativeSrc": "2779:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2779:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2766:9:7",
																	"nodeType": "YulTypedName",
																	"src": "2766:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2806:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2806:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2837:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2837:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2848:66:7",
																		"nodeType": "YulLiteral",
																		"src": "2848:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2818:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2818:18:7"
																},
																"nativeSrc": "2818:97:7",
																"nodeType": "YulFunctionCall",
																"src": "2818:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2810:4:7",
																	"nodeType": "YulTypedName",
																	"src": "2810:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2924:51:7",
															"nodeType": "YulAssignment",
															"src": "2924:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2955:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2955:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2966:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "2966:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2936:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2936:18:7"
																},
																"nativeSrc": "2936:39:7",
																"nodeType": "YulFunctionCall",
																"src": "2936:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2924:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "2924:8:7"
																}
															]
														},
														{
															"nativeSrc": "2984:30:7",
															"nodeType": "YulAssignment",
															"src": "2984:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2997:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2997:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "3008:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "3008:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3004:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3004:3:7"
																		},
																		"nativeSrc": "3004:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3004:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2993:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2993:3:7"
																},
																"nativeSrc": "2993:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2993:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2984:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2984:5:7"
																}
															]
														},
														{
															"nativeSrc": "3023:40:7",
															"nodeType": "YulAssignment",
															"src": "3023:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3036:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3036:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "3047:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "3047:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "3057:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "3057:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3043:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3043:3:7"
																		},
																		"nativeSrc": "3043:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3043:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3033:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3033:2:7"
																},
																"nativeSrc": "3033:30:7",
																"nodeType": "YulFunctionCall",
																"src": "3033:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3023:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3023:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2676:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2713:5:7",
														"nodeType": "YulTypedName",
														"src": "2713:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2720:10:7",
														"nodeType": "YulTypedName",
														"src": "2720:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2732:8:7",
														"nodeType": "YulTypedName",
														"src": "2732:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2745:6:7",
														"nodeType": "YulTypedName",
														"src": "2745:6:7",
														"type": ""
													}
												],
												"src": "2676:393:7"
											},
											{
												"body": {
													"nativeSrc": "3120:32:7",
													"nodeType": "YulBlock",
													"src": "3120:32:7",
													"statements": [
														{
															"nativeSrc": "3130:16:7",
															"nodeType": "YulAssignment",
															"src": "3130:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "3141:5:7",
																"nodeType": "YulIdentifier",
																"src": "3141:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3130:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3130:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3075:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3102:5:7",
														"nodeType": "YulTypedName",
														"src": "3102:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3112:7:7",
														"nodeType": "YulTypedName",
														"src": "3112:7:7",
														"type": ""
													}
												],
												"src": "3075:77:7"
											},
											{
												"body": {
													"nativeSrc": "3190:28:7",
													"nodeType": "YulBlock",
													"src": "3190:28:7",
													"statements": [
														{
															"nativeSrc": "3200:12:7",
															"nodeType": "YulAssignment",
															"src": "3200:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "3207:5:7",
																"nodeType": "YulIdentifier",
																"src": "3207:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3200:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3200:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3158:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3176:5:7",
														"nodeType": "YulTypedName",
														"src": "3176:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3186:3:7",
														"nodeType": "YulTypedName",
														"src": "3186:3:7",
														"type": ""
													}
												],
												"src": "3158:60:7"
											},
											{
												"body": {
													"nativeSrc": "3284:82:7",
													"nodeType": "YulBlock",
													"src": "3284:82:7",
													"statements": [
														{
															"nativeSrc": "3294:66:7",
															"nodeType": "YulAssignment",
															"src": "3294:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3352:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3352:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3334:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "3334:17:7"
																				},
																				"nativeSrc": "3334:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3334:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3325:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "3325:8:7"
																		},
																		"nativeSrc": "3325:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3325:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3307:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "3307:17:7"
																},
																"nativeSrc": "3307:53:7",
																"nodeType": "YulFunctionCall",
																"src": "3307:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3294:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "3294:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "3224:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3264:5:7",
														"nodeType": "YulTypedName",
														"src": "3264:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3274:9:7",
														"nodeType": "YulTypedName",
														"src": "3274:9:7",
														"type": ""
													}
												],
												"src": "3224:142:7"
											},
											{
												"body": {
													"nativeSrc": "3419:28:7",
													"nodeType": "YulBlock",
													"src": "3419:28:7",
													"statements": [
														{
															"nativeSrc": "3429:12:7",
															"nodeType": "YulAssignment",
															"src": "3429:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "3436:5:7",
																"nodeType": "YulIdentifier",
																"src": "3436:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3429:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3429:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3372:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3405:5:7",
														"nodeType": "YulTypedName",
														"src": "3405:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3415:3:7",
														"nodeType": "YulTypedName",
														"src": "3415:3:7",
														"type": ""
													}
												],
												"src": "3372:75:7"
											},
											{
												"body": {
													"nativeSrc": "3529:193:7",
													"nodeType": "YulBlock",
													"src": "3529:193:7",
													"statements": [
														{
															"nativeSrc": "3539:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3539:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3594:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "3594:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3563:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "3563:30:7"
																},
																"nativeSrc": "3563:39:7",
																"nodeType": "YulFunctionCall",
																"src": "3563:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3543:16:7",
																	"nodeType": "YulTypedName",
																	"src": "3543:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3618:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3618:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3658:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "3658:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3652:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "3652:5:7"
																				},
																				"nativeSrc": "3652:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3652:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3665:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3665:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3697:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "3697:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3673:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "3673:23:7"
																				},
																				"nativeSrc": "3673:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3673:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3624:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "3624:27:7"
																		},
																		"nativeSrc": "3624:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3624:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3611:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3611:6:7"
																},
																"nativeSrc": "3611:105:7",
																"nodeType": "YulFunctionCall",
																"src": "3611:105:7"
															},
															"nativeSrc": "3611:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "3611:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3453:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3506:4:7",
														"nodeType": "YulTypedName",
														"src": "3506:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3512:6:7",
														"nodeType": "YulTypedName",
														"src": "3512:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3520:7:7",
														"nodeType": "YulTypedName",
														"src": "3520:7:7",
														"type": ""
													}
												],
												"src": "3453:269:7"
											},
											{
												"body": {
													"nativeSrc": "3777:24:7",
													"nodeType": "YulBlock",
													"src": "3777:24:7",
													"statements": [
														{
															"nativeSrc": "3787:8:7",
															"nodeType": "YulAssignment",
															"src": "3787:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "3794:1:7",
																"nodeType": "YulLiteral",
																"src": "3794:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3787:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3787:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3728:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3773:3:7",
														"nodeType": "YulTypedName",
														"src": "3773:3:7",
														"type": ""
													}
												],
												"src": "3728:73:7"
											},
											{
												"body": {
													"nativeSrc": "3860:136:7",
													"nodeType": "YulBlock",
													"src": "3860:136:7",
													"statements": [
														{
															"nativeSrc": "3870:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3870:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3884:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "3884:30:7"
																},
																"nativeSrc": "3884:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3884:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3874:6:7",
																	"nodeType": "YulTypedName",
																	"src": "3874:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3969:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3969:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3975:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3975:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3983:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3983:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3925:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3925:43:7"
																},
																"nativeSrc": "3925:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3925:65:7"
															},
															"nativeSrc": "3925:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3925:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3807:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3846:4:7",
														"nodeType": "YulTypedName",
														"src": "3846:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3852:6:7",
														"nodeType": "YulTypedName",
														"src": "3852:6:7",
														"type": ""
													}
												],
												"src": "3807:189:7"
											},
											{
												"body": {
													"nativeSrc": "4052:136:7",
													"nodeType": "YulBlock",
													"src": "4052:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4119:63:7",
																"nodeType": "YulBlock",
																"src": "4119:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4163:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "4163:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4170:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4170:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "4133:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "4133:29:7"
																			},
																			"nativeSrc": "4133:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4133:39:7"
																		},
																		"nativeSrc": "4133:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4133:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "4072:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4072:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4079:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4079:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4069:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4069:2:7"
																},
																"nativeSrc": "4069:14:7",
																"nodeType": "YulFunctionCall",
																"src": "4069:14:7"
															},
															"nativeSrc": "4062:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4084:26:7",
																"nodeType": "YulBlock",
																"src": "4084:26:7",
																"statements": [
																	{
																		"nativeSrc": "4086:22:7",
																		"nodeType": "YulAssignment",
																		"src": "4086:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4099:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "4099:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4106:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4106:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4095:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4095:3:7"
																			},
																			"nativeSrc": "4095:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4095:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "4086:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4086:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4066:2:7",
																"nodeType": "YulBlock",
																"src": "4066:2:7",
																"statements": []
															},
															"src": "4062:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "4002:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "4040:5:7",
														"nodeType": "YulTypedName",
														"src": "4040:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4047:3:7",
														"nodeType": "YulTypedName",
														"src": "4047:3:7",
														"type": ""
													}
												],
												"src": "4002:186:7"
											},
											{
												"body": {
													"nativeSrc": "4273:464:7",
													"nodeType": "YulBlock",
													"src": "4273:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4299:431:7",
																"nodeType": "YulBlock",
																"src": "4299:431:7",
																"statements": [
																	{
																		"nativeSrc": "4313:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4313:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4361:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "4361:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4329:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "4329:31:7"
																			},
																			"nativeSrc": "4329:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4329:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4317:8:7",
																				"nodeType": "YulTypedName",
																				"src": "4317:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4380:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4380:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4403:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "4403:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4431:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "4431:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4413:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "4413:17:7"
																					},
																					"nativeSrc": "4413:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4413:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4399:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4399:3:7"
																			},
																			"nativeSrc": "4399:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4399:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4384:11:7",
																				"nodeType": "YulTypedName",
																				"src": "4384:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4600:27:7",
																			"nodeType": "YulBlock",
																			"src": "4600:27:7",
																			"statements": [
																				{
																					"nativeSrc": "4602:23:7",
																					"nodeType": "YulAssignment",
																					"src": "4602:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4617:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "4617:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4602:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "4602:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4584:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "4584:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4596:2:7",
																					"nodeType": "YulLiteral",
																					"src": "4596:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4581:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "4581:2:7"
																			},
																			"nativeSrc": "4581:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4581:18:7"
																		},
																		"nativeSrc": "4578:49:7",
																		"nodeType": "YulIf",
																		"src": "4578:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4669:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "4669:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4686:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "4686:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4714:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4714:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4696:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "4696:17:7"
																							},
																							"nativeSrc": "4696:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "4696:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4682:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4682:3:7"
																					},
																					"nativeSrc": "4682:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4682:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4640:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "4640:28:7"
																			},
																			"nativeSrc": "4640:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4640:80:7"
																		},
																		"nativeSrc": "4640:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4640:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "4290:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4290:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4295:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4295:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4287:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4287:2:7"
																},
																"nativeSrc": "4287:11:7",
																"nodeType": "YulFunctionCall",
																"src": "4287:11:7"
															},
															"nativeSrc": "4284:446:7",
															"nodeType": "YulIf",
															"src": "4284:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "4194:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "4249:5:7",
														"nodeType": "YulTypedName",
														"src": "4249:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4256:3:7",
														"nodeType": "YulTypedName",
														"src": "4256:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "4261:10:7",
														"nodeType": "YulTypedName",
														"src": "4261:10:7",
														"type": ""
													}
												],
												"src": "4194:543:7"
											},
											{
												"body": {
													"nativeSrc": "4806:54:7",
													"nodeType": "YulBlock",
													"src": "4806:54:7",
													"statements": [
														{
															"nativeSrc": "4816:37:7",
															"nodeType": "YulAssignment",
															"src": "4816:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4841:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4841:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4847:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4847:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4837:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4837:3:7"
																},
																"nativeSrc": "4837:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4837:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4816:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "4816:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4743:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4781:4:7",
														"nodeType": "YulTypedName",
														"src": "4781:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4787:5:7",
														"nodeType": "YulTypedName",
														"src": "4787:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4797:8:7",
														"nodeType": "YulTypedName",
														"src": "4797:8:7",
														"type": ""
													}
												],
												"src": "4743:117:7"
											},
											{
												"body": {
													"nativeSrc": "4917:118:7",
													"nodeType": "YulBlock",
													"src": "4917:118:7",
													"statements": [
														{
															"nativeSrc": "4927:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4927:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4976:1:7",
																						"nodeType": "YulLiteral",
																						"src": "4976:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4979:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "4979:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4972:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4972:3:7"
																				},
																				"nativeSrc": "4972:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4972:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4991:1:7",
																						"nodeType": "YulLiteral",
																						"src": "4991:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4987:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4987:3:7"
																				},
																				"nativeSrc": "4987:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4987:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4943:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "4943:28:7"
																		},
																		"nativeSrc": "4943:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4943:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4939:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4939:3:7"
																},
																"nativeSrc": "4939:56:7",
																"nodeType": "YulFunctionCall",
																"src": "4939:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4931:4:7",
																	"nodeType": "YulTypedName",
																	"src": "4931:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5004:25:7",
															"nodeType": "YulAssignment",
															"src": "5004:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5018:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5018:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "5024:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5024:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5014:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5014:3:7"
																},
																"nativeSrc": "5014:15:7",
																"nodeType": "YulFunctionCall",
																"src": "5014:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5004:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5004:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4866:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4894:4:7",
														"nodeType": "YulTypedName",
														"src": "4894:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4900:5:7",
														"nodeType": "YulTypedName",
														"src": "4900:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4910:6:7",
														"nodeType": "YulTypedName",
														"src": "4910:6:7",
														"type": ""
													}
												],
												"src": "4866:169:7"
											},
											{
												"body": {
													"nativeSrc": "5121:214:7",
													"nodeType": "YulBlock",
													"src": "5121:214:7",
													"statements": [
														{
															"nativeSrc": "5254:37:7",
															"nodeType": "YulAssignment",
															"src": "5254:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5281:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5281:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "5287:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5287:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "5262:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "5262:18:7"
																},
																"nativeSrc": "5262:29:7",
																"nodeType": "YulFunctionCall",
																"src": "5262:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5254:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5254:4:7"
																}
															]
														},
														{
															"nativeSrc": "5300:29:7",
															"nodeType": "YulAssignment",
															"src": "5300:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5311:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5311:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5321:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5321:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5324:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "5324:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5317:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5317:3:7"
																		},
																		"nativeSrc": "5317:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5317:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5308:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5308:2:7"
																},
																"nativeSrc": "5308:21:7",
																"nodeType": "YulFunctionCall",
																"src": "5308:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "5300:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5300:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "5040:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5102:4:7",
														"nodeType": "YulTypedName",
														"src": "5102:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5108:3:7",
														"nodeType": "YulTypedName",
														"src": "5108:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "5116:4:7",
														"nodeType": "YulTypedName",
														"src": "5116:4:7",
														"type": ""
													}
												],
												"src": "5040:295:7"
											},
											{
												"body": {
													"nativeSrc": "5432:1303:7",
													"nodeType": "YulBlock",
													"src": "5432:1303:7",
													"statements": [
														{
															"nativeSrc": "5443:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5443:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5490:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5490:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5457:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "5457:32:7"
																},
																"nativeSrc": "5457:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5457:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5447:6:7",
																	"nodeType": "YulTypedName",
																	"src": "5447:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5579:22:7",
																"nodeType": "YulBlock",
																"src": "5579:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5581:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "5581:16:7"
																			},
																			"nativeSrc": "5581:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5581:18:7"
																		},
																		"nativeSrc": "5581:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5581:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5551:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5551:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5559:18:7",
																		"nodeType": "YulLiteral",
																		"src": "5559:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5548:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5548:2:7"
																},
																"nativeSrc": "5548:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5548:30:7"
															},
															"nativeSrc": "5545:56:7",
															"nodeType": "YulIf",
															"src": "5545:56:7"
														},
														{
															"nativeSrc": "5611:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5611:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5657:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5657:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5651:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "5651:5:7"
																		},
																		"nativeSrc": "5651:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5651:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5625:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "5625:25:7"
																},
																"nativeSrc": "5625:38:7",
																"nodeType": "YulFunctionCall",
																"src": "5625:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5615:6:7",
																	"nodeType": "YulTypedName",
																	"src": "5615:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5756:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5756:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5762:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5762:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5770:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5770:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5710:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "5710:45:7"
																},
																"nativeSrc": "5710:67:7",
																"nodeType": "YulFunctionCall",
																"src": "5710:67:7"
															},
															"nativeSrc": "5710:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "5710:67:7"
														},
														{
															"nativeSrc": "5787:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5787:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "5804:1:7",
																"nodeType": "YulLiteral",
																"src": "5804:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5791:9:7",
																	"nodeType": "YulTypedName",
																	"src": "5791:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5815:17:7",
															"nodeType": "YulAssignment",
															"src": "5815:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "5828:4:7",
																"nodeType": "YulLiteral",
																"src": "5828:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5815:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5815:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5879:611:7",
																		"nodeType": "YulBlock",
																		"src": "5879:611:7",
																		"statements": [
																			{
																				"nativeSrc": "5893:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5893:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5912:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "5912:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5924:4:7",
																									"nodeType": "YulLiteral",
																									"src": "5924:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5920:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "5920:3:7"
																							},
																							"nativeSrc": "5920:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "5920:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5908:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "5908:3:7"
																					},
																					"nativeSrc": "5908:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5908:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5897:7:7",
																						"nodeType": "YulTypedName",
																						"src": "5897:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5944:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5944:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5990:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "5990:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5958:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "5958:31:7"
																					},
																					"nativeSrc": "5958:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5958:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5948:6:7",
																						"nodeType": "YulTypedName",
																						"src": "5948:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6008:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6008:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6017:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6017:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "6012:1:7",
																						"nodeType": "YulTypedName",
																						"src": "6012:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6076:163:7",
																					"nodeType": "YulBlock",
																					"src": "6076:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6101:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "6101:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "6119:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "6119:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "6124:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "6124:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "6115:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "6115:3:7"
																												},
																												"nativeSrc": "6115:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "6115:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "6109:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "6109:5:7"
																										},
																										"nativeSrc": "6109:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "6109:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6094:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "6094:6:7"
																								},
																								"nativeSrc": "6094:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6094:42:7"
																							},
																							"nativeSrc": "6094:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "6094:42:7"
																						},
																						{
																							"nativeSrc": "6153:24:7",
																							"nodeType": "YulAssignment",
																							"src": "6153:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6167:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "6167:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6175:1:7",
																										"nodeType": "YulLiteral",
																										"src": "6175:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6163:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "6163:3:7"
																								},
																								"nativeSrc": "6163:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6163:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "6153:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "6153:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "6194:31:7",
																							"nodeType": "YulAssignment",
																							"src": "6194:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "6211:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "6211:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6222:2:7",
																										"nodeType": "YulLiteral",
																										"src": "6222:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6207:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "6207:3:7"
																								},
																								"nativeSrc": "6207:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6207:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "6194:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "6194:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "6042:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "6042:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6045:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "6045:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6039:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "6039:2:7"
																					},
																					"nativeSrc": "6039:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6039:14:7"
																				},
																				"nativeSrc": "6031:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "6054:21:7",
																					"nodeType": "YulBlock",
																					"src": "6054:21:7",
																					"statements": [
																						{
																							"nativeSrc": "6056:17:7",
																							"nodeType": "YulAssignment",
																							"src": "6056:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "6065:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "6065:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6068:4:7",
																										"nodeType": "YulLiteral",
																										"src": "6068:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6061:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "6061:3:7"
																								},
																								"nativeSrc": "6061:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6061:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "6056:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "6056:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "6035:3:7",
																					"nodeType": "YulBlock",
																					"src": "6035:3:7",
																					"statements": []
																				},
																				"src": "6031:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "6275:156:7",
																					"nodeType": "YulBlock",
																					"src": "6275:156:7",
																					"statements": [
																						{
																							"nativeSrc": "6293:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "6293:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6320:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "6320:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6325:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "6325:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6316:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "6316:3:7"
																										},
																										"nativeSrc": "6316:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "6316:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6310:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6310:5:7"
																								},
																								"nativeSrc": "6310:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6310:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "6297:9:7",
																									"nodeType": "YulTypedName",
																									"src": "6297:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6360:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "6360:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6387:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "6387:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6402:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "6402:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6410:4:7",
																														"nodeType": "YulLiteral",
																														"src": "6410:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6398:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "6398:3:7"
																												},
																												"nativeSrc": "6398:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "6398:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6368:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "6368:18:7"
																										},
																										"nativeSrc": "6368:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "6368:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6353:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "6353:6:7"
																								},
																								"nativeSrc": "6353:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6353:64:7"
																							},
																							"nativeSrc": "6353:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "6353:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6258:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "6258:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "6267:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "6267:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6255:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "6255:2:7"
																					},
																					"nativeSrc": "6255:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6255:19:7"
																				},
																				"nativeSrc": "6252:179:7",
																				"nodeType": "YulIf",
																				"src": "6252:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6451:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "6451:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6465:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "6465:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6473:1:7",
																											"nodeType": "YulLiteral",
																											"src": "6473:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6461:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "6461:3:7"
																									},
																									"nativeSrc": "6461:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "6461:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6477:1:7",
																									"nodeType": "YulLiteral",
																									"src": "6477:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6457:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "6457:3:7"
																							},
																							"nativeSrc": "6457:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "6457:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6444:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6444:6:7"
																					},
																					"nativeSrc": "6444:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6444:36:7"
																				},
																				"nativeSrc": "6444:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "6444:36:7"
																			}
																		]
																	},
																	"nativeSrc": "5872:618:7",
																	"nodeType": "YulCase",
																	"src": "5872:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5877:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5877:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6507:222:7",
																		"nodeType": "YulBlock",
																		"src": "6507:222:7",
																		"statements": [
																			{
																				"nativeSrc": "6521:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6521:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6534:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6534:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6525:5:7",
																						"nodeType": "YulTypedName",
																						"src": "6525:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6558:67:7",
																					"nodeType": "YulBlock",
																					"src": "6558:67:7",
																					"statements": [
																						{
																							"nativeSrc": "6576:35:7",
																							"nodeType": "YulAssignment",
																							"src": "6576:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6595:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "6595:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6600:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "6600:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6591:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "6591:3:7"
																										},
																										"nativeSrc": "6591:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "6591:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6585:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6585:5:7"
																								},
																								"nativeSrc": "6585:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6585:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6576:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6576:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6551:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "6551:6:7"
																				},
																				"nativeSrc": "6548:77:7",
																				"nodeType": "YulIf",
																				"src": "6548:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6645:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "6645:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6704:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6704:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6711:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "6711:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6651:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "6651:52:7"
																							},
																							"nativeSrc": "6651:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "6651:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6638:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6638:6:7"
																					},
																					"nativeSrc": "6638:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6638:81:7"
																				},
																				"nativeSrc": "6638:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "6638:81:7"
																			}
																		]
																	},
																	"nativeSrc": "6499:230:7",
																	"nodeType": "YulCase",
																	"src": "6499:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5852:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5852:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5860:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5860:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5849:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5849:2:7"
																},
																"nativeSrc": "5849:14:7",
																"nodeType": "YulFunctionCall",
																"src": "5849:14:7"
															},
															"nativeSrc": "5842:887:7",
															"nodeType": "YulSwitch",
															"src": "5842:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5340:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5421:4:7",
														"nodeType": "YulTypedName",
														"src": "5421:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5427:3:7",
														"nodeType": "YulTypedName",
														"src": "5427:3:7",
														"type": ""
													}
												],
												"src": "5340:1395:7"
											},
											{
												"body": {
													"nativeSrc": "6806:53:7",
													"nodeType": "YulBlock",
													"src": "6806:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6823:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6823:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6846:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6846:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6828:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "6828:17:7"
																		},
																		"nativeSrc": "6828:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6828:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6816:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6816:6:7"
																},
																"nativeSrc": "6816:37:7",
																"nodeType": "YulFunctionCall",
																"src": "6816:37:7"
															},
															"nativeSrc": "6816:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "6816:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6741:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6794:5:7",
														"nodeType": "YulTypedName",
														"src": "6794:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6801:3:7",
														"nodeType": "YulTypedName",
														"src": "6801:3:7",
														"type": ""
													}
												],
												"src": "6741:118:7"
											},
											{
												"body": {
													"nativeSrc": "6963:124:7",
													"nodeType": "YulBlock",
													"src": "6963:124:7",
													"statements": [
														{
															"nativeSrc": "6973:26:7",
															"nodeType": "YulAssignment",
															"src": "6973:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6985:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6985:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6996:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6996:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6981:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6981:3:7"
																},
																"nativeSrc": "6981:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6981:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6973:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6973:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7053:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7053:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7066:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7066:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7077:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7077:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7062:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7062:3:7"
																		},
																		"nativeSrc": "7062:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7062:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7009:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7009:43:7"
																},
																"nativeSrc": "7009:71:7",
																"nodeType": "YulFunctionCall",
																"src": "7009:71:7"
															},
															"nativeSrc": "7009:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "7009:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6865:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6935:9:7",
														"nodeType": "YulTypedName",
														"src": "6935:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6947:6:7",
														"nodeType": "YulTypedName",
														"src": "6947:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6958:4:7",
														"nodeType": "YulTypedName",
														"src": "6958:4:7",
														"type": ""
													}
												],
												"src": "6865:222:7"
											},
											{
												"body": {
													"nativeSrc": "7121:152:7",
													"nodeType": "YulBlock",
													"src": "7121:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7138:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7138:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7141:77:7",
																		"nodeType": "YulLiteral",
																		"src": "7141:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7131:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7131:6:7"
																},
																"nativeSrc": "7131:88:7",
																"nodeType": "YulFunctionCall",
																"src": "7131:88:7"
															},
															"nativeSrc": "7131:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "7131:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7235:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7235:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7238:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7238:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7228:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7228:6:7"
																},
																"nativeSrc": "7228:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7228:15:7"
															},
															"nativeSrc": "7228:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7228:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7259:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7259:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7262:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7262:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7252:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7252:6:7"
																},
																"nativeSrc": "7252:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7252:15:7"
															},
															"nativeSrc": "7252:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7252:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7093:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "7093:180:7"
											},
											{
												"body": {
													"nativeSrc": "7330:51:7",
													"nodeType": "YulBlock",
													"src": "7330:51:7",
													"statements": [
														{
															"nativeSrc": "7340:34:7",
															"nodeType": "YulAssignment",
															"src": "7340:34:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7365:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7365:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7368:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7368:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7361:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7361:3:7"
																},
																"nativeSrc": "7361:13:7",
																"nodeType": "YulFunctionCall",
																"src": "7361:13:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7340:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "7340:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "7279:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7311:5:7",
														"nodeType": "YulTypedName",
														"src": "7311:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7321:8:7",
														"nodeType": "YulTypedName",
														"src": "7321:8:7",
														"type": ""
													}
												],
												"src": "7279:102:7"
											},
											{
												"body": {
													"nativeSrc": "7460:775:7",
													"nodeType": "YulBlock",
													"src": "7460:775:7",
													"statements": [
														{
															"nativeSrc": "7470:15:7",
															"nodeType": "YulAssignment",
															"src": "7470:15:7",
															"value": {
																"name": "_power",
																"nativeSrc": "7479:6:7",
																"nodeType": "YulIdentifier",
																"src": "7479:6:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7470:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7470:5:7"
																}
															]
														},
														{
															"nativeSrc": "7494:14:7",
															"nodeType": "YulAssignment",
															"src": "7494:14:7",
															"value": {
																"name": "_base",
																"nativeSrc": "7503:5:7",
																"nodeType": "YulIdentifier",
																"src": "7503:5:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "7494:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7494:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7552:677:7",
																"nodeType": "YulBlock",
																"src": "7552:677:7",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "7640:22:7",
																			"nodeType": "YulBlock",
																			"src": "7640:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "7642:16:7",
																							"nodeType": "YulIdentifier",
																							"src": "7642:16:7"
																						},
																						"nativeSrc": "7642:18:7",
																						"nodeType": "YulFunctionCall",
																						"src": "7642:18:7"
																					},
																					"nativeSrc": "7642:18:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "7642:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7618:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "7618:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "7628:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "7628:3:7"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "7633:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "7633:4:7"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "7624:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "7624:3:7"
																					},
																					"nativeSrc": "7624:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7624:14:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "7615:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "7615:2:7"
																			},
																			"nativeSrc": "7615:24:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7615:24:7"
																		},
																		"nativeSrc": "7612:50:7",
																		"nodeType": "YulIf",
																		"src": "7612:50:7"
																	},
																	{
																		"body": {
																			"nativeSrc": "7707:419:7",
																			"nodeType": "YulBlock",
																			"src": "7707:419:7",
																			"statements": [
																				{
																					"nativeSrc": "8087:25:7",
																					"nodeType": "YulAssignment",
																					"src": "8087:25:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "8100:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "8100:5:7"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "8107:4:7",
																								"nodeType": "YulIdentifier",
																								"src": "8107:4:7"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "8096:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "8096:3:7"
																						},
																						"nativeSrc": "8096:16:7",
																						"nodeType": "YulFunctionCall",
																						"src": "8096:16:7"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "8087:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "8087:5:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "7682:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "7682:8:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7692:1:7",
																					"nodeType": "YulLiteral",
																					"src": "7692:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7678:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7678:3:7"
																			},
																			"nativeSrc": "7678:16:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7678:16:7"
																		},
																		"nativeSrc": "7675:451:7",
																		"nodeType": "YulIf",
																		"src": "7675:451:7"
																	},
																	{
																		"nativeSrc": "8139:23:7",
																		"nodeType": "YulAssignment",
																		"src": "8139:23:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "8151:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "8151:4:7"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "8157:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "8157:4:7"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "8147:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "8147:3:7"
																			},
																			"nativeSrc": "8147:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8147:15:7"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "8139:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8139:4:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8175:44:7",
																		"nodeType": "YulAssignment",
																		"src": "8175:44:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "8210:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "8210:8:7"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "8187:22:7",
																				"nodeType": "YulIdentifier",
																				"src": "8187:22:7"
																			},
																			"nativeSrc": "8187:32:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8187:32:7"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "8175:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "8175:8:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "7528:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "7528:8:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7538:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7538:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7525:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7525:2:7"
																},
																"nativeSrc": "7525:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7525:15:7"
															},
															"nativeSrc": "7517:712:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7541:2:7",
																"nodeType": "YulBlock",
																"src": "7541:2:7",
																"statements": []
															},
															"pre": {
																"nativeSrc": "7521:3:7",
																"nodeType": "YulBlock",
																"src": "7521:3:7",
																"statements": []
															},
															"src": "7517:712:7"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "7387:848:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "7415:6:7",
														"nodeType": "YulTypedName",
														"src": "7415:6:7",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "7423:5:7",
														"nodeType": "YulTypedName",
														"src": "7423:5:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7430:8:7",
														"nodeType": "YulTypedName",
														"src": "7430:8:7",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "7440:3:7",
														"nodeType": "YulTypedName",
														"src": "7440:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7448:5:7",
														"nodeType": "YulTypedName",
														"src": "7448:5:7",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "7455:4:7",
														"nodeType": "YulTypedName",
														"src": "7455:4:7",
														"type": ""
													}
												],
												"src": "7387:848:7"
											},
											{
												"body": {
													"nativeSrc": "8301:1013:7",
													"nodeType": "YulBlock",
													"src": "8301:1013:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "8496:20:7",
																"nodeType": "YulBlock",
																"src": "8496:20:7",
																"statements": [
																	{
																		"nativeSrc": "8498:10:7",
																		"nodeType": "YulAssignment",
																		"src": "8498:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8507:1:7",
																			"nodeType": "YulLiteral",
																			"src": "8507:1:7",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8498:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8498:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8509:5:7",
																		"nodeType": "YulLeave",
																		"src": "8509:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "8486:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "8486:8:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8479:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8479:6:7"
																},
																"nativeSrc": "8479:16:7",
																"nodeType": "YulFunctionCall",
																"src": "8479:16:7"
															},
															"nativeSrc": "8476:40:7",
															"nodeType": "YulIf",
															"src": "8476:40:7"
														},
														{
															"body": {
																"nativeSrc": "8541:20:7",
																"nodeType": "YulBlock",
																"src": "8541:20:7",
																"statements": [
																	{
																		"nativeSrc": "8543:10:7",
																		"nodeType": "YulAssignment",
																		"src": "8543:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8552:1:7",
																			"nodeType": "YulLiteral",
																			"src": "8552:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8543:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8543:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8554:5:7",
																		"nodeType": "YulLeave",
																		"src": "8554:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "8535:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8535:4:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8528:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8528:6:7"
																},
																"nativeSrc": "8528:12:7",
																"nodeType": "YulFunctionCall",
																"src": "8528:12:7"
															},
															"nativeSrc": "8525:36:7",
															"nodeType": "YulIf",
															"src": "8525:36:7"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8671:20:7",
																		"nodeType": "YulBlock",
																		"src": "8671:20:7",
																		"statements": [
																			{
																				"nativeSrc": "8673:10:7",
																				"nodeType": "YulAssignment",
																				"src": "8673:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8682:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8682:1:7",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "8673:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "8673:5:7"
																					}
																				]
																			},
																			{
																				"nativeSrc": "8684:5:7",
																				"nodeType": "YulLeave",
																				"src": "8684:5:7"
																			}
																		]
																	},
																	"nativeSrc": "8664:27:7",
																	"nodeType": "YulCase",
																	"src": "8664:27:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8669:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8669:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8715:176:7",
																		"nodeType": "YulBlock",
																		"src": "8715:176:7",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "8750:22:7",
																					"nodeType": "YulBlock",
																					"src": "8750:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "8752:16:7",
																									"nodeType": "YulIdentifier",
																									"src": "8752:16:7"
																								},
																								"nativeSrc": "8752:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8752:18:7"
																							},
																							"nativeSrc": "8752:18:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "8752:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "8735:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "8735:8:7"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "8745:3:7",
																							"nodeType": "YulLiteral",
																							"src": "8745:3:7",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "8732:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "8732:2:7"
																					},
																					"nativeSrc": "8732:17:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8732:17:7"
																				},
																				"nativeSrc": "8729:43:7",
																				"nodeType": "YulIf",
																				"src": "8729:43:7"
																			},
																			{
																				"nativeSrc": "8785:25:7",
																				"nodeType": "YulAssignment",
																				"src": "8785:25:7",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8798:1:7",
																							"nodeType": "YulLiteral",
																							"src": "8798:1:7",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "8801:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "8801:8:7"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "8794:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "8794:3:7"
																					},
																					"nativeSrc": "8794:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8794:16:7"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "8785:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "8785:5:7"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8841:22:7",
																					"nodeType": "YulBlock",
																					"src": "8841:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "8843:16:7",
																									"nodeType": "YulIdentifier",
																									"src": "8843:16:7"
																								},
																								"nativeSrc": "8843:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8843:18:7"
																							},
																							"nativeSrc": "8843:18:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "8843:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "8829:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "8829:5:7"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "8836:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "8836:3:7"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "8826:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "8826:2:7"
																					},
																					"nativeSrc": "8826:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8826:14:7"
																				},
																				"nativeSrc": "8823:40:7",
																				"nodeType": "YulIf",
																				"src": "8823:40:7"
																			},
																			{
																				"nativeSrc": "8876:5:7",
																				"nodeType": "YulLeave",
																				"src": "8876:5:7"
																			}
																		]
																	},
																	"nativeSrc": "8700:191:7",
																	"nodeType": "YulCase",
																	"src": "8700:191:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8705:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8705:1:7",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "8621:4:7",
																"nodeType": "YulIdentifier",
																"src": "8621:4:7"
															},
															"nativeSrc": "8614:277:7",
															"nodeType": "YulSwitch",
															"src": "8614:277:7"
														},
														{
															"body": {
																"nativeSrc": "9023:123:7",
																"nodeType": "YulBlock",
																"src": "9023:123:7",
																"statements": [
																	{
																		"nativeSrc": "9037:28:7",
																		"nodeType": "YulAssignment",
																		"src": "9037:28:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "9050:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "9050:4:7"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "9056:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "9056:8:7"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "9046:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "9046:3:7"
																			},
																			"nativeSrc": "9046:19:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9046:19:7"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "9037:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "9037:5:7"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "9096:22:7",
																			"nodeType": "YulBlock",
																			"src": "9096:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "9098:16:7",
																							"nodeType": "YulIdentifier",
																							"src": "9098:16:7"
																						},
																						"nativeSrc": "9098:18:7",
																						"nodeType": "YulFunctionCall",
																						"src": "9098:18:7"
																					},
																					"nativeSrc": "9098:18:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "9098:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "9084:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "9084:5:7"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "9091:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "9091:3:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "9081:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "9081:2:7"
																			},
																			"nativeSrc": "9081:14:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9081:14:7"
																		},
																		"nativeSrc": "9078:40:7",
																		"nodeType": "YulIf",
																		"src": "9078:40:7"
																	},
																	{
																		"nativeSrc": "9131:5:7",
																		"nodeType": "YulLeave",
																		"src": "9131:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "8926:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "8926:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8932:2:7",
																						"nodeType": "YulLiteral",
																						"src": "8932:2:7",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8923:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "8923:2:7"
																				},
																				"nativeSrc": "8923:12:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8923:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "8940:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "8940:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8950:2:7",
																						"nodeType": "YulLiteral",
																						"src": "8950:2:7",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8937:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "8937:2:7"
																				},
																				"nativeSrc": "8937:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8937:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8919:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8919:3:7"
																		},
																		"nativeSrc": "8919:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8919:35:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "8975:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "8975:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8981:3:7",
																						"nodeType": "YulLiteral",
																						"src": "8981:3:7",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8972:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "8972:2:7"
																				},
																				"nativeSrc": "8972:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8972:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "8990:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "8990:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9000:2:7",
																						"nodeType": "YulLiteral",
																						"src": "9000:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8987:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "8987:2:7"
																				},
																				"nativeSrc": "8987:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8987:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8968:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8968:3:7"
																		},
																		"nativeSrc": "8968:36:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8968:36:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8903:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8903:2:7"
																},
																"nativeSrc": "8903:111:7",
																"nodeType": "YulFunctionCall",
																"src": "8903:111:7"
															},
															"nativeSrc": "8900:246:7",
															"nodeType": "YulIf",
															"src": "8900:246:7"
														},
														{
															"nativeSrc": "9156:57:7",
															"nodeType": "YulAssignment",
															"src": "9156:57:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9190:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9190:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "9193:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9193:4:7"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "9199:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "9199:8:7"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "9209:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9209:3:7"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "9171:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "9171:18:7"
																},
																"nativeSrc": "9171:42:7",
																"nodeType": "YulFunctionCall",
																"src": "9171:42:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9156:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9156:5:7"
																},
																{
																	"name": "base",
																	"nativeSrc": "9163:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9163:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9252:22:7",
																"nodeType": "YulBlock",
																"src": "9252:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9254:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "9254:16:7"
																			},
																			"nativeSrc": "9254:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9254:18:7"
																		},
																		"nativeSrc": "9254:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9254:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "9229:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9229:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "9240:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "9240:3:7"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "9245:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9245:4:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "9236:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9236:3:7"
																		},
																		"nativeSrc": "9236:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9236:14:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9226:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "9226:2:7"
																},
																"nativeSrc": "9226:25:7",
																"nodeType": "YulFunctionCall",
																"src": "9226:25:7"
															},
															"nativeSrc": "9223:51:7",
															"nodeType": "YulIf",
															"src": "9223:51:7"
														},
														{
															"nativeSrc": "9283:25:7",
															"nodeType": "YulAssignment",
															"src": "9283:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "9296:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9296:5:7"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "9303:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9303:4:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9292:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9292:3:7"
																},
																"nativeSrc": "9292:16:7",
																"nodeType": "YulFunctionCall",
																"src": "9292:16:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9283:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9283:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "8241:1073:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "8271:4:7",
														"nodeType": "YulTypedName",
														"src": "8271:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "8277:8:7",
														"nodeType": "YulTypedName",
														"src": "8277:8:7",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "8287:3:7",
														"nodeType": "YulTypedName",
														"src": "8287:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "8295:5:7",
														"nodeType": "YulTypedName",
														"src": "8295:5:7",
														"type": ""
													}
												],
												"src": "8241:1073:7"
											},
											{
												"body": {
													"nativeSrc": "9363:43:7",
													"nodeType": "YulBlock",
													"src": "9363:43:7",
													"statements": [
														{
															"nativeSrc": "9373:27:7",
															"nodeType": "YulAssignment",
															"src": "9373:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9388:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9388:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9395:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9395:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9384:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9384:3:7"
																},
																"nativeSrc": "9384:16:7",
																"nodeType": "YulFunctionCall",
																"src": "9384:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9373:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "9373:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "9320:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9345:5:7",
														"nodeType": "YulTypedName",
														"src": "9345:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9355:7:7",
														"nodeType": "YulTypedName",
														"src": "9355:7:7",
														"type": ""
													}
												],
												"src": "9320:86:7"
											},
											{
												"body": {
													"nativeSrc": "9476:217:7",
													"nodeType": "YulBlock",
													"src": "9476:217:7",
													"statements": [
														{
															"nativeSrc": "9486:31:7",
															"nodeType": "YulAssignment",
															"src": "9486:31:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9512:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9512:4:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9494:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9494:17:7"
																},
																"nativeSrc": "9494:23:7",
																"nodeType": "YulFunctionCall",
																"src": "9494:23:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "9486:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9486:4:7"
																}
															]
														},
														{
															"nativeSrc": "9526:37:7",
															"nodeType": "YulAssignment",
															"src": "9526:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "9554:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "9554:8:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "9538:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "9538:15:7"
																},
																"nativeSrc": "9538:25:7",
																"nodeType": "YulFunctionCall",
																"src": "9538:25:7"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "9526:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "9526:8:7"
																}
															]
														},
														{
															"nativeSrc": "9573:113:7",
															"nodeType": "YulAssignment",
															"src": "9573:113:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9603:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9603:4:7"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "9609:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "9609:8:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9619:66:7",
																		"nodeType": "YulLiteral",
																		"src": "9619:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "9582:20:7",
																	"nodeType": "YulIdentifier",
																	"src": "9582:20:7"
																},
																"nativeSrc": "9582:104:7",
																"nodeType": "YulFunctionCall",
																"src": "9582:104:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9573:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9573:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "9412:281:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "9451:4:7",
														"nodeType": "YulTypedName",
														"src": "9451:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "9457:8:7",
														"nodeType": "YulTypedName",
														"src": "9457:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "9470:5:7",
														"nodeType": "YulTypedName",
														"src": "9470:5:7",
														"type": ""
													}
												],
												"src": "9412:281:7"
											},
											{
												"body": {
													"nativeSrc": "9747:362:7",
													"nodeType": "YulBlock",
													"src": "9747:362:7",
													"statements": [
														{
															"nativeSrc": "9757:25:7",
															"nodeType": "YulAssignment",
															"src": "9757:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9780:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9780:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9762:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9762:17:7"
																},
																"nativeSrc": "9762:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9762:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9757:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9757:1:7"
																}
															]
														},
														{
															"nativeSrc": "9791:25:7",
															"nodeType": "YulAssignment",
															"src": "9791:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9814:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9814:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9796:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9796:17:7"
																},
																"nativeSrc": "9796:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9796:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9791:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9791:1:7"
																}
															]
														},
														{
															"nativeSrc": "9825:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "9825:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9848:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9848:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9851:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9851:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9844:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9844:3:7"
																},
																"nativeSrc": "9844:9:7",
																"nodeType": "YulFunctionCall",
																"src": "9844:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "9829:11:7",
																	"nodeType": "YulTypedName",
																	"src": "9829:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9862:41:7",
															"nodeType": "YulAssignment",
															"src": "9862:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "9891:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "9891:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9873:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9873:17:7"
																},
																"nativeSrc": "9873:30:7",
																"nodeType": "YulFunctionCall",
																"src": "9873:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "9862:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "9862:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10080:22:7",
																"nodeType": "YulBlock",
																"src": "10080:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10082:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "10082:16:7"
																			},
																			"nativeSrc": "10082:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10082:18:7"
																		},
																		"nativeSrc": "10082:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "10082:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "10013:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "10013:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "10006:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "10006:6:7"
																				},
																				"nativeSrc": "10006:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10006:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "10036:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "10036:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "10043:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "10043:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "10052:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "10052:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "10039:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "10039:3:7"
																						},
																						"nativeSrc": "10039:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "10039:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "10033:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "10033:2:7"
																				},
																				"nativeSrc": "10033:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10033:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9986:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "9986:2:7"
																		},
																		"nativeSrc": "9986:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9986:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9966:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9966:6:7"
																},
																"nativeSrc": "9966:113:7",
																"nodeType": "YulFunctionCall",
																"src": "9966:113:7"
															},
															"nativeSrc": "9963:139:7",
															"nodeType": "YulIf",
															"src": "9963:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "9699:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9730:1:7",
														"nodeType": "YulTypedName",
														"src": "9730:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9733:1:7",
														"nodeType": "YulTypedName",
														"src": "9733:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "9739:7:7",
														"nodeType": "YulTypedName",
														"src": "9739:7:7",
														"type": ""
													}
												],
												"src": "9699:410:7"
											},
											{
												"body": {
													"nativeSrc": "10143:152:7",
													"nodeType": "YulBlock",
													"src": "10143:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10160:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10160:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10163:77:7",
																		"nodeType": "YulLiteral",
																		"src": "10163:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10153:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10153:6:7"
																},
																"nativeSrc": "10153:88:7",
																"nodeType": "YulFunctionCall",
																"src": "10153:88:7"
															},
															"nativeSrc": "10153:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "10153:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10257:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10257:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10260:4:7",
																		"nodeType": "YulLiteral",
																		"src": "10260:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10250:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10250:6:7"
																},
																"nativeSrc": "10250:15:7",
																"nodeType": "YulFunctionCall",
																"src": "10250:15:7"
															},
															"nativeSrc": "10250:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "10250:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10281:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10281:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10284:4:7",
																		"nodeType": "YulLiteral",
																		"src": "10284:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10274:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10274:6:7"
																},
																"nativeSrc": "10274:15:7",
																"nodeType": "YulFunctionCall",
																"src": "10274:15:7"
															},
															"nativeSrc": "10274:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "10274:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "10115:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "10115:180:7"
											},
											{
												"body": {
													"nativeSrc": "10343:143:7",
													"nodeType": "YulBlock",
													"src": "10343:143:7",
													"statements": [
														{
															"nativeSrc": "10353:25:7",
															"nodeType": "YulAssignment",
															"src": "10353:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10376:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10376:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10358:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "10358:17:7"
																},
																"nativeSrc": "10358:20:7",
																"nodeType": "YulFunctionCall",
																"src": "10358:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10353:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "10353:1:7"
																}
															]
														},
														{
															"nativeSrc": "10387:25:7",
															"nodeType": "YulAssignment",
															"src": "10387:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10410:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10410:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10392:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "10392:17:7"
																},
																"nativeSrc": "10392:20:7",
																"nodeType": "YulFunctionCall",
																"src": "10392:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10387:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "10387:1:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10434:22:7",
																"nodeType": "YulBlock",
																"src": "10434:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "10436:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "10436:16:7"
																			},
																			"nativeSrc": "10436:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10436:18:7"
																		},
																		"nativeSrc": "10436:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "10436:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10431:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10431:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10424:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10424:6:7"
																},
																"nativeSrc": "10424:9:7",
																"nodeType": "YulFunctionCall",
																"src": "10424:9:7"
															},
															"nativeSrc": "10421:35:7",
															"nodeType": "YulIf",
															"src": "10421:35:7"
														},
														{
															"nativeSrc": "10466:14:7",
															"nodeType": "YulAssignment",
															"src": "10466:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10475:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10475:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10478:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10478:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10471:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10471:3:7"
																},
																"nativeSrc": "10471:9:7",
																"nodeType": "YulFunctionCall",
																"src": "10471:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "10466:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "10466:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "10301:185:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10332:1:7",
														"nodeType": "YulTypedName",
														"src": "10332:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10335:1:7",
														"nodeType": "YulTypedName",
														"src": "10335:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "10341:1:7",
														"nodeType": "YulTypedName",
														"src": "10341:1:7",
														"type": ""
													}
												],
												"src": "10301:185:7"
											},
											{
												"body": {
													"nativeSrc": "10537:149:7",
													"nodeType": "YulBlock",
													"src": "10537:149:7",
													"statements": [
														{
															"nativeSrc": "10547:25:7",
															"nodeType": "YulAssignment",
															"src": "10547:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10570:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10570:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10552:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "10552:17:7"
																},
																"nativeSrc": "10552:20:7",
																"nodeType": "YulFunctionCall",
																"src": "10552:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10547:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "10547:1:7"
																}
															]
														},
														{
															"nativeSrc": "10581:25:7",
															"nodeType": "YulAssignment",
															"src": "10581:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10604:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10604:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10586:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "10586:17:7"
																},
																"nativeSrc": "10586:20:7",
																"nodeType": "YulFunctionCall",
																"src": "10586:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10581:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "10581:1:7"
																}
															]
														},
														{
															"nativeSrc": "10615:17:7",
															"nodeType": "YulAssignment",
															"src": "10615:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10627:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10627:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10630:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10630:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "10623:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10623:3:7"
																},
																"nativeSrc": "10623:9:7",
																"nodeType": "YulFunctionCall",
																"src": "10623:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "10615:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10615:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10657:22:7",
																"nodeType": "YulBlock",
																"src": "10657:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10659:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "10659:16:7"
																			},
																			"nativeSrc": "10659:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10659:18:7"
																		},
																		"nativeSrc": "10659:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "10659:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "10648:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "10648:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "10654:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10654:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10645:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "10645:2:7"
																},
																"nativeSrc": "10645:11:7",
																"nodeType": "YulFunctionCall",
																"src": "10645:11:7"
															},
															"nativeSrc": "10642:37:7",
															"nodeType": "YulIf",
															"src": "10642:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "10492:194:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10523:1:7",
														"nodeType": "YulTypedName",
														"src": "10523:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10526:1:7",
														"nodeType": "YulTypedName",
														"src": "10526:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "10532:4:7",
														"nodeType": "YulTypedName",
														"src": "10532:4:7",
														"type": ""
													}
												],
												"src": "10492:194:7"
											},
											{
												"body": {
													"nativeSrc": "10736:147:7",
													"nodeType": "YulBlock",
													"src": "10736:147:7",
													"statements": [
														{
															"nativeSrc": "10746:25:7",
															"nodeType": "YulAssignment",
															"src": "10746:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10769:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10769:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10751:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "10751:17:7"
																},
																"nativeSrc": "10751:20:7",
																"nodeType": "YulFunctionCall",
																"src": "10751:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10746:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "10746:1:7"
																}
															]
														},
														{
															"nativeSrc": "10780:25:7",
															"nodeType": "YulAssignment",
															"src": "10780:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10803:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10803:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10785:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "10785:17:7"
																},
																"nativeSrc": "10785:20:7",
																"nodeType": "YulFunctionCall",
																"src": "10785:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10780:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "10780:1:7"
																}
															]
														},
														{
															"nativeSrc": "10814:16:7",
															"nodeType": "YulAssignment",
															"src": "10814:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10825:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10825:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10828:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10828:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10821:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10821:3:7"
																},
																"nativeSrc": "10821:9:7",
																"nodeType": "YulFunctionCall",
																"src": "10821:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10814:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10814:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10854:22:7",
																"nodeType": "YulBlock",
																"src": "10854:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10856:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "10856:16:7"
																			},
																			"nativeSrc": "10856:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10856:18:7"
																		},
																		"nativeSrc": "10856:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "10856:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10846:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10846:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10849:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10849:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10843:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "10843:2:7"
																},
																"nativeSrc": "10843:10:7",
																"nodeType": "YulFunctionCall",
																"src": "10843:10:7"
															},
															"nativeSrc": "10840:36:7",
															"nodeType": "YulIf",
															"src": "10840:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10692:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10723:1:7",
														"nodeType": "YulTypedName",
														"src": "10723:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10726:1:7",
														"nodeType": "YulTypedName",
														"src": "10726:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10732:3:7",
														"nodeType": "YulTypedName",
														"src": "10732:3:7",
														"type": ""
													}
												],
												"src": "10692:191:7"
											},
											{
												"body": {
													"nativeSrc": "10954:53:7",
													"nodeType": "YulBlock",
													"src": "10954:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10971:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10971:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10994:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "10994:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "10976:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "10976:17:7"
																		},
																		"nativeSrc": "10976:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10976:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10964:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10964:6:7"
																},
																"nativeSrc": "10964:37:7",
																"nodeType": "YulFunctionCall",
																"src": "10964:37:7"
															},
															"nativeSrc": "10964:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "10964:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "10889:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10942:5:7",
														"nodeType": "YulTypedName",
														"src": "10942:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10949:3:7",
														"nodeType": "YulTypedName",
														"src": "10949:3:7",
														"type": ""
													}
												],
												"src": "10889:118:7"
											},
											{
												"body": {
													"nativeSrc": "11167:288:7",
													"nodeType": "YulBlock",
													"src": "11167:288:7",
													"statements": [
														{
															"nativeSrc": "11177:26:7",
															"nodeType": "YulAssignment",
															"src": "11177:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11189:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11189:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11200:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11200:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11185:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11185:3:7"
																},
																"nativeSrc": "11185:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11185:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11177:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11177:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11257:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11257:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11270:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11270:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11281:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11281:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11266:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11266:3:7"
																		},
																		"nativeSrc": "11266:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11266:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11213:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "11213:43:7"
																},
																"nativeSrc": "11213:71:7",
																"nodeType": "YulFunctionCall",
																"src": "11213:71:7"
															},
															"nativeSrc": "11213:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "11213:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11338:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11338:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11351:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11351:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11362:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11362:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11347:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11347:3:7"
																		},
																		"nativeSrc": "11347:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11347:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11294:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "11294:43:7"
																},
																"nativeSrc": "11294:72:7",
																"nodeType": "YulFunctionCall",
																"src": "11294:72:7"
															},
															"nativeSrc": "11294:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "11294:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11420:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11420:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11433:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11433:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11444:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11444:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11429:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11429:3:7"
																		},
																		"nativeSrc": "11429:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11429:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11376:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "11376:43:7"
																},
																"nativeSrc": "11376:72:7",
																"nodeType": "YulFunctionCall",
																"src": "11376:72:7"
															},
															"nativeSrc": "11376:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "11376:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11013:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11123:9:7",
														"nodeType": "YulTypedName",
														"src": "11123:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11135:6:7",
														"nodeType": "YulTypedName",
														"src": "11135:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11143:6:7",
														"nodeType": "YulTypedName",
														"src": "11143:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11151:6:7",
														"nodeType": "YulTypedName",
														"src": "11151:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11162:4:7",
														"nodeType": "YulTypedName",
														"src": "11162:4:7",
														"type": ""
													}
												],
												"src": "11013:442:7"
											},
											{
												"body": {
													"nativeSrc": "11559:124:7",
													"nodeType": "YulBlock",
													"src": "11559:124:7",
													"statements": [
														{
															"nativeSrc": "11569:26:7",
															"nodeType": "YulAssignment",
															"src": "11569:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11581:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11581:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11592:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11592:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11577:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11577:3:7"
																},
																"nativeSrc": "11577:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11577:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11569:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11569:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11649:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11649:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11662:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11662:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11673:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11673:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11658:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11658:3:7"
																		},
																		"nativeSrc": "11658:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11658:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11605:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "11605:43:7"
																},
																"nativeSrc": "11605:71:7",
																"nodeType": "YulFunctionCall",
																"src": "11605:71:7"
															},
															"nativeSrc": "11605:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "11605:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "11461:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11531:9:7",
														"nodeType": "YulTypedName",
														"src": "11531:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11543:6:7",
														"nodeType": "YulTypedName",
														"src": "11543:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11554:4:7",
														"nodeType": "YulTypedName",
														"src": "11554:4:7",
														"type": ""
													}
												],
												"src": "11461:222:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2573 CODESIZE SUB DUP1 PUSH2 0x2573 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x37 SWAP2 SWAP1 PUSH2 0x879 JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x576F726C642057617220546F6B656E0000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5757000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0xB1C JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB1C JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x138 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x147 DUP2 PUSH2 0x49A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x158 PUSH2 0x560 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH2 0x164 SWAP2 SWAP1 PUSH2 0xD87 JUMP JUMPDEST PUSH4 0x5F5E100 PUSH2 0x173 SWAP2 SWAP1 PUSH2 0xDD2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0xF DUP4 PUSH2 0x186 SWAP2 SWAP1 PUSH2 0xDD2 JUMP JUMPDEST PUSH2 0x190 SWAP2 SWAP1 PUSH2 0xE43 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0xE74 JUMP JUMPDEST SWAP1 POP DUP6 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x297 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x569 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x2C9 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0x569 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xA PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xA PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xA PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP PUSH2 0xF3D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5DB JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D2 SWAP2 SWAP1 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5ED PUSH1 0x0 DUP4 DUP4 PUSH2 0x5F1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x643 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x637 SWAP2 SWAP1 PUSH2 0xEA8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x716 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x6CF JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x75F JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x7AC JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x809 SWAP2 SWAP1 PUSH2 0xF22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x846 DUP3 PUSH2 0x81B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x856 DUP2 PUSH2 0x83B JUMP JUMPDEST DUP2 EQ PUSH2 0x861 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x873 DUP2 PUSH2 0x84D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x892 JUMPI PUSH2 0x891 PUSH2 0x816 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8A0 DUP7 DUP3 DUP8 ADD PUSH2 0x864 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x8B1 DUP7 DUP3 DUP8 ADD PUSH2 0x864 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x8C2 DUP7 DUP3 DUP8 ADD PUSH2 0x864 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x94D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x960 JUMPI PUSH2 0x95F PUSH2 0x906 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x9C8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x98B JUMP JUMPDEST PUSH2 0x9D2 DUP7 DUP4 PUSH2 0x98B JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA19 PUSH2 0xA14 PUSH2 0xA0F DUP5 PUSH2 0x9EA JUMP JUMPDEST PUSH2 0x9F4 JUMP JUMPDEST PUSH2 0x9EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA33 DUP4 PUSH2 0x9FE JUMP JUMPDEST PUSH2 0xA47 PUSH2 0xA3F DUP3 PUSH2 0xA20 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x998 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xA5C PUSH2 0xA4F JUMP JUMPDEST PUSH2 0xA67 DUP2 DUP5 DUP5 PUSH2 0xA2A JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA8B JUMPI PUSH2 0xA80 PUSH1 0x0 DUP3 PUSH2 0xA54 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xA6D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xAD0 JUMPI PUSH2 0xAA1 DUP2 PUSH2 0x966 JUMP JUMPDEST PUSH2 0xAAA DUP5 PUSH2 0x97B JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0xAB9 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0xACD PUSH2 0xAC5 DUP6 PUSH2 0x97B JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0xA6C JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF3 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0xAD5 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB0C DUP4 DUP4 PUSH2 0xAE2 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB25 DUP3 PUSH2 0x8CC JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB3E JUMPI PUSH2 0xB3D PUSH2 0x8D7 JUMP JUMPDEST JUMPDEST PUSH2 0xB48 DUP3 SLOAD PUSH2 0x935 JUMP JUMPDEST PUSH2 0xB53 DUP3 DUP3 DUP6 PUSH2 0xA8F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xB86 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0xB74 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xB7E DUP6 DUP3 PUSH2 0xB00 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xB94 DUP7 PUSH2 0x966 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xBBC JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xB97 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xBD9 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xBD5 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0xAE2 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xBF7 DUP2 PUSH2 0x83B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC12 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBEE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0xC9E JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0xC7A JUMPI PUSH2 0xC79 PUSH2 0xC18 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0xC89 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0xC97 DUP6 PUSH2 0xC47 JUMP JUMPDEST SWAP5 POP PUSH2 0xC5E JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xCB7 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xD73 JUMP JUMPDEST DUP2 PUSH2 0xCC5 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xD73 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xCDB JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xCE5 JUMPI PUSH2 0xD14 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xD73 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xCF7 JUMPI PUSH2 0xCF6 PUSH2 0xC18 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xD0E JUMPI PUSH2 0xD0D PUSH2 0xC18 JUMP JUMPDEST JUMPDEST POP PUSH2 0xD73 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xD49 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xD44 JUMPI PUSH2 0xD43 PUSH2 0xC18 JUMP JUMPDEST JUMPDEST PUSH2 0xD73 JUMP JUMPDEST PUSH2 0xD56 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xC54 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xD6D JUMPI PUSH2 0xD6C PUSH2 0xC18 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD92 DUP3 PUSH2 0x9EA JUMP JUMPDEST SWAP2 POP PUSH2 0xD9D DUP4 PUSH2 0xD7A JUMP JUMPDEST SWAP3 POP PUSH2 0xDCA PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0xCA7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDDD DUP3 PUSH2 0x9EA JUMP JUMPDEST SWAP2 POP PUSH2 0xDE8 DUP4 PUSH2 0x9EA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xDF6 DUP2 PUSH2 0x9EA JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xE0D JUMPI PUSH2 0xE0C PUSH2 0xC18 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE4E DUP3 PUSH2 0x9EA JUMP JUMPDEST SWAP2 POP PUSH2 0xE59 DUP4 PUSH2 0x9EA JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xE69 JUMPI PUSH2 0xE68 PUSH2 0xE14 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7F DUP3 PUSH2 0x9EA JUMP JUMPDEST SWAP2 POP PUSH2 0xE8A DUP4 PUSH2 0x9EA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xEA2 JUMPI PUSH2 0xEA1 PUSH2 0xC18 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEB3 DUP3 PUSH2 0x9EA JUMP JUMPDEST SWAP2 POP PUSH2 0xEBE DUP4 PUSH2 0x9EA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xED6 JUMPI PUSH2 0xED5 PUSH2 0xC18 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEE5 DUP2 PUSH2 0x9EA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xF00 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xBEE JUMP JUMPDEST PUSH2 0xF0D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xEDC JUMP JUMPDEST PUSH2 0xF1A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xEDC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEDC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1627 DUP1 PUSH2 0xF4C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8EA5220F GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD72B11BD GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD72B11BD EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0xE7B94DF4 EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0xF887EA40 EQ PUSH2 0x382 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x8EA5220F EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0xC0D78655 EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0xC6A30647 EQ PUSH2 0x2DE JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x771A3A1D EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x238 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x192 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x1139 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x11F4 JUMP JUMPDEST PUSH2 0x432 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x124F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17C PUSH2 0x455 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x1279 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x1294 JUMP JUMPDEST PUSH2 0x45F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0x124F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CA PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x1303 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x131E JUMP JUMPDEST PUSH2 0x4BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x1279 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x218 PUSH2 0x502 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x222 PUSH2 0x516 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x1279 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x240 PUSH2 0x51C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x135A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25E PUSH2 0x546 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x135A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27C PUSH2 0x56C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x289 SWAP2 SWAP1 PUSH2 0x1139 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x11F4 JUMP JUMPDEST PUSH2 0x5FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x124F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x131E JUMP JUMPDEST PUSH2 0x621 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x13A1 JUMP JUMPDEST PUSH2 0x66D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x302 PUSH2 0x6D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30F SWAP2 SWAP1 PUSH2 0x135A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x332 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32D SWAP2 SWAP1 PUSH2 0x13E1 JUMP JUMPDEST PUSH2 0x6F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x1279 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x350 PUSH2 0x77D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x135A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x380 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37B SWAP2 SWAP1 PUSH2 0x131E JUMP JUMPDEST PUSH2 0x7A3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x38A PUSH2 0x829 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x135A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3AF SWAP1 PUSH2 0x1450 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3DB SWAP1 PUSH2 0x1450 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x428 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x428 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x40B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x43D PUSH2 0x84F JUMP JUMPDEST SWAP1 POP PUSH2 0x44A DUP2 DUP6 DUP6 PUSH2 0x857 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x46D DUP6 DUP6 DUP6 PUSH2 0x869 JUMP JUMPDEST SWAP1 POP PUSH2 0x49C DUP6 PUSH2 0x47B PUSH2 0x84F JUMP JUMPDEST DUP6 PUSH2 0x48D DUP10 PUSH2 0x488 PUSH2 0x84F JUMP JUMPDEST PUSH2 0x6F6 JUMP JUMPDEST PUSH2 0x497 SWAP2 SWAP1 PUSH2 0x14B0 JUMP JUMPDEST PUSH2 0x857 JUMP JUMPDEST PUSH2 0x4A7 DUP6 DUP6 DUP4 PUSH2 0x985 JUMP JUMPDEST SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x50A PUSH2 0x9B4 JUMP JUMPDEST PUSH2 0x514 PUSH1 0x0 PUSH2 0xA3B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x57B SWAP1 PUSH2 0x1450 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5A7 SWAP1 PUSH2 0x1450 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5F4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5C9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5F4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5D7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x60C CALLER DUP6 DUP6 PUSH2 0x869 JUMP JUMPDEST SWAP1 POP PUSH2 0x618 DUP5 DUP3 PUSH2 0xB01 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x629 PUSH2 0x9B4 JUMP JUMPDEST DUP1 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x675 PUSH2 0x9B4 JUMP JUMPDEST DUP1 PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x7AB PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x81D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x814 SWAP2 SWAP1 PUSH2 0x135A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x826 DUP2 PUSH2 0xA3B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x864 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xB24 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x90C JUMPI POP PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x919 JUMPI DUP2 SWAP1 POP PUSH2 0x97E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x6 SLOAD DUP5 PUSH2 0x92B SWAP2 SWAP1 PUSH2 0x14E4 JUMP JUMPDEST PUSH2 0x935 SWAP2 SWAP1 PUSH2 0x1555 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x96E JUMPI PUSH2 0x96D DUP6 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0xCFB JUMP JUMPDEST JUMPDEST DUP1 DUP4 PUSH2 0x97A SWAP2 SWAP1 PUSH2 0x14B0 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x990 PUSH2 0x84F JUMP JUMPDEST SWAP1 POP PUSH2 0x99D DUP6 DUP3 DUP6 PUSH2 0xDEF JUMP JUMPDEST PUSH2 0x9A8 DUP6 DUP6 DUP6 PUSH2 0xCFB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x9BC PUSH2 0x84F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9DA PUSH2 0x51C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA39 JUMPI PUSH2 0x9FD PUSH2 0x84F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA30 SWAP2 SWAP1 PUSH2 0x135A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB0C PUSH2 0x84F JUMP JUMPDEST SWAP1 POP PUSH2 0xB19 DUP2 DUP6 DUP6 PUSH2 0xCFB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB96 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB8D SWAP2 SWAP1 PUSH2 0x135A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC08 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBFF SWAP2 SWAP1 PUSH2 0x135A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xCF5 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xCEC SWAP2 SWAP1 PUSH2 0x1279 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD6D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD64 SWAP2 SWAP1 PUSH2 0x135A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDDF JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD6 SWAP2 SWAP1 PUSH2 0x135A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDEA DUP4 DUP4 DUP4 PUSH2 0xE84 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDFB DUP5 DUP5 PUSH2 0x6F6 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xE7E JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xE6E JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE65 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1586 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE7D DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0xB24 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xED6 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xECA SWAP2 SWAP1 PUSH2 0x15BD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xFA9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xF62 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF59 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1586 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFF2 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x103F JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x109C SWAP2 SWAP1 PUSH2 0x1279 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10E3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x10C8 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x110B DUP3 PUSH2 0x10A9 JUMP JUMPDEST PUSH2 0x1115 DUP2 DUP6 PUSH2 0x10B4 JUMP JUMPDEST SWAP4 POP PUSH2 0x1125 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x112E DUP2 PUSH2 0x10EF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1153 DUP2 DUP5 PUSH2 0x1100 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x118B DUP3 PUSH2 0x1160 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x119B DUP2 PUSH2 0x1180 JUMP JUMPDEST DUP2 EQ PUSH2 0x11A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11B8 DUP2 PUSH2 0x1192 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11D1 DUP2 PUSH2 0x11BE JUMP JUMPDEST DUP2 EQ PUSH2 0x11DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11EE DUP2 PUSH2 0x11C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x120B JUMPI PUSH2 0x120A PUSH2 0x115B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1219 DUP6 DUP3 DUP7 ADD PUSH2 0x11A9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x122A DUP6 DUP3 DUP7 ADD PUSH2 0x11DF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1249 DUP2 PUSH2 0x1234 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1264 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1240 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1273 DUP2 PUSH2 0x11BE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x128E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x126A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12AD JUMPI PUSH2 0x12AC PUSH2 0x115B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12BB DUP7 DUP3 DUP8 ADD PUSH2 0x11A9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x12CC DUP7 DUP3 DUP8 ADD PUSH2 0x11A9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x12DD DUP7 DUP3 DUP8 ADD PUSH2 0x11DF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12FD DUP2 PUSH2 0x12E7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1318 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1334 JUMPI PUSH2 0x1333 PUSH2 0x115B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1342 DUP5 DUP3 DUP6 ADD PUSH2 0x11A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1354 DUP2 PUSH2 0x1180 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x136F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x134B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x137E DUP2 PUSH2 0x1234 JUMP JUMPDEST DUP2 EQ PUSH2 0x1389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x139B DUP2 PUSH2 0x1375 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13B8 JUMPI PUSH2 0x13B7 PUSH2 0x115B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13C6 DUP6 DUP3 DUP7 ADD PUSH2 0x11A9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13D7 DUP6 DUP3 DUP7 ADD PUSH2 0x138C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13F8 JUMPI PUSH2 0x13F7 PUSH2 0x115B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1406 DUP6 DUP3 DUP7 ADD PUSH2 0x11A9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1417 DUP6 DUP3 DUP7 ADD PUSH2 0x11A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1468 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x147B JUMPI PUSH2 0x147A PUSH2 0x1421 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x14BB DUP3 PUSH2 0x11BE JUMP JUMPDEST SWAP2 POP PUSH2 0x14C6 DUP4 PUSH2 0x11BE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x14DE JUMPI PUSH2 0x14DD PUSH2 0x1481 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14EF DUP3 PUSH2 0x11BE JUMP JUMPDEST SWAP2 POP PUSH2 0x14FA DUP4 PUSH2 0x11BE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1508 DUP2 PUSH2 0x11BE JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x151F JUMPI PUSH2 0x151E PUSH2 0x1481 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1560 DUP3 PUSH2 0x11BE JUMP JUMPDEST SWAP2 POP PUSH2 0x156B DUP4 PUSH2 0x11BE JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x157B JUMPI PUSH2 0x157A PUSH2 0x1526 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x159B PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x134B JUMP JUMPDEST PUSH2 0x15A8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x126A JUMP JUMPDEST PUSH2 0x15B5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x126A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15C8 DUP3 PUSH2 0x11BE JUMP JUMPDEST SWAP2 POP PUSH2 0x15D3 DUP4 PUSH2 0x11BE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x15EB JUMPI PUSH2 0x15EA PUSH2 0x1481 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBHASH 0x4F TIMESTAMP 0xB9 POP SAR DUP3 DUP6 DELEGATECALL 0xB1 PC 0xAD CREATE2 0xD0 0xCB MOD SWAP2 CREATE GT 0xD2 CODECOPY MCOPY 0xC7 0xAF 0xDA DUP9 BALANCE CREATE2 EQ 0xD 0xB0 0xDF PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "167:2195:6:-:0;;;239:1;214:26;;455:698;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;557:10;1582:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1656:5;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;579:19:6::2;621:10;:8;;;:10;;:::i;:::-;615:2;:16;;;;:::i;:::-;601:11;:30;;;;:::i;:::-;579:52;;642:17;683:3;677:2;663:11;:16;;;;:::i;:::-;662:24;;;;:::i;:::-;642:44;;696:21;734:9;720:11;:23;;;;:::i;:::-;696:47;;770:8;754:13;;:24;;;;;;;;;;;;;;;;;;800:4;788:9;;:16;;;;;;;;;;;;;;;;;;831:9;814:14;;:26;;;;;;;;;;;;;;;;;;851:27;857:9;;;;;;;;;;;868;851:5;;;:27;;:::i;:::-;888:35;894:13;;;;;;;;;;;909;888:5;;;:35;;:::i;:::-;995:4;962:18;:30;981:10;962:30;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;1045:4;1009:18;:33;1028:13;;;;;;;;;;;1009:33;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1091:4;1059:18;:29;1078:9;;;;;;;;;;;1059:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;1142:4;1105:18;:34;1124:14;;;;;;;;;;;1105:34;;;;;;;;;;;;;;;;:41;;;;;;;;;;;;;;;;;;569:584;;;455:698:::0;;;167:2195;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2688:82:2:-;2737:5;2761:2;2754:9;;2688:82;:::o;7439:208::-;7528:1;7509:21;;:7;:21;;;7505:91;;7582:1;7553:32;;;;;;;;;;;:::i;:::-;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;;;:35;;:::i;:::-;7439:208;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;88:117:7:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:663::-;933:6;941;949;998:2;986:9;977:7;973:23;969:32;966:119;;;1004:79;;:::i;:::-;966:119;1124:1;1149:64;1205:7;1196:6;1185:9;1181:22;1149:64;:::i;:::-;1139:74;;1095:128;1262:2;1288:64;1344:7;1335:6;1324:9;1320:22;1288:64;:::i;:::-;1278:74;;1233:129;1401:2;1427:64;1483:7;1474:6;1463:9;1459:22;1427:64;:::i;:::-;1417:74;;1372:129;845:663;;;;;:::o;1514:99::-;1566:6;1600:5;1594:12;1584:22;;1514:99;;;:::o;1619:180::-;1667:77;1664:1;1657:88;1764:4;1761:1;1754:15;1788:4;1785:1;1778:15;1805:180;1853:77;1850:1;1843:88;1950:4;1947:1;1940:15;1974:4;1971:1;1964:15;1991:320;2035:6;2072:1;2066:4;2062:12;2052:22;;2119:1;2113:4;2109:12;2140:18;2130:81;;2196:4;2188:6;2184:17;2174:27;;2130:81;2258:2;2250:6;2247:14;2227:18;2224:38;2221:84;;2277:18;;:::i;:::-;2221:84;2042:269;1991:320;;;:::o;2317:141::-;2366:4;2389:3;2381:11;;2412:3;2409:1;2402:14;2446:4;2443:1;2433:18;2425:26;;2317:141;;;:::o;2464:93::-;2501:6;2548:2;2543;2536:5;2532:14;2528:23;2518:33;;2464:93;;;:::o;2563:107::-;2607:8;2657:5;2651:4;2647:16;2626:37;;2563:107;;;;:::o;2676:393::-;2745:6;2795:1;2783:10;2779:18;2818:97;2848:66;2837:9;2818:97;:::i;:::-;2936:39;2966:8;2955:9;2936:39;:::i;:::-;2924:51;;3008:4;3004:9;2997:5;2993:21;2984:30;;3057:4;3047:8;3043:19;3036:5;3033:30;3023:40;;2752:317;;2676:393;;;;;:::o;3075:77::-;3112:7;3141:5;3130:16;;3075:77;;;:::o;3158:60::-;3186:3;3207:5;3200:12;;3158:60;;;:::o;3224:142::-;3274:9;3307:53;3325:34;3334:24;3352:5;3334:24;:::i;:::-;3325:34;:::i;:::-;3307:53;:::i;:::-;3294:66;;3224:142;;;:::o;3372:75::-;3415:3;3436:5;3429:12;;3372:75;;;:::o;3453:269::-;3563:39;3594:7;3563:39;:::i;:::-;3624:91;3673:41;3697:16;3673:41;:::i;:::-;3665:6;3658:4;3652:11;3624:91;:::i;:::-;3618:4;3611:105;3529:193;3453:269;;;:::o;3728:73::-;3773:3;3728:73;:::o;3807:189::-;3884:32;;:::i;:::-;3925:65;3983:6;3975;3969:4;3925:65;:::i;:::-;3860:136;3807:189;;:::o;4002:186::-;4062:120;4079:3;4072:5;4069:14;4062:120;;;4133:39;4170:1;4163:5;4133:39;:::i;:::-;4106:1;4099:5;4095:13;4086:22;;4062:120;;;4002:186;;:::o;4194:543::-;4295:2;4290:3;4287:11;4284:446;;;4329:38;4361:5;4329:38;:::i;:::-;4413:29;4431:10;4413:29;:::i;:::-;4403:8;4399:44;4596:2;4584:10;4581:18;4578:49;;;4617:8;4602:23;;4578:49;4640:80;4696:22;4714:3;4696:22;:::i;:::-;4686:8;4682:37;4669:11;4640:80;:::i;:::-;4299:431;;4284:446;4194:543;;;:::o;4743:117::-;4797:8;4847:5;4841:4;4837:16;4816:37;;4743:117;;;;:::o;4866:169::-;4910:6;4943:51;4991:1;4987:6;4979:5;4976:1;4972:13;4943:51;:::i;:::-;4939:56;5024:4;5018;5014:15;5004:25;;4917:118;4866:169;;;;:::o;5040:295::-;5116:4;5262:29;5287:3;5281:4;5262:29;:::i;:::-;5254:37;;5324:3;5321:1;5317:11;5311:4;5308:21;5300:29;;5040:295;;;;:::o;5340:1395::-;5457:37;5490:3;5457:37;:::i;:::-;5559:18;5551:6;5548:30;5545:56;;;5581:18;;:::i;:::-;5545:56;5625:38;5657:4;5651:11;5625:38;:::i;:::-;5710:67;5770:6;5762;5756:4;5710:67;:::i;:::-;5804:1;5828:4;5815:17;;5860:2;5852:6;5849:14;5877:1;5872:618;;;;6534:1;6551:6;6548:77;;;6600:9;6595:3;6591:19;6585:26;6576:35;;6548:77;6651:67;6711:6;6704:5;6651:67;:::i;:::-;6645:4;6638:81;6507:222;5842:887;;5872:618;5924:4;5920:9;5912:6;5908:22;5958:37;5990:4;5958:37;:::i;:::-;6017:1;6031:208;6045:7;6042:1;6039:14;6031:208;;;6124:9;6119:3;6115:19;6109:26;6101:6;6094:42;6175:1;6167:6;6163:14;6153:24;;6222:2;6211:9;6207:18;6194:31;;6068:4;6065:1;6061:12;6056:17;;6031:208;;;6267:6;6258:7;6255:19;6252:179;;;6325:9;6320:3;6316:19;6310:26;6368:48;6410:4;6402:6;6398:17;6387:9;6368:48;:::i;:::-;6360:6;6353:64;6275:156;6252:179;6477:1;6473;6465:6;6461:14;6457:22;6451:4;6444:36;5879:611;;;5842:887;;5432:1303;;;5340:1395;;:::o;6741:118::-;6828:24;6846:5;6828:24;:::i;:::-;6823:3;6816:37;6741:118;;:::o;6865:222::-;6958:4;6996:2;6985:9;6981:18;6973:26;;7009:71;7077:1;7066:9;7062:17;7053:6;7009:71;:::i;:::-;6865:222;;;;:::o;7093:180::-;7141:77;7138:1;7131:88;7238:4;7235:1;7228:15;7262:4;7259:1;7252:15;7279:102;7321:8;7368:5;7365:1;7361:13;7340:34;;7279:102;;;:::o;7387:848::-;7448:5;7455:4;7479:6;7470:15;;7503:5;7494:14;;7517:712;7538:1;7528:8;7525:15;7517:712;;;7633:4;7628:3;7624:14;7618:4;7615:24;7612:50;;;7642:18;;:::i;:::-;7612:50;7692:1;7682:8;7678:16;7675:451;;;8107:4;8100:5;8096:16;8087:25;;7675:451;8157:4;8151;8147:15;8139:23;;8187:32;8210:8;8187:32;:::i;:::-;8175:44;;7517:712;;;7387:848;;;;;;;:::o;8241:1073::-;8295:5;8486:8;8476:40;;8507:1;8498:10;;8509:5;;8476:40;8535:4;8525:36;;8552:1;8543:10;;8554:5;;8525:36;8621:4;8669:1;8664:27;;;;8705:1;8700:191;;;;8614:277;;8664:27;8682:1;8673:10;;8684:5;;;8700:191;8745:3;8735:8;8732:17;8729:43;;;8752:18;;:::i;:::-;8729:43;8801:8;8798:1;8794:16;8785:25;;8836:3;8829:5;8826:14;8823:40;;;8843:18;;:::i;:::-;8823:40;8876:5;;;8614:277;;9000:2;8990:8;8987:16;8981:3;8975:4;8972:13;8968:36;8950:2;8940:8;8937:16;8932:2;8926:4;8923:12;8919:35;8903:111;8900:246;;;9056:8;9050:4;9046:19;9037:28;;9091:3;9084:5;9081:14;9078:40;;;9098:18;;:::i;:::-;9078:40;9131:5;;8900:246;9171:42;9209:3;9199:8;9193:4;9190:1;9171:42;:::i;:::-;9156:57;;;;9245:4;9240:3;9236:14;9229:5;9226:25;9223:51;;;9254:18;;:::i;:::-;9223:51;9303:4;9296:5;9292:16;9283:25;;8241:1073;;;;;;:::o;9320:86::-;9355:7;9395:4;9388:5;9384:16;9373:27;;9320:86;;;:::o;9412:281::-;9470:5;9494:23;9512:4;9494:23;:::i;:::-;9486:31;;9538:25;9554:8;9538:25;:::i;:::-;9526:37;;9582:104;9619:66;9609:8;9603:4;9582:104;:::i;:::-;9573:113;;9412:281;;;;:::o;9699:410::-;9739:7;9762:20;9780:1;9762:20;:::i;:::-;9757:25;;9796:20;9814:1;9796:20;:::i;:::-;9791:25;;9851:1;9848;9844:9;9873:30;9891:11;9873:30;:::i;:::-;9862:41;;10052:1;10043:7;10039:15;10036:1;10033:22;10013:1;10006:9;9986:83;9963:139;;10082:18;;:::i;:::-;9963:139;9747:362;9699:410;;;;:::o;10115:180::-;10163:77;10160:1;10153:88;10260:4;10257:1;10250:15;10284:4;10281:1;10274:15;10301:185;10341:1;10358:20;10376:1;10358:20;:::i;:::-;10353:25;;10392:20;10410:1;10392:20;:::i;:::-;10387:25;;10431:1;10421:35;;10436:18;;:::i;:::-;10421:35;10478:1;10475;10471:9;10466:14;;10301:185;;;;:::o;10492:194::-;10532:4;10552:20;10570:1;10552:20;:::i;:::-;10547:25;;10586:20;10604:1;10586:20;:::i;:::-;10581:25;;10630:1;10627;10623:9;10615:17;;10654:1;10648:4;10645:11;10642:37;;;10659:18;;:::i;:::-;10642:37;10492:194;;;;:::o;10692:191::-;10732:3;10751:20;10769:1;10751:20;:::i;:::-;10746:25;;10785:20;10803:1;10785:20;:::i;:::-;10780:25;;10828:1;10825;10821:9;10814:16;;10849:3;10846:1;10843:10;10840:36;;;10856:18;;:::i;:::-;10840:36;10692:191;;;;:::o;10889:118::-;10976:24;10994:5;10976:24;:::i;:::-;10971:3;10964:37;10889:118;;:::o;11013:442::-;11162:4;11200:2;11189:9;11185:18;11177:26;;11213:71;11281:1;11270:9;11266:17;11257:6;11213:71;:::i;:::-;11294:72;11362:2;11351:9;11347:18;11338:6;11294:72;:::i;:::-;11376;11444:2;11433:9;11429:18;11420:6;11376:72;:::i;:::-;11013:442;;;;;;:::o;11461:222::-;11554:4;11592:2;11581:9;11577:18;11569:26;;11605:71;11673:1;11662:9;11658:17;11649:6;11605:71;:::i;:::-;11461:222;;;;:::o;167:2195:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 2135,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 2852,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 2484,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_handleTax_1122": {
									"entryPoint": 2153,
									"id": 1122,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_msgSender_915": {
									"entryPoint": 2127,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 3567,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 2619,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 3323,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 3716,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 1782,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1074,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 1210,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_363": {
									"entryPoint": 1201,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@devWallet_948": {
									"entryPoint": 1350,
									"id": 948,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@donationWallet_950": {
									"entryPoint": 1917,
									"id": 950,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@excludeFromTax_1073": {
									"entryPoint": 1645,
									"id": 1073,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 928,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1308,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1282,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reserveWallet_946": {
									"entryPoint": 1744,
									"id": 946,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@router_956": {
									"entryPoint": 2089,
									"id": 956,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setRouter_1057": {
									"entryPoint": 1569,
									"id": 1057,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 1388,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@taxRate_944": {
									"entryPoint": 1302,
									"id": 944,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_372": {
									"entryPoint": 1109,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1190": {
									"entryPoint": 1119,
									"id": 1190,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 2437,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 1955,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1148": {
									"entryPoint": 1534,
									"id": 1148,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_409": {
									"entryPoint": 2817,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4521,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 5004,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4575,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4894,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5089,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 5025,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4939,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4672,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4352,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4714,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4852,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4954,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5510,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4409,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4729,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4867,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4265,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4276,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5461,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5348,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4480,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4660,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4448,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4542,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4839,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4293,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5200,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5249,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5414,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5153,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4443,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4335,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 4498,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4981,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4552,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9090:7",
										"nodeType": "YulBlock",
										"src": "0:9090:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:7",
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nativeSrc": "77:22:7",
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nativeSrc": "87:12:7",
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:7",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:7",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nativeSrc": "208:73:7",
													"nodeType": "YulBlock",
													"src": "208:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:7"
																},
																"nativeSrc": "218:19:7",
																"nodeType": "YulFunctionCall",
																"src": "218:19:7"
															},
															"nativeSrc": "218:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:7"
														},
														{
															"nativeSrc": "246:29:7",
															"nodeType": "YulAssignment",
															"src": "246:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:7",
																		"nodeType": "YulLiteral",
																		"src": "270:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:7"
																},
																"nativeSrc": "261:14:7",
																"nodeType": "YulFunctionCall",
																"src": "261:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:7",
														"nodeType": "YulTypedName",
														"src": "180:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:7",
														"nodeType": "YulTypedName",
														"src": "185:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:7",
														"nodeType": "YulTypedName",
														"src": "196:11:7",
														"type": ""
													}
												],
												"src": "112:169:7"
											},
											{
												"body": {
													"nativeSrc": "349:186:7",
													"nodeType": "YulBlock",
													"src": "349:186:7",
													"statements": [
														{
															"nativeSrc": "360:10:7",
															"nodeType": "YulVariableDeclaration",
															"src": "360:10:7",
															"value": {
																"kind": "number",
																"nativeSrc": "369:1:7",
																"nodeType": "YulLiteral",
																"src": "369:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "364:1:7",
																	"nodeType": "YulTypedName",
																	"src": "364:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "429:63:7",
																"nodeType": "YulBlock",
																"src": "429:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "454:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "454:3:7"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "459:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "459:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "450:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "450:3:7"
																					},
																					"nativeSrc": "450:11:7",
																					"nodeType": "YulFunctionCall",
																					"src": "450:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "473:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "473:3:7"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "478:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "478:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "469:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "469:3:7"
																							},
																							"nativeSrc": "469:11:7",
																							"nodeType": "YulFunctionCall",
																							"src": "469:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "463:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "463:5:7"
																					},
																					"nativeSrc": "463:18:7",
																					"nodeType": "YulFunctionCall",
																					"src": "463:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "443:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "443:6:7"
																			},
																			"nativeSrc": "443:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "443:39:7"
																		},
																		"nativeSrc": "443:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "443:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "390:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "390:1:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "393:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "393:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "387:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "387:2:7"
																},
																"nativeSrc": "387:13:7",
																"nodeType": "YulFunctionCall",
																"src": "387:13:7"
															},
															"nativeSrc": "379:113:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "401:19:7",
																"nodeType": "YulBlock",
																"src": "401:19:7",
																"statements": [
																	{
																		"nativeSrc": "403:15:7",
																		"nodeType": "YulAssignment",
																		"src": "403:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "412:1:7",
																					"nodeType": "YulIdentifier",
																					"src": "412:1:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "415:2:7",
																					"nodeType": "YulLiteral",
																					"src": "415:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "408:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "408:3:7"
																			},
																			"nativeSrc": "408:10:7",
																			"nodeType": "YulFunctionCall",
																			"src": "408:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "403:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "403:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "383:3:7",
																"nodeType": "YulBlock",
																"src": "383:3:7",
																"statements": []
															},
															"src": "379:113:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "512:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "512:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "517:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "517:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "508:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "508:3:7"
																		},
																		"nativeSrc": "508:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "508:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "526:1:7",
																		"nodeType": "YulLiteral",
																		"src": "526:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "501:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "501:6:7"
																},
																"nativeSrc": "501:27:7",
																"nodeType": "YulFunctionCall",
																"src": "501:27:7"
															},
															"nativeSrc": "501:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "501:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:248:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:7",
														"nodeType": "YulTypedName",
														"src": "331:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:7",
														"nodeType": "YulTypedName",
														"src": "336:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:7",
														"nodeType": "YulTypedName",
														"src": "341:6:7",
														"type": ""
													}
												],
												"src": "287:248:7"
											},
											{
												"body": {
													"nativeSrc": "589:54:7",
													"nodeType": "YulBlock",
													"src": "589:54:7",
													"statements": [
														{
															"nativeSrc": "599:38:7",
															"nodeType": "YulAssignment",
															"src": "599:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "617:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "617:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "624:2:7",
																				"nodeType": "YulLiteral",
																				"src": "624:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "613:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "613:3:7"
																		},
																		"nativeSrc": "613:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "613:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "633:2:7",
																				"nodeType": "YulLiteral",
																				"src": "633:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "629:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "629:3:7"
																		},
																		"nativeSrc": "629:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "629:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "609:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "609:3:7"
																},
																"nativeSrc": "609:28:7",
																"nodeType": "YulFunctionCall",
																"src": "609:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "599:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "599:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "541:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "572:5:7",
														"nodeType": "YulTypedName",
														"src": "572:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "582:6:7",
														"nodeType": "YulTypedName",
														"src": "582:6:7",
														"type": ""
													}
												],
												"src": "541:102:7"
											},
											{
												"body": {
													"nativeSrc": "741:285:7",
													"nodeType": "YulBlock",
													"src": "741:285:7",
													"statements": [
														{
															"nativeSrc": "751:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "751:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "798:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "798:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "765:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "765:32:7"
																},
																"nativeSrc": "765:39:7",
																"nodeType": "YulFunctionCall",
																"src": "765:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "755:6:7",
																	"nodeType": "YulTypedName",
																	"src": "755:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "813:78:7",
															"nodeType": "YulAssignment",
															"src": "813:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "879:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "879:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "884:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "884:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "820:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "820:58:7"
																},
																"nativeSrc": "820:71:7",
																"nodeType": "YulFunctionCall",
																"src": "820:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "813:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "813:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "939:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "939:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "946:4:7",
																				"nodeType": "YulLiteral",
																				"src": "946:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "935:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "935:3:7"
																		},
																		"nativeSrc": "935:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "935:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "953:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "953:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "958:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "958:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "900:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "900:34:7"
																},
																"nativeSrc": "900:65:7",
																"nodeType": "YulFunctionCall",
																"src": "900:65:7"
															},
															"nativeSrc": "900:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "900:65:7"
														},
														{
															"nativeSrc": "974:46:7",
															"nodeType": "YulAssignment",
															"src": "974:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "985:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "985:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1012:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1012:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "990:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "990:21:7"
																		},
																		"nativeSrc": "990:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "990:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "981:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "981:3:7"
																},
																"nativeSrc": "981:39:7",
																"nodeType": "YulFunctionCall",
																"src": "981:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "974:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "974:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "649:377:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "722:5:7",
														"nodeType": "YulTypedName",
														"src": "722:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "729:3:7",
														"nodeType": "YulTypedName",
														"src": "729:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "737:3:7",
														"nodeType": "YulTypedName",
														"src": "737:3:7",
														"type": ""
													}
												],
												"src": "649:377:7"
											},
											{
												"body": {
													"nativeSrc": "1150:195:7",
													"nodeType": "YulBlock",
													"src": "1150:195:7",
													"statements": [
														{
															"nativeSrc": "1160:26:7",
															"nodeType": "YulAssignment",
															"src": "1160:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1172:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1172:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1183:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1183:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1168:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1168:3:7"
																},
																"nativeSrc": "1168:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1168:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1160:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1160:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1207:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1207:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1218:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1218:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1203:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1203:3:7"
																		},
																		"nativeSrc": "1203:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1203:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1226:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1226:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1232:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1232:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1222:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1222:3:7"
																		},
																		"nativeSrc": "1222:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1222:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1196:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1196:6:7"
																},
																"nativeSrc": "1196:47:7",
																"nodeType": "YulFunctionCall",
																"src": "1196:47:7"
															},
															"nativeSrc": "1196:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "1196:47:7"
														},
														{
															"nativeSrc": "1252:86:7",
															"nodeType": "YulAssignment",
															"src": "1252:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1324:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1324:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1333:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1333:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1260:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "1260:63:7"
																},
																"nativeSrc": "1260:78:7",
																"nodeType": "YulFunctionCall",
																"src": "1260:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1252:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1252:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1032:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1122:9:7",
														"nodeType": "YulTypedName",
														"src": "1122:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1134:6:7",
														"nodeType": "YulTypedName",
														"src": "1134:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1145:4:7",
														"nodeType": "YulTypedName",
														"src": "1145:4:7",
														"type": ""
													}
												],
												"src": "1032:313:7"
											},
											{
												"body": {
													"nativeSrc": "1391:35:7",
													"nodeType": "YulBlock",
													"src": "1391:35:7",
													"statements": [
														{
															"nativeSrc": "1401:19:7",
															"nodeType": "YulAssignment",
															"src": "1401:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1417:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1417:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1411:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1411:5:7"
																},
																"nativeSrc": "1411:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1411:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1401:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1401:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1351:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1384:6:7",
														"nodeType": "YulTypedName",
														"src": "1384:6:7",
														"type": ""
													}
												],
												"src": "1351:75:7"
											},
											{
												"body": {
													"nativeSrc": "1521:28:7",
													"nodeType": "YulBlock",
													"src": "1521:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1538:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1541:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1541:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1531:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:7"
																},
																"nativeSrc": "1531:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1531:12:7"
															},
															"nativeSrc": "1531:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1531:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1432:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1432:117:7"
											},
											{
												"body": {
													"nativeSrc": "1644:28:7",
													"nodeType": "YulBlock",
													"src": "1644:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1661:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1661:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1664:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1664:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1654:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1654:6:7"
																},
																"nativeSrc": "1654:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1654:12:7"
															},
															"nativeSrc": "1654:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1654:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1555:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1555:117:7"
											},
											{
												"body": {
													"nativeSrc": "1723:81:7",
													"nodeType": "YulBlock",
													"src": "1723:81:7",
													"statements": [
														{
															"nativeSrc": "1733:65:7",
															"nodeType": "YulAssignment",
															"src": "1733:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1748:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1748:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1755:42:7",
																		"nodeType": "YulLiteral",
																		"src": "1755:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1744:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1744:3:7"
																},
																"nativeSrc": "1744:54:7",
																"nodeType": "YulFunctionCall",
																"src": "1744:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1733:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1733:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1678:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1705:5:7",
														"nodeType": "YulTypedName",
														"src": "1705:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1715:7:7",
														"nodeType": "YulTypedName",
														"src": "1715:7:7",
														"type": ""
													}
												],
												"src": "1678:126:7"
											},
											{
												"body": {
													"nativeSrc": "1855:51:7",
													"nodeType": "YulBlock",
													"src": "1855:51:7",
													"statements": [
														{
															"nativeSrc": "1865:35:7",
															"nodeType": "YulAssignment",
															"src": "1865:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1894:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1894:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1876:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1876:17:7"
																},
																"nativeSrc": "1876:24:7",
																"nodeType": "YulFunctionCall",
																"src": "1876:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1865:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1865:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1810:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1837:5:7",
														"nodeType": "YulTypedName",
														"src": "1837:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1847:7:7",
														"nodeType": "YulTypedName",
														"src": "1847:7:7",
														"type": ""
													}
												],
												"src": "1810:96:7"
											},
											{
												"body": {
													"nativeSrc": "1955:79:7",
													"nodeType": "YulBlock",
													"src": "1955:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2012:16:7",
																"nodeType": "YulBlock",
																"src": "2012:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2021:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2021:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2024:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2024:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2014:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2014:6:7"
																			},
																			"nativeSrc": "2014:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2014:12:7"
																		},
																		"nativeSrc": "2014:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2014:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1978:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1978:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2003:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2003:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1985:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1985:17:7"
																				},
																				"nativeSrc": "1985:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1985:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1975:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1975:2:7"
																		},
																		"nativeSrc": "1975:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1975:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1968:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1968:6:7"
																},
																"nativeSrc": "1968:43:7",
																"nodeType": "YulFunctionCall",
																"src": "1968:43:7"
															},
															"nativeSrc": "1965:63:7",
															"nodeType": "YulIf",
															"src": "1965:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1912:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1948:5:7",
														"nodeType": "YulTypedName",
														"src": "1948:5:7",
														"type": ""
													}
												],
												"src": "1912:122:7"
											},
											{
												"body": {
													"nativeSrc": "2092:87:7",
													"nodeType": "YulBlock",
													"src": "2092:87:7",
													"statements": [
														{
															"nativeSrc": "2102:29:7",
															"nodeType": "YulAssignment",
															"src": "2102:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2124:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2124:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2111:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2111:12:7"
																},
																"nativeSrc": "2111:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2111:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2102:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2102:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2167:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2167:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2140:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2140:26:7"
																},
																"nativeSrc": "2140:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2140:33:7"
															},
															"nativeSrc": "2140:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2140:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2040:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2070:6:7",
														"nodeType": "YulTypedName",
														"src": "2070:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2078:3:7",
														"nodeType": "YulTypedName",
														"src": "2078:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2086:5:7",
														"nodeType": "YulTypedName",
														"src": "2086:5:7",
														"type": ""
													}
												],
												"src": "2040:139:7"
											},
											{
												"body": {
													"nativeSrc": "2230:32:7",
													"nodeType": "YulBlock",
													"src": "2230:32:7",
													"statements": [
														{
															"nativeSrc": "2240:16:7",
															"nodeType": "YulAssignment",
															"src": "2240:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2251:5:7",
																"nodeType": "YulIdentifier",
																"src": "2251:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2240:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2240:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2185:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2212:5:7",
														"nodeType": "YulTypedName",
														"src": "2212:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2222:7:7",
														"nodeType": "YulTypedName",
														"src": "2222:7:7",
														"type": ""
													}
												],
												"src": "2185:77:7"
											},
											{
												"body": {
													"nativeSrc": "2311:79:7",
													"nodeType": "YulBlock",
													"src": "2311:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2368:16:7",
																"nodeType": "YulBlock",
																"src": "2368:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2377:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2377:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2380:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2380:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2370:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2370:6:7"
																			},
																			"nativeSrc": "2370:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2370:12:7"
																		},
																		"nativeSrc": "2370:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2370:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2334:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2334:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2359:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2359:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2341:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2341:17:7"
																				},
																				"nativeSrc": "2341:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2341:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2331:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2331:2:7"
																		},
																		"nativeSrc": "2331:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2331:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2324:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2324:6:7"
																},
																"nativeSrc": "2324:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2324:43:7"
															},
															"nativeSrc": "2321:63:7",
															"nodeType": "YulIf",
															"src": "2321:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2268:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2304:5:7",
														"nodeType": "YulTypedName",
														"src": "2304:5:7",
														"type": ""
													}
												],
												"src": "2268:122:7"
											},
											{
												"body": {
													"nativeSrc": "2448:87:7",
													"nodeType": "YulBlock",
													"src": "2448:87:7",
													"statements": [
														{
															"nativeSrc": "2458:29:7",
															"nodeType": "YulAssignment",
															"src": "2458:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2480:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2480:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2467:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2467:12:7"
																},
																"nativeSrc": "2467:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2467:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2458:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2458:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2523:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2523:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2496:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2496:26:7"
																},
																"nativeSrc": "2496:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2496:33:7"
															},
															"nativeSrc": "2496:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2496:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2396:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2426:6:7",
														"nodeType": "YulTypedName",
														"src": "2426:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2434:3:7",
														"nodeType": "YulTypedName",
														"src": "2434:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2442:5:7",
														"nodeType": "YulTypedName",
														"src": "2442:5:7",
														"type": ""
													}
												],
												"src": "2396:139:7"
											},
											{
												"body": {
													"nativeSrc": "2624:391:7",
													"nodeType": "YulBlock",
													"src": "2624:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2670:83:7",
																"nodeType": "YulBlock",
																"src": "2670:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2672:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2672:77:7"
																			},
																			"nativeSrc": "2672:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2672:79:7"
																		},
																		"nativeSrc": "2672:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2672:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2645:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2645:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2654:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2654:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2641:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2641:3:7"
																		},
																		"nativeSrc": "2641:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2641:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2666:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2666:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2637:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2637:3:7"
																},
																"nativeSrc": "2637:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2637:32:7"
															},
															"nativeSrc": "2634:119:7",
															"nodeType": "YulIf",
															"src": "2634:119:7"
														},
														{
															"nativeSrc": "2763:117:7",
															"nodeType": "YulBlock",
															"src": "2763:117:7",
															"statements": [
																{
																	"nativeSrc": "2778:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2778:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2792:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2792:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2782:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2782:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2807:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2807:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2842:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2842:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2853:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2853:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2838:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2838:3:7"
																				},
																				"nativeSrc": "2838:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2838:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2862:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2862:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2817:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2817:20:7"
																		},
																		"nativeSrc": "2817:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2817:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2807:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2807:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2890:118:7",
															"nodeType": "YulBlock",
															"src": "2890:118:7",
															"statements": [
																{
																	"nativeSrc": "2905:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2905:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2919:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2919:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2909:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2909:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2935:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2935:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2970:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2970:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2981:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2981:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2966:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2966:3:7"
																				},
																				"nativeSrc": "2966:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2966:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2990:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2990:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2945:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2945:20:7"
																		},
																		"nativeSrc": "2945:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2945:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2935:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2935:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2541:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2586:9:7",
														"nodeType": "YulTypedName",
														"src": "2586:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2597:7:7",
														"nodeType": "YulTypedName",
														"src": "2597:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2609:6:7",
														"nodeType": "YulTypedName",
														"src": "2609:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2617:6:7",
														"nodeType": "YulTypedName",
														"src": "2617:6:7",
														"type": ""
													}
												],
												"src": "2541:474:7"
											},
											{
												"body": {
													"nativeSrc": "3063:48:7",
													"nodeType": "YulBlock",
													"src": "3063:48:7",
													"statements": [
														{
															"nativeSrc": "3073:32:7",
															"nodeType": "YulAssignment",
															"src": "3073:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3098:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3098:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3091:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3091:6:7"
																		},
																		"nativeSrc": "3091:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3091:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3084:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3084:6:7"
																},
																"nativeSrc": "3084:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3084:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3073:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3073:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3021:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3045:5:7",
														"nodeType": "YulTypedName",
														"src": "3045:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3055:7:7",
														"nodeType": "YulTypedName",
														"src": "3055:7:7",
														"type": ""
													}
												],
												"src": "3021:90:7"
											},
											{
												"body": {
													"nativeSrc": "3176:50:7",
													"nodeType": "YulBlock",
													"src": "3176:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3193:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3193:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3213:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3213:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3198:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "3198:14:7"
																		},
																		"nativeSrc": "3198:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3198:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3186:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3186:6:7"
																},
																"nativeSrc": "3186:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3186:34:7"
															},
															"nativeSrc": "3186:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3186:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3117:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3164:5:7",
														"nodeType": "YulTypedName",
														"src": "3164:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3171:3:7",
														"nodeType": "YulTypedName",
														"src": "3171:3:7",
														"type": ""
													}
												],
												"src": "3117:109:7"
											},
											{
												"body": {
													"nativeSrc": "3324:118:7",
													"nodeType": "YulBlock",
													"src": "3324:118:7",
													"statements": [
														{
															"nativeSrc": "3334:26:7",
															"nodeType": "YulAssignment",
															"src": "3334:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3346:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3346:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3357:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3357:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3342:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3342:3:7"
																},
																"nativeSrc": "3342:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3342:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3334:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3334:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3408:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3408:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3421:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3421:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3432:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3432:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3417:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3417:3:7"
																		},
																		"nativeSrc": "3417:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3417:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3370:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "3370:37:7"
																},
																"nativeSrc": "3370:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3370:65:7"
															},
															"nativeSrc": "3370:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3370:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3232:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3296:9:7",
														"nodeType": "YulTypedName",
														"src": "3296:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3308:6:7",
														"nodeType": "YulTypedName",
														"src": "3308:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3319:4:7",
														"nodeType": "YulTypedName",
														"src": "3319:4:7",
														"type": ""
													}
												],
												"src": "3232:210:7"
											},
											{
												"body": {
													"nativeSrc": "3513:53:7",
													"nodeType": "YulBlock",
													"src": "3513:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3530:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3530:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3553:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3553:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3535:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "3535:17:7"
																		},
																		"nativeSrc": "3535:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3535:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3523:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3523:6:7"
																},
																"nativeSrc": "3523:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3523:37:7"
															},
															"nativeSrc": "3523:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "3523:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3448:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3501:5:7",
														"nodeType": "YulTypedName",
														"src": "3501:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3508:3:7",
														"nodeType": "YulTypedName",
														"src": "3508:3:7",
														"type": ""
													}
												],
												"src": "3448:118:7"
											},
											{
												"body": {
													"nativeSrc": "3670:124:7",
													"nodeType": "YulBlock",
													"src": "3670:124:7",
													"statements": [
														{
															"nativeSrc": "3680:26:7",
															"nodeType": "YulAssignment",
															"src": "3680:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3692:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3692:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3703:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3703:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3688:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3688:3:7"
																},
																"nativeSrc": "3688:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3688:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3680:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3680:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3760:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3760:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3773:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3773:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3784:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3784:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3769:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3769:3:7"
																		},
																		"nativeSrc": "3769:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3769:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3716:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3716:43:7"
																},
																"nativeSrc": "3716:71:7",
																"nodeType": "YulFunctionCall",
																"src": "3716:71:7"
															},
															"nativeSrc": "3716:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "3716:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3572:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3642:9:7",
														"nodeType": "YulTypedName",
														"src": "3642:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3654:6:7",
														"nodeType": "YulTypedName",
														"src": "3654:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3665:4:7",
														"nodeType": "YulTypedName",
														"src": "3665:4:7",
														"type": ""
													}
												],
												"src": "3572:222:7"
											},
											{
												"body": {
													"nativeSrc": "3900:519:7",
													"nodeType": "YulBlock",
													"src": "3900:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3946:83:7",
																"nodeType": "YulBlock",
																"src": "3946:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3948:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3948:77:7"
																			},
																			"nativeSrc": "3948:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3948:79:7"
																		},
																		"nativeSrc": "3948:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3948:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3921:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3921:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3930:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3930:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3917:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3917:3:7"
																		},
																		"nativeSrc": "3917:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3917:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3942:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3942:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3913:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3913:3:7"
																},
																"nativeSrc": "3913:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3913:32:7"
															},
															"nativeSrc": "3910:119:7",
															"nodeType": "YulIf",
															"src": "3910:119:7"
														},
														{
															"nativeSrc": "4039:117:7",
															"nodeType": "YulBlock",
															"src": "4039:117:7",
															"statements": [
																{
																	"nativeSrc": "4054:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4054:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4068:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4068:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4058:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4058:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4083:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4083:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4118:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4118:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4129:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4129:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4114:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4114:3:7"
																				},
																				"nativeSrc": "4114:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4114:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4138:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4138:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4093:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4093:20:7"
																		},
																		"nativeSrc": "4093:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4093:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4083:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4083:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4166:118:7",
															"nodeType": "YulBlock",
															"src": "4166:118:7",
															"statements": [
																{
																	"nativeSrc": "4181:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4181:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4195:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4195:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4185:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4185:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4211:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4211:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4246:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4246:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4257:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4257:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4242:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4242:3:7"
																				},
																				"nativeSrc": "4242:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4242:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4266:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4266:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4221:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4221:20:7"
																		},
																		"nativeSrc": "4221:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4221:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4211:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4211:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4294:118:7",
															"nodeType": "YulBlock",
															"src": "4294:118:7",
															"statements": [
																{
																	"nativeSrc": "4309:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4309:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4323:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4323:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4313:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4313:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4339:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4339:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4374:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4374:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4385:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4385:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4370:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4370:3:7"
																				},
																				"nativeSrc": "4370:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4370:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4394:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4394:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4349:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4349:20:7"
																		},
																		"nativeSrc": "4349:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4349:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4339:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4339:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3800:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3854:9:7",
														"nodeType": "YulTypedName",
														"src": "3854:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3865:7:7",
														"nodeType": "YulTypedName",
														"src": "3865:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3877:6:7",
														"nodeType": "YulTypedName",
														"src": "3877:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3885:6:7",
														"nodeType": "YulTypedName",
														"src": "3885:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3893:6:7",
														"nodeType": "YulTypedName",
														"src": "3893:6:7",
														"type": ""
													}
												],
												"src": "3800:619:7"
											},
											{
												"body": {
													"nativeSrc": "4468:43:7",
													"nodeType": "YulBlock",
													"src": "4468:43:7",
													"statements": [
														{
															"nativeSrc": "4478:27:7",
															"nodeType": "YulAssignment",
															"src": "4478:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4493:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4493:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4500:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4500:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4489:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4489:3:7"
																},
																"nativeSrc": "4489:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4489:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4478:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4478:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4425:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4450:5:7",
														"nodeType": "YulTypedName",
														"src": "4450:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4460:7:7",
														"nodeType": "YulTypedName",
														"src": "4460:7:7",
														"type": ""
													}
												],
												"src": "4425:86:7"
											},
											{
												"body": {
													"nativeSrc": "4578:51:7",
													"nodeType": "YulBlock",
													"src": "4578:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4595:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4595:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4616:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4616:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4600:15:7",
																			"nodeType": "YulIdentifier",
																			"src": "4600:15:7"
																		},
																		"nativeSrc": "4600:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4600:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4588:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4588:6:7"
																},
																"nativeSrc": "4588:35:7",
																"nodeType": "YulFunctionCall",
																"src": "4588:35:7"
															},
															"nativeSrc": "4588:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "4588:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4517:112:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4566:5:7",
														"nodeType": "YulTypedName",
														"src": "4566:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4573:3:7",
														"nodeType": "YulTypedName",
														"src": "4573:3:7",
														"type": ""
													}
												],
												"src": "4517:112:7"
											},
											{
												"body": {
													"nativeSrc": "4729:120:7",
													"nodeType": "YulBlock",
													"src": "4729:120:7",
													"statements": [
														{
															"nativeSrc": "4739:26:7",
															"nodeType": "YulAssignment",
															"src": "4739:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4751:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4751:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4762:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4762:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4747:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4747:3:7"
																},
																"nativeSrc": "4747:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4747:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4739:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4739:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4815:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4815:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4828:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4828:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4839:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4839:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4824:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4824:3:7"
																		},
																		"nativeSrc": "4824:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4824:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4775:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "4775:39:7"
																},
																"nativeSrc": "4775:67:7",
																"nodeType": "YulFunctionCall",
																"src": "4775:67:7"
															},
															"nativeSrc": "4775:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "4775:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4635:214:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4701:9:7",
														"nodeType": "YulTypedName",
														"src": "4701:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4713:6:7",
														"nodeType": "YulTypedName",
														"src": "4713:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4724:4:7",
														"nodeType": "YulTypedName",
														"src": "4724:4:7",
														"type": ""
													}
												],
												"src": "4635:214:7"
											},
											{
												"body": {
													"nativeSrc": "4921:263:7",
													"nodeType": "YulBlock",
													"src": "4921:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4967:83:7",
																"nodeType": "YulBlock",
																"src": "4967:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4969:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4969:77:7"
																			},
																			"nativeSrc": "4969:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4969:79:7"
																		},
																		"nativeSrc": "4969:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4969:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4942:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4942:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4951:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4951:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4938:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4938:3:7"
																		},
																		"nativeSrc": "4938:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4938:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4963:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4963:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4934:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4934:3:7"
																},
																"nativeSrc": "4934:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4934:32:7"
															},
															"nativeSrc": "4931:119:7",
															"nodeType": "YulIf",
															"src": "4931:119:7"
														},
														{
															"nativeSrc": "5060:117:7",
															"nodeType": "YulBlock",
															"src": "5060:117:7",
															"statements": [
																{
																	"nativeSrc": "5075:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5075:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5089:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5089:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5079:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5079:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5104:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5104:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5139:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5139:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5150:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5150:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5135:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5135:3:7"
																				},
																				"nativeSrc": "5135:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5135:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5159:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5159:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5114:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5114:20:7"
																		},
																		"nativeSrc": "5114:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5114:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5104:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5104:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4855:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4891:9:7",
														"nodeType": "YulTypedName",
														"src": "4891:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4902:7:7",
														"nodeType": "YulTypedName",
														"src": "4902:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4914:6:7",
														"nodeType": "YulTypedName",
														"src": "4914:6:7",
														"type": ""
													}
												],
												"src": "4855:329:7"
											},
											{
												"body": {
													"nativeSrc": "5255:53:7",
													"nodeType": "YulBlock",
													"src": "5255:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5272:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5272:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5295:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5295:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5277:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "5277:17:7"
																		},
																		"nativeSrc": "5277:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5277:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5265:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5265:6:7"
																},
																"nativeSrc": "5265:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5265:37:7"
															},
															"nativeSrc": "5265:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "5265:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5190:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5243:5:7",
														"nodeType": "YulTypedName",
														"src": "5243:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5250:3:7",
														"nodeType": "YulTypedName",
														"src": "5250:3:7",
														"type": ""
													}
												],
												"src": "5190:118:7"
											},
											{
												"body": {
													"nativeSrc": "5412:124:7",
													"nodeType": "YulBlock",
													"src": "5412:124:7",
													"statements": [
														{
															"nativeSrc": "5422:26:7",
															"nodeType": "YulAssignment",
															"src": "5422:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5434:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5434:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5445:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5445:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5430:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5430:3:7"
																},
																"nativeSrc": "5430:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5430:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5422:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5422:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5502:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5502:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5515:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5515:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5526:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5526:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5511:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5511:3:7"
																		},
																		"nativeSrc": "5511:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5511:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5458:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5458:43:7"
																},
																"nativeSrc": "5458:71:7",
																"nodeType": "YulFunctionCall",
																"src": "5458:71:7"
															},
															"nativeSrc": "5458:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "5458:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5314:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5384:9:7",
														"nodeType": "YulTypedName",
														"src": "5384:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5396:6:7",
														"nodeType": "YulTypedName",
														"src": "5396:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5407:4:7",
														"nodeType": "YulTypedName",
														"src": "5407:4:7",
														"type": ""
													}
												],
												"src": "5314:222:7"
											},
											{
												"body": {
													"nativeSrc": "5582:76:7",
													"nodeType": "YulBlock",
													"src": "5582:76:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5636:16:7",
																"nodeType": "YulBlock",
																"src": "5636:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5645:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5645:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5648:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5648:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5638:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5638:6:7"
																			},
																			"nativeSrc": "5638:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5638:12:7"
																		},
																		"nativeSrc": "5638:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5638:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5605:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5605:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5627:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "5627:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "5612:14:7",
																					"nodeType": "YulIdentifier",
																					"src": "5612:14:7"
																				},
																				"nativeSrc": "5612:21:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5612:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5602:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "5602:2:7"
																		},
																		"nativeSrc": "5602:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5602:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5595:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5595:6:7"
																},
																"nativeSrc": "5595:40:7",
																"nodeType": "YulFunctionCall",
																"src": "5595:40:7"
															},
															"nativeSrc": "5592:60:7",
															"nodeType": "YulIf",
															"src": "5592:60:7"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "5542:116:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5575:5:7",
														"nodeType": "YulTypedName",
														"src": "5575:5:7",
														"type": ""
													}
												],
												"src": "5542:116:7"
											},
											{
												"body": {
													"nativeSrc": "5713:84:7",
													"nodeType": "YulBlock",
													"src": "5713:84:7",
													"statements": [
														{
															"nativeSrc": "5723:29:7",
															"nodeType": "YulAssignment",
															"src": "5723:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5745:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5745:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5732:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "5732:12:7"
																},
																"nativeSrc": "5732:20:7",
																"nodeType": "YulFunctionCall",
																"src": "5732:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5723:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "5723:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5785:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5785:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "5761:23:7",
																	"nodeType": "YulIdentifier",
																	"src": "5761:23:7"
																},
																"nativeSrc": "5761:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5761:30:7"
															},
															"nativeSrc": "5761:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "5761:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "5664:133:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5691:6:7",
														"nodeType": "YulTypedName",
														"src": "5691:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5699:3:7",
														"nodeType": "YulTypedName",
														"src": "5699:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5707:5:7",
														"nodeType": "YulTypedName",
														"src": "5707:5:7",
														"type": ""
													}
												],
												"src": "5664:133:7"
											},
											{
												"body": {
													"nativeSrc": "5883:388:7",
													"nodeType": "YulBlock",
													"src": "5883:388:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5929:83:7",
																"nodeType": "YulBlock",
																"src": "5929:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5931:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5931:77:7"
																			},
																			"nativeSrc": "5931:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5931:79:7"
																		},
																		"nativeSrc": "5931:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5931:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5904:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5904:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5913:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5913:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5900:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5900:3:7"
																		},
																		"nativeSrc": "5900:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5900:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5925:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5925:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5896:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5896:3:7"
																},
																"nativeSrc": "5896:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5896:32:7"
															},
															"nativeSrc": "5893:119:7",
															"nodeType": "YulIf",
															"src": "5893:119:7"
														},
														{
															"nativeSrc": "6022:117:7",
															"nodeType": "YulBlock",
															"src": "6022:117:7",
															"statements": [
																{
																	"nativeSrc": "6037:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6037:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6051:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6051:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6041:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6041:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6066:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6066:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6101:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6101:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6112:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6112:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6097:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6097:3:7"
																				},
																				"nativeSrc": "6097:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6097:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6121:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6121:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6076:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6076:20:7"
																		},
																		"nativeSrc": "6076:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6076:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6066:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6066:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6149:115:7",
															"nodeType": "YulBlock",
															"src": "6149:115:7",
															"statements": [
																{
																	"nativeSrc": "6164:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6164:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6178:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6178:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6168:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6168:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6194:60:7",
																	"nodeType": "YulAssignment",
																	"src": "6194:60:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6226:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6226:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6237:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6237:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6222:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6222:3:7"
																				},
																				"nativeSrc": "6222:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6222:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6246:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6246:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "6204:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "6204:17:7"
																		},
																		"nativeSrc": "6204:50:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6204:50:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6194:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6194:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "5803:468:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5845:9:7",
														"nodeType": "YulTypedName",
														"src": "5845:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5856:7:7",
														"nodeType": "YulTypedName",
														"src": "5856:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5868:6:7",
														"nodeType": "YulTypedName",
														"src": "5868:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5876:6:7",
														"nodeType": "YulTypedName",
														"src": "5876:6:7",
														"type": ""
													}
												],
												"src": "5803:468:7"
											},
											{
												"body": {
													"nativeSrc": "6360:391:7",
													"nodeType": "YulBlock",
													"src": "6360:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6406:83:7",
																"nodeType": "YulBlock",
																"src": "6406:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6408:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "6408:77:7"
																			},
																			"nativeSrc": "6408:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6408:79:7"
																		},
																		"nativeSrc": "6408:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6408:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6381:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6381:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6390:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6390:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6377:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6377:3:7"
																		},
																		"nativeSrc": "6377:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6377:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6402:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6402:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6373:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6373:3:7"
																},
																"nativeSrc": "6373:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6373:32:7"
															},
															"nativeSrc": "6370:119:7",
															"nodeType": "YulIf",
															"src": "6370:119:7"
														},
														{
															"nativeSrc": "6499:117:7",
															"nodeType": "YulBlock",
															"src": "6499:117:7",
															"statements": [
																{
																	"nativeSrc": "6514:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6514:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6528:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6528:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6518:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6518:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6543:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6543:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6578:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6578:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6589:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6589:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6574:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6574:3:7"
																				},
																				"nativeSrc": "6574:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6574:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6598:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6598:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6553:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6553:20:7"
																		},
																		"nativeSrc": "6553:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6553:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6543:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6543:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6626:118:7",
															"nodeType": "YulBlock",
															"src": "6626:118:7",
															"statements": [
																{
																	"nativeSrc": "6641:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6641:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6655:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6655:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6645:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6645:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6671:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6671:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6706:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6706:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6717:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6717:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6702:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6702:3:7"
																				},
																				"nativeSrc": "6702:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6702:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6726:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6726:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6681:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6681:20:7"
																		},
																		"nativeSrc": "6681:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6681:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6671:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6671:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "6277:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6322:9:7",
														"nodeType": "YulTypedName",
														"src": "6322:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6333:7:7",
														"nodeType": "YulTypedName",
														"src": "6333:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6345:6:7",
														"nodeType": "YulTypedName",
														"src": "6345:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6353:6:7",
														"nodeType": "YulTypedName",
														"src": "6353:6:7",
														"type": ""
													}
												],
												"src": "6277:474:7"
											},
											{
												"body": {
													"nativeSrc": "6785:152:7",
													"nodeType": "YulBlock",
													"src": "6785:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6802:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6802:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6805:77:7",
																		"nodeType": "YulLiteral",
																		"src": "6805:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6795:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6795:6:7"
																},
																"nativeSrc": "6795:88:7",
																"nodeType": "YulFunctionCall",
																"src": "6795:88:7"
															},
															"nativeSrc": "6795:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "6795:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6899:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6899:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6902:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6902:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6892:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6892:6:7"
																},
																"nativeSrc": "6892:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6892:15:7"
															},
															"nativeSrc": "6892:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6892:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6923:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6923:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6926:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6926:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6916:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6916:6:7"
																},
																"nativeSrc": "6916:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6916:15:7"
															},
															"nativeSrc": "6916:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6916:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6757:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "6757:180:7"
											},
											{
												"body": {
													"nativeSrc": "6994:269:7",
													"nodeType": "YulBlock",
													"src": "6994:269:7",
													"statements": [
														{
															"nativeSrc": "7004:22:7",
															"nodeType": "YulAssignment",
															"src": "7004:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7018:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7018:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7024:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7024:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7014:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7014:3:7"
																},
																"nativeSrc": "7014:12:7",
																"nodeType": "YulFunctionCall",
																"src": "7014:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7004:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7004:6:7"
																}
															]
														},
														{
															"nativeSrc": "7035:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7035:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7065:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7065:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7071:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7071:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7061:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7061:3:7"
																},
																"nativeSrc": "7061:12:7",
																"nodeType": "YulFunctionCall",
																"src": "7061:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "7039:18:7",
																	"nodeType": "YulTypedName",
																	"src": "7039:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7112:51:7",
																"nodeType": "YulBlock",
																"src": "7112:51:7",
																"statements": [
																	{
																		"nativeSrc": "7126:27:7",
																		"nodeType": "YulAssignment",
																		"src": "7126:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "7140:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "7140:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7148:4:7",
																					"nodeType": "YulLiteral",
																					"src": "7148:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7136:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7136:3:7"
																			},
																			"nativeSrc": "7136:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7136:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "7126:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7126:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7092:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "7092:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7085:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7085:6:7"
																},
																"nativeSrc": "7085:26:7",
																"nodeType": "YulFunctionCall",
																"src": "7085:26:7"
															},
															"nativeSrc": "7082:81:7",
															"nodeType": "YulIf",
															"src": "7082:81:7"
														},
														{
															"body": {
																"nativeSrc": "7215:42:7",
																"nodeType": "YulBlock",
																"src": "7215:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "7229:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7229:16:7"
																			},
																			"nativeSrc": "7229:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7229:18:7"
																		},
																		"nativeSrc": "7229:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7229:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7179:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "7179:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7202:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7202:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7210:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7210:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7199:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "7199:2:7"
																		},
																		"nativeSrc": "7199:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7199:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7176:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7176:2:7"
																},
																"nativeSrc": "7176:38:7",
																"nodeType": "YulFunctionCall",
																"src": "7176:38:7"
															},
															"nativeSrc": "7173:84:7",
															"nodeType": "YulIf",
															"src": "7173:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6943:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6978:4:7",
														"nodeType": "YulTypedName",
														"src": "6978:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6987:6:7",
														"nodeType": "YulTypedName",
														"src": "6987:6:7",
														"type": ""
													}
												],
												"src": "6943:320:7"
											},
											{
												"body": {
													"nativeSrc": "7297:152:7",
													"nodeType": "YulBlock",
													"src": "7297:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7314:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7314:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7317:77:7",
																		"nodeType": "YulLiteral",
																		"src": "7317:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7307:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7307:6:7"
																},
																"nativeSrc": "7307:88:7",
																"nodeType": "YulFunctionCall",
																"src": "7307:88:7"
															},
															"nativeSrc": "7307:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "7307:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7411:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7411:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7414:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7414:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7404:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7404:6:7"
																},
																"nativeSrc": "7404:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7404:15:7"
															},
															"nativeSrc": "7404:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7404:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7435:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7435:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7438:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7438:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7428:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7428:6:7"
																},
																"nativeSrc": "7428:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7428:15:7"
															},
															"nativeSrc": "7428:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7428:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7269:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "7269:180:7"
											},
											{
												"body": {
													"nativeSrc": "7500:149:7",
													"nodeType": "YulBlock",
													"src": "7500:149:7",
													"statements": [
														{
															"nativeSrc": "7510:25:7",
															"nodeType": "YulAssignment",
															"src": "7510:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7533:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7533:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7515:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7515:17:7"
																},
																"nativeSrc": "7515:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7515:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7510:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7510:1:7"
																}
															]
														},
														{
															"nativeSrc": "7544:25:7",
															"nodeType": "YulAssignment",
															"src": "7544:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7567:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7567:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7549:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7549:17:7"
																},
																"nativeSrc": "7549:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7549:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7544:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7544:1:7"
																}
															]
														},
														{
															"nativeSrc": "7578:17:7",
															"nodeType": "YulAssignment",
															"src": "7578:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7590:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7590:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7593:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7593:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "7586:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7586:3:7"
																},
																"nativeSrc": "7586:9:7",
																"nodeType": "YulFunctionCall",
																"src": "7586:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "7578:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7578:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7620:22:7",
																"nodeType": "YulBlock",
																"src": "7620:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7622:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7622:16:7"
																			},
																			"nativeSrc": "7622:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7622:18:7"
																		},
																		"nativeSrc": "7622:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7622:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "7611:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7611:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "7617:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7617:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7608:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7608:2:7"
																},
																"nativeSrc": "7608:11:7",
																"nodeType": "YulFunctionCall",
																"src": "7608:11:7"
															},
															"nativeSrc": "7605:37:7",
															"nodeType": "YulIf",
															"src": "7605:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "7455:194:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7486:1:7",
														"nodeType": "YulTypedName",
														"src": "7486:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7489:1:7",
														"nodeType": "YulTypedName",
														"src": "7489:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "7495:4:7",
														"nodeType": "YulTypedName",
														"src": "7495:4:7",
														"type": ""
													}
												],
												"src": "7455:194:7"
											},
											{
												"body": {
													"nativeSrc": "7703:362:7",
													"nodeType": "YulBlock",
													"src": "7703:362:7",
													"statements": [
														{
															"nativeSrc": "7713:25:7",
															"nodeType": "YulAssignment",
															"src": "7713:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7736:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7736:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7718:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7718:17:7"
																},
																"nativeSrc": "7718:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7718:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7713:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7713:1:7"
																}
															]
														},
														{
															"nativeSrc": "7747:25:7",
															"nodeType": "YulAssignment",
															"src": "7747:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7770:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7770:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7752:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7752:17:7"
																},
																"nativeSrc": "7752:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7752:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7747:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7747:1:7"
																}
															]
														},
														{
															"nativeSrc": "7781:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7781:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7804:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7804:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7807:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7807:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7800:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7800:3:7"
																},
																"nativeSrc": "7800:9:7",
																"nodeType": "YulFunctionCall",
																"src": "7800:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "7785:11:7",
																	"nodeType": "YulTypedName",
																	"src": "7785:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7818:41:7",
															"nodeType": "YulAssignment",
															"src": "7818:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "7847:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "7847:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7829:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7829:17:7"
																},
																"nativeSrc": "7829:30:7",
																"nodeType": "YulFunctionCall",
																"src": "7829:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "7818:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "7818:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8036:22:7",
																"nodeType": "YulBlock",
																"src": "8036:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8038:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8038:16:7"
																			},
																			"nativeSrc": "8038:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8038:18:7"
																		},
																		"nativeSrc": "8038:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8038:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "7969:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "7969:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "7962:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "7962:6:7"
																				},
																				"nativeSrc": "7962:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7962:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "7992:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "7992:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "7999:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "7999:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8008:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "8008:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "7995:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "7995:3:7"
																						},
																						"nativeSrc": "7995:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "7995:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "7989:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "7989:2:7"
																				},
																				"nativeSrc": "7989:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7989:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "7942:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "7942:2:7"
																		},
																		"nativeSrc": "7942:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7942:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7922:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7922:6:7"
																},
																"nativeSrc": "7922:113:7",
																"nodeType": "YulFunctionCall",
																"src": "7922:113:7"
															},
															"nativeSrc": "7919:139:7",
															"nodeType": "YulIf",
															"src": "7919:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "7655:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7686:1:7",
														"nodeType": "YulTypedName",
														"src": "7686:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7689:1:7",
														"nodeType": "YulTypedName",
														"src": "7689:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "7695:7:7",
														"nodeType": "YulTypedName",
														"src": "7695:7:7",
														"type": ""
													}
												],
												"src": "7655:410:7"
											},
											{
												"body": {
													"nativeSrc": "8099:152:7",
													"nodeType": "YulBlock",
													"src": "8099:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8116:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8116:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8119:77:7",
																		"nodeType": "YulLiteral",
																		"src": "8119:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8109:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8109:6:7"
																},
																"nativeSrc": "8109:88:7",
																"nodeType": "YulFunctionCall",
																"src": "8109:88:7"
															},
															"nativeSrc": "8109:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "8109:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8213:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8213:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8216:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8216:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8206:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8206:6:7"
																},
																"nativeSrc": "8206:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8206:15:7"
															},
															"nativeSrc": "8206:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8206:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8237:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8237:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8240:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8240:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8230:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8230:6:7"
																},
																"nativeSrc": "8230:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8230:15:7"
															},
															"nativeSrc": "8230:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8230:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "8071:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "8071:180:7"
											},
											{
												"body": {
													"nativeSrc": "8299:143:7",
													"nodeType": "YulBlock",
													"src": "8299:143:7",
													"statements": [
														{
															"nativeSrc": "8309:25:7",
															"nodeType": "YulAssignment",
															"src": "8309:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8332:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8332:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8314:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8314:17:7"
																},
																"nativeSrc": "8314:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8314:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8309:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8309:1:7"
																}
															]
														},
														{
															"nativeSrc": "8343:25:7",
															"nodeType": "YulAssignment",
															"src": "8343:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8366:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8366:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8348:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8348:17:7"
																},
																"nativeSrc": "8348:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8348:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8343:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8343:1:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8390:22:7",
																"nodeType": "YulBlock",
																"src": "8390:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "8392:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8392:16:7"
																			},
																			"nativeSrc": "8392:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8392:18:7"
																		},
																		"nativeSrc": "8392:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8392:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8387:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8387:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8380:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8380:6:7"
																},
																"nativeSrc": "8380:9:7",
																"nodeType": "YulFunctionCall",
																"src": "8380:9:7"
															},
															"nativeSrc": "8377:35:7",
															"nodeType": "YulIf",
															"src": "8377:35:7"
														},
														{
															"nativeSrc": "8422:14:7",
															"nodeType": "YulAssignment",
															"src": "8422:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8431:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8431:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8434:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8434:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8427:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8427:3:7"
																},
																"nativeSrc": "8427:9:7",
																"nodeType": "YulFunctionCall",
																"src": "8427:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "8422:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8422:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "8257:185:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8288:1:7",
														"nodeType": "YulTypedName",
														"src": "8288:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8291:1:7",
														"nodeType": "YulTypedName",
														"src": "8291:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "8297:1:7",
														"nodeType": "YulTypedName",
														"src": "8297:1:7",
														"type": ""
													}
												],
												"src": "8257:185:7"
											},
											{
												"body": {
													"nativeSrc": "8602:288:7",
													"nodeType": "YulBlock",
													"src": "8602:288:7",
													"statements": [
														{
															"nativeSrc": "8612:26:7",
															"nodeType": "YulAssignment",
															"src": "8612:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8624:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8624:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8635:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8635:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8620:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8620:3:7"
																},
																"nativeSrc": "8620:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8620:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8612:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8612:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8692:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8692:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8705:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8705:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8716:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8716:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8701:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8701:3:7"
																		},
																		"nativeSrc": "8701:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8701:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8648:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "8648:43:7"
																},
																"nativeSrc": "8648:71:7",
																"nodeType": "YulFunctionCall",
																"src": "8648:71:7"
															},
															"nativeSrc": "8648:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "8648:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8773:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8773:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8786:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8786:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8797:2:7",
																				"nodeType": "YulLiteral",
																				"src": "8797:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8782:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8782:3:7"
																		},
																		"nativeSrc": "8782:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8782:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8729:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "8729:43:7"
																},
																"nativeSrc": "8729:72:7",
																"nodeType": "YulFunctionCall",
																"src": "8729:72:7"
															},
															"nativeSrc": "8729:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "8729:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8855:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8855:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8868:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8868:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8879:2:7",
																				"nodeType": "YulLiteral",
																				"src": "8879:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8864:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8864:3:7"
																		},
																		"nativeSrc": "8864:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8864:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8811:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "8811:43:7"
																},
																"nativeSrc": "8811:72:7",
																"nodeType": "YulFunctionCall",
																"src": "8811:72:7"
															},
															"nativeSrc": "8811:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "8811:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "8448:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8558:9:7",
														"nodeType": "YulTypedName",
														"src": "8558:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8570:6:7",
														"nodeType": "YulTypedName",
														"src": "8570:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8578:6:7",
														"nodeType": "YulTypedName",
														"src": "8578:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8586:6:7",
														"nodeType": "YulTypedName",
														"src": "8586:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8597:4:7",
														"nodeType": "YulTypedName",
														"src": "8597:4:7",
														"type": ""
													}
												],
												"src": "8448:442:7"
											},
											{
												"body": {
													"nativeSrc": "8940:147:7",
													"nodeType": "YulBlock",
													"src": "8940:147:7",
													"statements": [
														{
															"nativeSrc": "8950:25:7",
															"nodeType": "YulAssignment",
															"src": "8950:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8973:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8973:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8955:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8955:17:7"
																},
																"nativeSrc": "8955:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8955:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8950:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8950:1:7"
																}
															]
														},
														{
															"nativeSrc": "8984:25:7",
															"nodeType": "YulAssignment",
															"src": "8984:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9007:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9007:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8989:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8989:17:7"
																},
																"nativeSrc": "8989:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8989:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8984:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8984:1:7"
																}
															]
														},
														{
															"nativeSrc": "9018:16:7",
															"nodeType": "YulAssignment",
															"src": "9018:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9029:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9029:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9032:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9032:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9025:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9025:3:7"
																},
																"nativeSrc": "9025:9:7",
																"nodeType": "YulFunctionCall",
																"src": "9025:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9018:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9018:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9058:22:7",
																"nodeType": "YulBlock",
																"src": "9058:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9060:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "9060:16:7"
																			},
																			"nativeSrc": "9060:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9060:18:7"
																		},
																		"nativeSrc": "9060:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9060:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9050:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9050:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9053:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9053:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9047:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "9047:2:7"
																},
																"nativeSrc": "9047:10:7",
																"nodeType": "YulFunctionCall",
																"src": "9047:10:7"
															},
															"nativeSrc": "9044:36:7",
															"nodeType": "YulIf",
															"src": "9044:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8896:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8927:1:7",
														"nodeType": "YulTypedName",
														"src": "8927:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8930:1:7",
														"nodeType": "YulTypedName",
														"src": "8930:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8936:3:7",
														"nodeType": "YulTypedName",
														"src": "8936:3:7",
														"type": ""
													}
												],
												"src": "8896:191:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101215760003560e01c80638ea5220f116100ad578063d72b11bd11610071578063d72b11bd146102fa578063dd62ed3e14610318578063e7b94df414610348578063f2fde38b14610366578063f887ea401461038257610121565b80638ea5220f1461025657806395d89b4114610274578063a9059cbb14610292578063c0d78655146102c2578063c6a30647146102de57610121565b8063313ce567116100f4578063313ce567146101c257806370a08231146101e0578063715018a614610210578063771a3a1d1461021a5780638da5cb5b1461023857610121565b806306fdde0314610126578063095ea7b31461014457806318160ddd1461017457806323b872dd14610192575b600080fd5b61012e6103a0565b60405161013b9190611139565b60405180910390f35b61015e600480360381019061015991906111f4565b610432565b60405161016b919061124f565b60405180910390f35b61017c610455565b6040516101899190611279565b60405180910390f35b6101ac60048036038101906101a79190611294565b61045f565b6040516101b9919061124f565b60405180910390f35b6101ca6104b1565b6040516101d79190611303565b60405180910390f35b6101fa60048036038101906101f5919061131e565b6104ba565b6040516102079190611279565b60405180910390f35b610218610502565b005b610222610516565b60405161022f9190611279565b60405180910390f35b61024061051c565b60405161024d919061135a565b60405180910390f35b61025e610546565b60405161026b919061135a565b60405180910390f35b61027c61056c565b6040516102899190611139565b60405180910390f35b6102ac60048036038101906102a791906111f4565b6105fe565b6040516102b9919061124f565b60405180910390f35b6102dc60048036038101906102d7919061131e565b610621565b005b6102f860048036038101906102f391906113a1565b61066d565b005b6103026106d0565b60405161030f919061135a565b60405180910390f35b610332600480360381019061032d91906113e1565b6106f6565b60405161033f9190611279565b60405180910390f35b61035061077d565b60405161035d919061135a565b60405180910390f35b610380600480360381019061037b919061131e565b6107a3565b005b61038a610829565b604051610397919061135a565b60405180910390f35b6060600380546103af90611450565b80601f01602080910402602001604051908101604052809291908181526020018280546103db90611450565b80156104285780601f106103fd57610100808354040283529160200191610428565b820191906000526020600020905b81548152906001019060200180831161040b57829003601f168201915b5050505050905090565b60008061043d61084f565b905061044a818585610857565b600191505092915050565b6000600254905090565b60008061046d858585610869565b905061049c8561047b61084f565b8561048d8961048861084f565b6106f6565b61049791906114b0565b610857565b6104a7858583610985565b9150509392505050565b60006012905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61050a6109b4565b6105146000610a3b565b565b60065481565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606004805461057b90611450565b80601f01602080910402602001604051908101604052809291908181526020018280546105a790611450565b80156105f45780601f106105c9576101008083540402835291602001916105f4565b820191906000526020600020905b8154815290600101906020018083116105d757829003601f168201915b5050505050905090565b60008061060c338585610869565b90506106188482610b01565b91505092915050565b6106296109b4565b80600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6106756109b4565b80600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6107ab6109b4565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361081d5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610814919061135a565b60405180910390fd5b61082681610a3b565b50565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b6108648383836001610b24565b505050565b6000600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff168061090c5750600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b156109195781905061097e565b600060646006548461092b91906114e4565b6109359190611555565b9050600081111561096e5761096d85600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683610cfb565b5b808361097a91906114b0565b9150505b9392505050565b60008061099061084f565b905061099d858285610def565b6109a8858585610cfb565b60019150509392505050565b6109bc61084f565b73ffffffffffffffffffffffffffffffffffffffff166109da61051c565b73ffffffffffffffffffffffffffffffffffffffff1614610a39576109fd61084f565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610a30919061135a565b60405180910390fd5b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080610b0c61084f565b9050610b19818585610cfb565b600191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610b965760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610b8d919061135a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c085760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610bff919061135a565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610cf5578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610cec9190611279565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d6d5760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610d64919061135a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ddf5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610dd6919061135a565b60405180910390fd5b610dea838383610e84565b505050565b6000610dfb84846106f6565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610e7e5781811015610e6e578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610e6593929190611586565b60405180910390fd5b610e7d84848484036000610b24565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ed6578060026000828254610eca91906115bd565b92505081905550610fa9565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610f62578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610f5993929190611586565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ff2578060026000828254039250508190555061103f565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161109c9190611279565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156110e35780820151818401526020810190506110c8565b60008484015250505050565b6000601f19601f8301169050919050565b600061110b826110a9565b61111581856110b4565b93506111258185602086016110c5565b61112e816110ef565b840191505092915050565b600060208201905081810360008301526111538184611100565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061118b82611160565b9050919050565b61119b81611180565b81146111a657600080fd5b50565b6000813590506111b881611192565b92915050565b6000819050919050565b6111d1816111be565b81146111dc57600080fd5b50565b6000813590506111ee816111c8565b92915050565b6000806040838503121561120b5761120a61115b565b5b6000611219858286016111a9565b925050602061122a858286016111df565b9150509250929050565b60008115159050919050565b61124981611234565b82525050565b60006020820190506112646000830184611240565b92915050565b611273816111be565b82525050565b600060208201905061128e600083018461126a565b92915050565b6000806000606084860312156112ad576112ac61115b565b5b60006112bb868287016111a9565b93505060206112cc868287016111a9565b92505060406112dd868287016111df565b9150509250925092565b600060ff82169050919050565b6112fd816112e7565b82525050565b600060208201905061131860008301846112f4565b92915050565b6000602082840312156113345761133361115b565b5b6000611342848285016111a9565b91505092915050565b61135481611180565b82525050565b600060208201905061136f600083018461134b565b92915050565b61137e81611234565b811461138957600080fd5b50565b60008135905061139b81611375565b92915050565b600080604083850312156113b8576113b761115b565b5b60006113c6858286016111a9565b92505060206113d78582860161138c565b9150509250929050565b600080604083850312156113f8576113f761115b565b5b6000611406858286016111a9565b9250506020611417858286016111a9565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061146857607f821691505b60208210810361147b5761147a611421565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006114bb826111be565b91506114c6836111be565b92508282039050818111156114de576114dd611481565b5b92915050565b60006114ef826111be565b91506114fa836111be565b9250828202611508816111be565b9150828204841483151761151f5761151e611481565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611560826111be565b915061156b836111be565b92508261157b5761157a611526565b5b828204905092915050565b600060608201905061159b600083018661134b565b6115a8602083018561126a565b6115b5604083018461126a565b949350505050565b60006115c8826111be565b91506115d3836111be565b92508282019050808211156115eb576115ea611481565b5b9291505056fea2646970667358221220494f42b9501d8285f4b158adf5d0cb0691f011d2395ec7afda8831f5140db0df64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8EA5220F GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD72B11BD GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD72B11BD EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0xE7B94DF4 EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0xF887EA40 EQ PUSH2 0x382 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x8EA5220F EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0xC0D78655 EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0xC6A30647 EQ PUSH2 0x2DE JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x771A3A1D EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x238 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x192 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x1139 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x11F4 JUMP JUMPDEST PUSH2 0x432 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x124F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17C PUSH2 0x455 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x1279 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x1294 JUMP JUMPDEST PUSH2 0x45F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0x124F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CA PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x1303 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x131E JUMP JUMPDEST PUSH2 0x4BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x1279 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x218 PUSH2 0x502 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x222 PUSH2 0x516 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x1279 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x240 PUSH2 0x51C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x135A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25E PUSH2 0x546 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x135A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27C PUSH2 0x56C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x289 SWAP2 SWAP1 PUSH2 0x1139 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x11F4 JUMP JUMPDEST PUSH2 0x5FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x124F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x131E JUMP JUMPDEST PUSH2 0x621 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x13A1 JUMP JUMPDEST PUSH2 0x66D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x302 PUSH2 0x6D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30F SWAP2 SWAP1 PUSH2 0x135A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x332 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32D SWAP2 SWAP1 PUSH2 0x13E1 JUMP JUMPDEST PUSH2 0x6F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x1279 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x350 PUSH2 0x77D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x135A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x380 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37B SWAP2 SWAP1 PUSH2 0x131E JUMP JUMPDEST PUSH2 0x7A3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x38A PUSH2 0x829 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x135A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3AF SWAP1 PUSH2 0x1450 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3DB SWAP1 PUSH2 0x1450 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x428 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x428 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x40B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x43D PUSH2 0x84F JUMP JUMPDEST SWAP1 POP PUSH2 0x44A DUP2 DUP6 DUP6 PUSH2 0x857 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x46D DUP6 DUP6 DUP6 PUSH2 0x869 JUMP JUMPDEST SWAP1 POP PUSH2 0x49C DUP6 PUSH2 0x47B PUSH2 0x84F JUMP JUMPDEST DUP6 PUSH2 0x48D DUP10 PUSH2 0x488 PUSH2 0x84F JUMP JUMPDEST PUSH2 0x6F6 JUMP JUMPDEST PUSH2 0x497 SWAP2 SWAP1 PUSH2 0x14B0 JUMP JUMPDEST PUSH2 0x857 JUMP JUMPDEST PUSH2 0x4A7 DUP6 DUP6 DUP4 PUSH2 0x985 JUMP JUMPDEST SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x50A PUSH2 0x9B4 JUMP JUMPDEST PUSH2 0x514 PUSH1 0x0 PUSH2 0xA3B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x57B SWAP1 PUSH2 0x1450 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5A7 SWAP1 PUSH2 0x1450 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5F4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5C9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5F4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5D7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x60C CALLER DUP6 DUP6 PUSH2 0x869 JUMP JUMPDEST SWAP1 POP PUSH2 0x618 DUP5 DUP3 PUSH2 0xB01 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x629 PUSH2 0x9B4 JUMP JUMPDEST DUP1 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x675 PUSH2 0x9B4 JUMP JUMPDEST DUP1 PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x7AB PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x81D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x814 SWAP2 SWAP1 PUSH2 0x135A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x826 DUP2 PUSH2 0xA3B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x864 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xB24 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x90C JUMPI POP PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x919 JUMPI DUP2 SWAP1 POP PUSH2 0x97E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x6 SLOAD DUP5 PUSH2 0x92B SWAP2 SWAP1 PUSH2 0x14E4 JUMP JUMPDEST PUSH2 0x935 SWAP2 SWAP1 PUSH2 0x1555 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x96E JUMPI PUSH2 0x96D DUP6 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0xCFB JUMP JUMPDEST JUMPDEST DUP1 DUP4 PUSH2 0x97A SWAP2 SWAP1 PUSH2 0x14B0 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x990 PUSH2 0x84F JUMP JUMPDEST SWAP1 POP PUSH2 0x99D DUP6 DUP3 DUP6 PUSH2 0xDEF JUMP JUMPDEST PUSH2 0x9A8 DUP6 DUP6 DUP6 PUSH2 0xCFB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x9BC PUSH2 0x84F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9DA PUSH2 0x51C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA39 JUMPI PUSH2 0x9FD PUSH2 0x84F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA30 SWAP2 SWAP1 PUSH2 0x135A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB0C PUSH2 0x84F JUMP JUMPDEST SWAP1 POP PUSH2 0xB19 DUP2 DUP6 DUP6 PUSH2 0xCFB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB96 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB8D SWAP2 SWAP1 PUSH2 0x135A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC08 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBFF SWAP2 SWAP1 PUSH2 0x135A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xCF5 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xCEC SWAP2 SWAP1 PUSH2 0x1279 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD6D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD64 SWAP2 SWAP1 PUSH2 0x135A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDDF JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD6 SWAP2 SWAP1 PUSH2 0x135A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDEA DUP4 DUP4 DUP4 PUSH2 0xE84 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDFB DUP5 DUP5 PUSH2 0x6F6 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xE7E JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xE6E JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE65 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1586 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE7D DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0xB24 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xED6 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xECA SWAP2 SWAP1 PUSH2 0x15BD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xFA9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xF62 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF59 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1586 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFF2 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x103F JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x109C SWAP2 SWAP1 PUSH2 0x1279 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10E3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x10C8 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x110B DUP3 PUSH2 0x10A9 JUMP JUMPDEST PUSH2 0x1115 DUP2 DUP6 PUSH2 0x10B4 JUMP JUMPDEST SWAP4 POP PUSH2 0x1125 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x112E DUP2 PUSH2 0x10EF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1153 DUP2 DUP5 PUSH2 0x1100 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x118B DUP3 PUSH2 0x1160 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x119B DUP2 PUSH2 0x1180 JUMP JUMPDEST DUP2 EQ PUSH2 0x11A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11B8 DUP2 PUSH2 0x1192 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11D1 DUP2 PUSH2 0x11BE JUMP JUMPDEST DUP2 EQ PUSH2 0x11DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11EE DUP2 PUSH2 0x11C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x120B JUMPI PUSH2 0x120A PUSH2 0x115B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1219 DUP6 DUP3 DUP7 ADD PUSH2 0x11A9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x122A DUP6 DUP3 DUP7 ADD PUSH2 0x11DF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1249 DUP2 PUSH2 0x1234 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1264 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1240 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1273 DUP2 PUSH2 0x11BE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x128E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x126A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12AD JUMPI PUSH2 0x12AC PUSH2 0x115B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12BB DUP7 DUP3 DUP8 ADD PUSH2 0x11A9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x12CC DUP7 DUP3 DUP8 ADD PUSH2 0x11A9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x12DD DUP7 DUP3 DUP8 ADD PUSH2 0x11DF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12FD DUP2 PUSH2 0x12E7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1318 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1334 JUMPI PUSH2 0x1333 PUSH2 0x115B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1342 DUP5 DUP3 DUP6 ADD PUSH2 0x11A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1354 DUP2 PUSH2 0x1180 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x136F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x134B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x137E DUP2 PUSH2 0x1234 JUMP JUMPDEST DUP2 EQ PUSH2 0x1389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x139B DUP2 PUSH2 0x1375 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13B8 JUMPI PUSH2 0x13B7 PUSH2 0x115B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13C6 DUP6 DUP3 DUP7 ADD PUSH2 0x11A9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13D7 DUP6 DUP3 DUP7 ADD PUSH2 0x138C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13F8 JUMPI PUSH2 0x13F7 PUSH2 0x115B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1406 DUP6 DUP3 DUP7 ADD PUSH2 0x11A9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1417 DUP6 DUP3 DUP7 ADD PUSH2 0x11A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1468 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x147B JUMPI PUSH2 0x147A PUSH2 0x1421 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x14BB DUP3 PUSH2 0x11BE JUMP JUMPDEST SWAP2 POP PUSH2 0x14C6 DUP4 PUSH2 0x11BE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x14DE JUMPI PUSH2 0x14DD PUSH2 0x1481 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14EF DUP3 PUSH2 0x11BE JUMP JUMPDEST SWAP2 POP PUSH2 0x14FA DUP4 PUSH2 0x11BE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1508 DUP2 PUSH2 0x11BE JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x151F JUMPI PUSH2 0x151E PUSH2 0x1481 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1560 DUP3 PUSH2 0x11BE JUMP JUMPDEST SWAP2 POP PUSH2 0x156B DUP4 PUSH2 0x11BE JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x157B JUMPI PUSH2 0x157A PUSH2 0x1526 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x159B PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x134B JUMP JUMPDEST PUSH2 0x15A8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x126A JUMP JUMPDEST PUSH2 0x15B5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x126A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15C8 DUP3 PUSH2 0x11BE JUMP JUMPDEST SWAP2 POP PUSH2 0x15D3 DUP4 PUSH2 0x11BE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x15EB JUMPI PUSH2 0x15EA PUSH2 0x1481 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBHASH 0x4F TIMESTAMP 0xB9 POP SAR DUP3 DUP6 DELEGATECALL 0xB1 PC 0xAD CREATE2 0xD0 0xCB MOD SWAP2 CREATE GT 0xD2 CODECOPY MCOPY 0xC7 0xAF 0xDA DUP9 BALANCE CREATE2 EQ 0xD 0xB0 0xDF PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "167:2195:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3979:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2830:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2029:331:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2688:82:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2985:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;214:26:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;304:24:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1804:219:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1159:88;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1253:130;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;270:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3532:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;334:29:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;427:21:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1760:89:2;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;4068:13;4084:12;:10;:12::i;:::-;4068:28;;4106:31;4115:5;4122:7;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;:::o;2830:97::-;2882:7;2908:12;;2901:19;;2830:97;:::o;2029:331:6:-;2127:4;2143:19;2165:37;2176:6;2184:9;2195:6;2165:10;:37::i;:::-;2143:59;;2212:74;2221:6;2229:12;:10;:12::i;:::-;2278:6;2243:31;2253:6;2261:12;:10;:12::i;:::-;2243:9;:31::i;:::-;:42;;;;:::i;:::-;2212:8;:74::i;:::-;2303:50;2322:6;2330:9;2341:11;2303:18;:50::i;:::-;2296:57;;;2029:331;;;;;:::o;2688:82:2:-;2737:5;2761:2;2754:9;;2688:82;:::o;2985:116::-;3050:7;3076:9;:18;3086:7;3076:18;;;;;;;;;;;;;;;;3069:25;;2985:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;214:26:6:-;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;304:24:6:-;;;;;;;;;;;;;:::o;1962:93:2:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;1804:219:6:-;1882:4;1898:19;1920:41;1931:10;1943:9;1954:6;1920:10;:41::i;:::-;1898:63;;1978:38;1993:9;2004:11;1978:14;:38::i;:::-;1971:45;;;1804:219;;;;:::o;1159:88::-;1531:13:0;:11;:13::i;:::-;1233:7:6::1;1224:6;;:16;;;;;;;;;;;;;;;;;;1159:88:::0;:::o;1253:130::-;1531:13:0;:11;:13::i;:::-;1368:8:6::1;1338:18;:27;1357:7;1338:27;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;1253:130:::0;;:::o;270:28::-;;;;;;;;;;;;;:::o;3532:140:2:-;3612:7;3638:11;:18;3650:5;3638:18;;;;;;;;;;;;;;;:27;3657:7;3638:27;;;;;;;;;;;;;;;;3631:34;;3532:140;;;;:::o;334:29:6:-;;;;;;;;;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;427:21:6:-;;;;;;;;;;;;;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8707:128:2:-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;:::-;8707:128;;;:::o;1389:409:6:-;1478:7;1501:18;:26;1520:6;1501:26;;;;;;;;;;;;;;;;;;;;;;;;;:59;;;;1531:18;:29;1550:9;1531:29;;;;;;;;;;;;;;;;;;;;;;;;;1501:59;1497:103;;;1583:6;1576:13;;;;1497:103;1609:17;1650:3;1639:7;;1630:6;:16;;;;:::i;:::-;1629:24;;;;:::i;:::-;1609:44;;1679:1;1667:9;:13;1663:94;;;1696:50;1712:6;1720:14;;;;;;;;;;;1736:9;1696:15;:50::i;:::-;1663:94;1782:9;1773:6;:18;;;;:::i;:::-;1766:25;;;1389:409;;;;;;:::o;4757:244:2:-;4844:4;4860:15;4878:12;:10;:12::i;:::-;4860:30;;4900:37;4916:4;4922:7;4931:5;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;4990:4;4983:11;;;4757:244;;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;3296:178:2:-;3365:4;3381:13;3397:12;:10;:12::i;:::-;3381:28;;3419:27;3429:5;3436:2;3440:5;3419:9;:27::i;:::-;3463:4;3456:11;;;3296:178;;;;:::o;9682:432::-;9811:1;9794:19;;:5;:19;;;9790:89;;9865:1;9836:32;;;;;;;;;;;:::i;:::-;;;;;;;;9790:89;9911:1;9892:21;;:7;:21;;;9888:90;;9964:1;9936:31;;;;;;;;;;;:::i;:::-;;;;;;;;9888:90;10017:5;9987:11;:18;9999:5;9987:18;;;;;;;;;;;;;;;:27;10006:7;9987:27;;;;;;;;;;;;;;;:35;;;;10036:9;10032:76;;;10082:7;10066:31;;10075:5;10066:31;;;10091:5;10066:31;;;;;;:::i;:::-;;;;;;;;10032:76;9682:432;;;;:::o;5374:300::-;5473:1;5457:18;;:4;:18;;;5453:86;;5525:1;5498:30;;;;;;;;;;;:::i;:::-;;;;;;;;5453:86;5566:1;5552:16;;:2;:16;;;5548:86;;5620:1;5591:32;;;;;;;;;;;:::i;:::-;;;;;;;;5548:86;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;:::-;5374:300;;;:::o;10396:476::-;10495:24;10522:25;10532:5;10539:7;10522:9;:25::i;:::-;10495:52;;10580:17;10561:16;:36;10557:309;;;10636:5;10617:16;:24;10613:130;;;10695:7;10704:16;10722:5;10668:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10613:130;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10557:309;10485:387;10396:476;;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:248::-;369:1;379:113;393:6;390:1;387:13;379:113;;;478:1;473:3;469:11;463:18;459:1;454:3;450:11;443:39;415:2;412:1;408:10;403:15;;379:113;;;526:1;517:6;512:3;508:16;501:27;349:186;287:248;;;:::o;541:102::-;582:6;633:2;629:7;624:2;617:5;613:14;609:28;599:38;;541:102;;;:::o;649:377::-;737:3;765:39;798:5;765:39;:::i;:::-;820:71;884:6;879:3;820:71;:::i;:::-;813:78;;900:65;958:6;953:3;946:4;939:5;935:16;900:65;:::i;:::-;990:29;1012:6;990:29;:::i;:::-;985:3;981:39;974:46;;741:285;649:377;;;;:::o;1032:313::-;1145:4;1183:2;1172:9;1168:18;1160:26;;1232:9;1226:4;1222:20;1218:1;1207:9;1203:17;1196:47;1260:78;1333:4;1324:6;1260:78;:::i;:::-;1252:86;;1032:313;;;;:::o;1432:117::-;1541:1;1538;1531:12;1678:126;1715:7;1755:42;1748:5;1744:54;1733:65;;1678:126;;;:::o;1810:96::-;1847:7;1876:24;1894:5;1876:24;:::i;:::-;1865:35;;1810:96;;;:::o;1912:122::-;1985:24;2003:5;1985:24;:::i;:::-;1978:5;1975:35;1965:63;;2024:1;2021;2014:12;1965:63;1912:122;:::o;2040:139::-;2086:5;2124:6;2111:20;2102:29;;2140:33;2167:5;2140:33;:::i;:::-;2040:139;;;;:::o;2185:77::-;2222:7;2251:5;2240:16;;2185:77;;;:::o;2268:122::-;2341:24;2359:5;2341:24;:::i;:::-;2334:5;2331:35;2321:63;;2380:1;2377;2370:12;2321:63;2268:122;:::o;2396:139::-;2442:5;2480:6;2467:20;2458:29;;2496:33;2523:5;2496:33;:::i;:::-;2396:139;;;;:::o;2541:474::-;2609:6;2617;2666:2;2654:9;2645:7;2641:23;2637:32;2634:119;;;2672:79;;:::i;:::-;2634:119;2792:1;2817:53;2862:7;2853:6;2842:9;2838:22;2817:53;:::i;:::-;2807:63;;2763:117;2919:2;2945:53;2990:7;2981:6;2970:9;2966:22;2945:53;:::i;:::-;2935:63;;2890:118;2541:474;;;;;:::o;3021:90::-;3055:7;3098:5;3091:13;3084:21;3073:32;;3021:90;;;:::o;3117:109::-;3198:21;3213:5;3198:21;:::i;:::-;3193:3;3186:34;3117:109;;:::o;3232:210::-;3319:4;3357:2;3346:9;3342:18;3334:26;;3370:65;3432:1;3421:9;3417:17;3408:6;3370:65;:::i;:::-;3232:210;;;;:::o;3448:118::-;3535:24;3553:5;3535:24;:::i;:::-;3530:3;3523:37;3448:118;;:::o;3572:222::-;3665:4;3703:2;3692:9;3688:18;3680:26;;3716:71;3784:1;3773:9;3769:17;3760:6;3716:71;:::i;:::-;3572:222;;;;:::o;3800:619::-;3877:6;3885;3893;3942:2;3930:9;3921:7;3917:23;3913:32;3910:119;;;3948:79;;:::i;:::-;3910:119;4068:1;4093:53;4138:7;4129:6;4118:9;4114:22;4093:53;:::i;:::-;4083:63;;4039:117;4195:2;4221:53;4266:7;4257:6;4246:9;4242:22;4221:53;:::i;:::-;4211:63;;4166:118;4323:2;4349:53;4394:7;4385:6;4374:9;4370:22;4349:53;:::i;:::-;4339:63;;4294:118;3800:619;;;;;:::o;4425:86::-;4460:7;4500:4;4493:5;4489:16;4478:27;;4425:86;;;:::o;4517:112::-;4600:22;4616:5;4600:22;:::i;:::-;4595:3;4588:35;4517:112;;:::o;4635:214::-;4724:4;4762:2;4751:9;4747:18;4739:26;;4775:67;4839:1;4828:9;4824:17;4815:6;4775:67;:::i;:::-;4635:214;;;;:::o;4855:329::-;4914:6;4963:2;4951:9;4942:7;4938:23;4934:32;4931:119;;;4969:79;;:::i;:::-;4931:119;5089:1;5114:53;5159:7;5150:6;5139:9;5135:22;5114:53;:::i;:::-;5104:63;;5060:117;4855:329;;;;:::o;5190:118::-;5277:24;5295:5;5277:24;:::i;:::-;5272:3;5265:37;5190:118;;:::o;5314:222::-;5407:4;5445:2;5434:9;5430:18;5422:26;;5458:71;5526:1;5515:9;5511:17;5502:6;5458:71;:::i;:::-;5314:222;;;;:::o;5542:116::-;5612:21;5627:5;5612:21;:::i;:::-;5605:5;5602:32;5592:60;;5648:1;5645;5638:12;5592:60;5542:116;:::o;5664:133::-;5707:5;5745:6;5732:20;5723:29;;5761:30;5785:5;5761:30;:::i;:::-;5664:133;;;;:::o;5803:468::-;5868:6;5876;5925:2;5913:9;5904:7;5900:23;5896:32;5893:119;;;5931:79;;:::i;:::-;5893:119;6051:1;6076:53;6121:7;6112:6;6101:9;6097:22;6076:53;:::i;:::-;6066:63;;6022:117;6178:2;6204:50;6246:7;6237:6;6226:9;6222:22;6204:50;:::i;:::-;6194:60;;6149:115;5803:468;;;;;:::o;6277:474::-;6345:6;6353;6402:2;6390:9;6381:7;6377:23;6373:32;6370:119;;;6408:79;;:::i;:::-;6370:119;6528:1;6553:53;6598:7;6589:6;6578:9;6574:22;6553:53;:::i;:::-;6543:63;;6499:117;6655:2;6681:53;6726:7;6717:6;6706:9;6702:22;6681:53;:::i;:::-;6671:63;;6626:118;6277:474;;;;;:::o;6757:180::-;6805:77;6802:1;6795:88;6902:4;6899:1;6892:15;6926:4;6923:1;6916:15;6943:320;6987:6;7024:1;7018:4;7014:12;7004:22;;7071:1;7065:4;7061:12;7092:18;7082:81;;7148:4;7140:6;7136:17;7126:27;;7082:81;7210:2;7202:6;7199:14;7179:18;7176:38;7173:84;;7229:18;;:::i;:::-;7173:84;6994:269;6943:320;;;:::o;7269:180::-;7317:77;7314:1;7307:88;7414:4;7411:1;7404:15;7438:4;7435:1;7428:15;7455:194;7495:4;7515:20;7533:1;7515:20;:::i;:::-;7510:25;;7549:20;7567:1;7549:20;:::i;:::-;7544:25;;7593:1;7590;7586:9;7578:17;;7617:1;7611:4;7608:11;7605:37;;;7622:18;;:::i;:::-;7605:37;7455:194;;;;:::o;7655:410::-;7695:7;7718:20;7736:1;7718:20;:::i;:::-;7713:25;;7752:20;7770:1;7752:20;:::i;:::-;7747:25;;7807:1;7804;7800:9;7829:30;7847:11;7829:30;:::i;:::-;7818:41;;8008:1;7999:7;7995:15;7992:1;7989:22;7969:1;7962:9;7942:83;7919:139;;8038:18;;:::i;:::-;7919:139;7703:362;7655:410;;;;:::o;8071:180::-;8119:77;8116:1;8109:88;8216:4;8213:1;8206:15;8240:4;8237:1;8230:15;8257:185;8297:1;8314:20;8332:1;8314:20;:::i;:::-;8309:25;;8348:20;8366:1;8348:20;:::i;:::-;8343:25;;8387:1;8377:35;;8392:18;;:::i;:::-;8377:35;8434:1;8431;8427:9;8422:14;;8257:185;;;;:::o;8448:442::-;8597:4;8635:2;8624:9;8620:18;8612:26;;8648:71;8716:1;8705:9;8701:17;8692:6;8648:71;:::i;:::-;8729:72;8797:2;8786:9;8782:18;8773:6;8729:72;:::i;:::-;8811;8879:2;8868:9;8864:18;8855:6;8811:72;:::i;:::-;8448:442;;;;;;:::o;8896:191::-;8936:3;8955:20;8973:1;8955:20;:::i;:::-;8950:25;;8989:20;9007:1;8989:20;:::i;:::-;8984:25;;9032:1;9029;9025:9;9018:16;;9053:3;9050:1;9047:10;9044:36;;;9060:18;;:::i;:::-;9044:36;8896:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1134200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2886",
								"decimals()": "366",
								"devWallet()": "2537",
								"donationWallet()": "2580",
								"excludeFromTax(address,bool)": "infinite",
								"name()": "infinite",
								"owner()": "2633",
								"renounceOwnership()": "infinite",
								"reserveWallet()": "2536",
								"router()": "2624",
								"setRouter(address)": "infinite",
								"symbol()": "infinite",
								"taxRate()": "2518",
								"totalSupply()": "2505",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_handleTax(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 167,
									"end": 2362,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 167,
									"end": 2362,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 167,
									"end": 2362,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 239,
									"end": 240,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 214,
									"end": 240,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 214,
									"end": 240,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 455,
									"end": 1153,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 455,
									"end": 1153,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 455,
									"end": 1153,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 455,
									"end": 1153,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 455,
									"end": 1153,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 455,
									"end": 1153,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 455,
									"end": 1153,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 455,
									"end": 1153,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 455,
									"end": 1153,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 455,
									"end": 1153,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 455,
									"end": 1153,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 455,
									"end": 1153,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 455,
									"end": 1153,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 455,
									"end": 1153,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 455,
									"end": 1153,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 455,
									"end": 1153,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 455,
									"end": 1153,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 455,
									"end": 1153,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 455,
									"end": 1153,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 455,
									"end": 1153,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 455,
									"end": 1153,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 455,
									"end": 1153,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 455,
									"end": 1153,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 455,
									"end": 1153,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 455,
									"end": 1153,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 455,
									"end": 1153,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 455,
									"end": 1153,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 455,
									"end": 1153,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 455,
									"end": 1153,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 455,
									"end": 1153,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 455,
									"end": 1153,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 455,
									"end": 1153,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 455,
									"end": 1153,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 455,
									"end": 1153,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 455,
									"end": 1153,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 557,
									"end": 567,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "F"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "576F726C642057617220546F6B656E0000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "5757000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 579,
									"end": 598,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 621,
									"end": 631,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 621,
									"end": 629,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 621,
									"end": 629,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 621,
									"end": 629,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 621,
									"end": 631,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 621,
									"end": 631,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 621,
									"end": 631,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 621,
									"end": 631,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 621,
									"end": 631,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 615,
									"end": 617,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 615,
									"end": 631,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 615,
									"end": 631,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 615,
									"end": 631,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 615,
									"end": 631,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 615,
									"end": 631,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 615,
									"end": 631,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 615,
									"end": 631,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 601,
									"end": 612,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "5F5E100"
								},
								{
									"begin": 601,
									"end": 631,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 601,
									"end": 631,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 601,
									"end": 631,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 601,
									"end": 631,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 601,
									"end": 631,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 601,
									"end": 631,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 601,
									"end": 631,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 579,
									"end": 631,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 579,
									"end": 631,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 642,
									"end": 659,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 683,
									"end": 686,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 677,
									"end": 679,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "F"
								},
								{
									"begin": 663,
									"end": 674,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 663,
									"end": 679,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 663,
									"end": 679,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 663,
									"end": 679,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 663,
									"end": 679,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 663,
									"end": 679,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 663,
									"end": 679,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 663,
									"end": 679,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 662,
									"end": 686,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 662,
									"end": 686,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 662,
									"end": 686,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 662,
									"end": 686,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 662,
									"end": 686,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 662,
									"end": 686,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 662,
									"end": 686,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 642,
									"end": 686,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 642,
									"end": 686,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 717,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 734,
									"end": 743,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 720,
									"end": 731,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 720,
									"end": 743,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 720,
									"end": 743,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 720,
									"end": 743,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 720,
									"end": 743,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 720,
									"end": 743,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 720,
									"end": 743,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 720,
									"end": 743,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 696,
									"end": 743,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 696,
									"end": 743,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 770,
									"end": 778,
									"modifierDepth": 2,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 754,
									"end": 767,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 754,
									"end": 767,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 754,
									"end": 778,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 754,
									"end": 778,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 754,
									"end": 778,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 754,
									"end": 778,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 754,
									"end": 778,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 754,
									"end": 778,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 754,
									"end": 778,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 754,
									"end": 778,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 754,
									"end": 778,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 754,
									"end": 778,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 754,
									"end": 778,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 754,
									"end": 778,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 754,
									"end": 778,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 754,
									"end": 778,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 754,
									"end": 778,
									"modifierDepth": 2,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 754,
									"end": 778,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 754,
									"end": 778,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 754,
									"end": 778,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 804,
									"modifierDepth": 2,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 788,
									"end": 797,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 788,
									"end": 797,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 788,
									"end": 804,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 788,
									"end": 804,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 788,
									"end": 804,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 788,
									"end": 804,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 788,
									"end": 804,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 788,
									"end": 804,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 788,
									"end": 804,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 788,
									"end": 804,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 788,
									"end": 804,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 788,
									"end": 804,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 788,
									"end": 804,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 788,
									"end": 804,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 788,
									"end": 804,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 788,
									"end": 804,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 788,
									"end": 804,
									"modifierDepth": 2,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 788,
									"end": 804,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 788,
									"end": 804,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 788,
									"end": 804,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 831,
									"end": 840,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 814,
									"end": 828,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 814,
									"end": 828,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 814,
									"end": 840,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 814,
									"end": 840,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 814,
									"end": 840,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 814,
									"end": 840,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 814,
									"end": 840,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 814,
									"end": 840,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 814,
									"end": 840,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 814,
									"end": 840,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 814,
									"end": 840,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 814,
									"end": 840,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 814,
									"end": 840,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 814,
									"end": 840,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 814,
									"end": 840,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 814,
									"end": 840,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 814,
									"end": 840,
									"modifierDepth": 2,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 814,
									"end": 840,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 814,
									"end": 840,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 814,
									"end": 840,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 851,
									"end": 878,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 857,
									"end": 866,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 857,
									"end": 866,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 857,
									"end": 866,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 857,
									"end": 866,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 857,
									"end": 866,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 857,
									"end": 866,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 857,
									"end": 866,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 857,
									"end": 866,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 857,
									"end": 866,
									"modifierDepth": 2,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 857,
									"end": 866,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 857,
									"end": 866,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 868,
									"end": 877,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 851,
									"end": 856,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 851,
									"end": 856,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 851,
									"end": 856,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 851,
									"end": 878,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 851,
									"end": 878,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 851,
									"end": 878,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 851,
									"end": 878,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 851,
									"end": 878,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 888,
									"end": 923,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 894,
									"end": 907,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 894,
									"end": 907,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 894,
									"end": 907,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 894,
									"end": 907,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 894,
									"end": 907,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 894,
									"end": 907,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 894,
									"end": 907,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 894,
									"end": 907,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 894,
									"end": 907,
									"modifierDepth": 2,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 894,
									"end": 907,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 894,
									"end": 907,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 909,
									"end": 922,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 888,
									"end": 893,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 888,
									"end": 893,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 888,
									"end": 893,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 888,
									"end": 923,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 888,
									"end": 923,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 888,
									"end": 923,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 888,
									"end": 923,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 888,
									"end": 923,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 995,
									"end": 999,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 962,
									"end": 980,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 962,
									"end": 992,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 981,
									"end": 991,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 962,
									"end": 992,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 962,
									"end": 992,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 962,
									"end": 992,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 962,
									"end": 992,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 962,
									"end": 992,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 962,
									"end": 992,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 962,
									"end": 992,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 962,
									"end": 992,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 962,
									"end": 992,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 962,
									"end": 992,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 962,
									"end": 992,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 962,
									"end": 992,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 962,
									"end": 992,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 962,
									"end": 992,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 962,
									"end": 992,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 962,
									"end": 992,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 962,
									"end": 999,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 962,
									"end": 999,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 962,
									"end": 999,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 962,
									"end": 999,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 962,
									"end": 999,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 962,
									"end": 999,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 962,
									"end": 999,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 962,
									"end": 999,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 962,
									"end": 999,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 962,
									"end": 999,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 962,
									"end": 999,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 962,
									"end": 999,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 962,
									"end": 999,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 962,
									"end": 999,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 962,
									"end": 999,
									"modifierDepth": 2,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 962,
									"end": 999,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 962,
									"end": 999,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 962,
									"end": 999,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1045,
									"end": 1049,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1009,
									"end": 1027,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 1009,
									"end": 1042,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1028,
									"end": 1041,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 1028,
									"end": 1041,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1028,
									"end": 1041,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1028,
									"end": 1041,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1028,
									"end": 1041,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1028,
									"end": 1041,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1028,
									"end": 1041,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1028,
									"end": 1041,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1028,
									"end": 1041,
									"modifierDepth": 2,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 1028,
									"end": 1041,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1028,
									"end": 1041,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1009,
									"end": 1042,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1009,
									"end": 1042,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1009,
									"end": 1042,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1009,
									"end": 1042,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1009,
									"end": 1042,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1009,
									"end": 1042,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1009,
									"end": 1042,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1009,
									"end": 1042,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1009,
									"end": 1042,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1009,
									"end": 1042,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1009,
									"end": 1042,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1009,
									"end": 1042,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1009,
									"end": 1042,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1009,
									"end": 1042,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1009,
									"end": 1042,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 1009,
									"end": 1042,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1009,
									"end": 1049,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1009,
									"end": 1049,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1009,
									"end": 1049,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1009,
									"end": 1049,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1009,
									"end": 1049,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1009,
									"end": 1049,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 1009,
									"end": 1049,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1009,
									"end": 1049,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1009,
									"end": 1049,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1009,
									"end": 1049,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1009,
									"end": 1049,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1009,
									"end": 1049,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1009,
									"end": 1049,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1009,
									"end": 1049,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1009,
									"end": 1049,
									"modifierDepth": 2,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1009,
									"end": 1049,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1009,
									"end": 1049,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1009,
									"end": 1049,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1091,
									"end": 1095,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1059,
									"end": 1077,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 1059,
									"end": 1088,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1078,
									"end": 1087,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1078,
									"end": 1087,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1078,
									"end": 1087,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1078,
									"end": 1087,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1078,
									"end": 1087,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1078,
									"end": 1087,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1078,
									"end": 1087,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1078,
									"end": 1087,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1078,
									"end": 1087,
									"modifierDepth": 2,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 1078,
									"end": 1087,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1078,
									"end": 1087,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1088,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1059,
									"end": 1088,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1088,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1059,
									"end": 1088,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1088,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1088,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1088,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1059,
									"end": 1088,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1088,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1088,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1088,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1088,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1059,
									"end": 1088,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1088,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1059,
									"end": 1088,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1088,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1059,
									"end": 1095,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1059,
									"end": 1095,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1095,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1095,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1095,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1095,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 1059,
									"end": 1095,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1095,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1095,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1095,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1095,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1095,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1095,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1095,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1095,
									"modifierDepth": 2,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1095,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1095,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1095,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1142,
									"end": 1146,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1105,
									"end": 1123,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 1105,
									"end": 1139,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1124,
									"end": 1138,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1124,
									"end": 1138,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1124,
									"end": 1138,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1124,
									"end": 1138,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1124,
									"end": 1138,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1124,
									"end": 1138,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1124,
									"end": 1138,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1124,
									"end": 1138,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1124,
									"end": 1138,
									"modifierDepth": 2,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 1124,
									"end": 1138,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1124,
									"end": 1138,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1139,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1105,
									"end": 1139,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1139,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1105,
									"end": 1139,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1139,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1139,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1139,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1105,
									"end": 1139,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1139,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1139,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1139,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1139,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1105,
									"end": 1139,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1139,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1105,
									"end": 1139,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1139,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1105,
									"end": 1146,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1105,
									"end": 1146,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1146,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1146,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1146,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1146,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 1105,
									"end": 1146,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1146,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1146,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1146,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1146,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1146,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1146,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1146,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1146,
									"modifierDepth": 2,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1146,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1146,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1146,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 569,
									"end": 1153,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 569,
									"end": 1153,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 569,
									"end": 1153,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 455,
									"end": 1153,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 455,
									"end": 1153,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 455,
									"end": 1153,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 167,
									"end": 2362,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 167,
									"end": 2362,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2688,
									"end": 2770,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 2688,
									"end": 2770,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2737,
									"end": 2742,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2761,
									"end": 2763,
									"name": "PUSH",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 2754,
									"end": 2763,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2754,
									"end": 2763,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2688,
									"end": 2770,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2688,
									"end": 2770,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7529,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7509,
									"end": 7516,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7582,
									"end": 7583,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 7553,
									"end": 7585,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "tag",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 7621,
									"end": 7622,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7625,
									"end": 7632,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7634,
									"end": 7639,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "tag",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7439,
									"end": 7647,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "tag",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6094,
									"end": 6095,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6078,
									"end": 6082,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6230,
									"end": 6235,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6214,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 6214,
									"end": 6235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "tag",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "tag",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6266,
									"end": 6285,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6298,
									"end": 6302,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6266,
									"end": 6303,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6266,
									"end": 6303,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6335,
									"end": 6340,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6321,
									"end": 6332,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6321,
									"end": 6340,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6392,
									"end": 6396,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6398,
									"end": 6409,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6411,
									"end": 6416,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 6367,
									"end": 6417,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "tag",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "tag",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6584,
									"end": 6589,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6581,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6589,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6561,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6562,
									"end": 6566,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6252,
									"end": 6614,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "tag",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6642,
									"end": 6643,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6628,
									"end": 6630,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6807,
									"end": 6812,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6803,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6791,
									"end": 6803,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "tag",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7019,
									"end": 7024,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7011,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7012,
									"end": 7014,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "tag",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7079,
									"end": 7081,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7077,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7083,
									"end": 7088,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 7064,
									"end": 7089,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "tag",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 933,
									"end": 939,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 941,
									"end": 947,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 949,
									"end": 955,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 998,
									"end": 1000,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 986,
									"end": 995,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 977,
									"end": 984,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 973,
									"end": 996,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 969,
									"end": 1001,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 1004,
									"end": 1083,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "tag",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "tag",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1124,
									"end": 1125,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 1205,
									"end": 1212,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1196,
									"end": 1202,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1185,
									"end": 1194,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1181,
									"end": 1203,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 1149,
									"end": 1213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "tag",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1139,
									"end": 1213,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1139,
									"end": 1213,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1095,
									"end": 1223,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1262,
									"end": 1264,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 1344,
									"end": 1351,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1335,
									"end": 1341,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1324,
									"end": 1333,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1320,
									"end": 1342,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 1288,
									"end": 1352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "tag",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1278,
									"end": 1352,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1278,
									"end": 1352,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1233,
									"end": 1362,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1401,
									"end": 1403,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 1483,
									"end": 1490,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1474,
									"end": 1480,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1472,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1459,
									"end": 1481,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 1427,
									"end": 1491,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "tag",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 1491,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 1491,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1372,
									"end": 1501,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1508,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1514,
									"end": 1613,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 1514,
									"end": 1613,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1566,
									"end": 1572,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1600,
									"end": 1605,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1594,
									"end": 1606,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1584,
									"end": 1606,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1584,
									"end": 1606,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1514,
									"end": 1613,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1514,
									"end": 1613,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1514,
									"end": 1613,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1514,
									"end": 1613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1619,
									"end": 1799,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1619,
									"end": 1799,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1667,
									"end": 1744,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1664,
									"end": 1665,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1657,
									"end": 1745,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1764,
									"end": 1768,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1761,
									"end": 1762,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1754,
									"end": 1769,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1788,
									"end": 1792,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1785,
									"end": 1786,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1778,
									"end": 1793,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1805,
									"end": 1985,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 1805,
									"end": 1985,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1853,
									"end": 1930,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1850,
									"end": 1851,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1843,
									"end": 1931,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1950,
									"end": 1954,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1947,
									"end": 1948,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1940,
									"end": 1955,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1974,
									"end": 1978,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1971,
									"end": 1972,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1964,
									"end": 1979,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1991,
									"end": 2311,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 1991,
									"end": 2311,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2035,
									"end": 2041,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2072,
									"end": 2073,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 2066,
									"end": 2070,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2062,
									"end": 2074,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 2052,
									"end": 2074,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2052,
									"end": 2074,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2119,
									"end": 2120,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2113,
									"end": 2117,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2109,
									"end": 2121,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2140,
									"end": 2158,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2130,
									"end": 2211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 2130,
									"end": 2211,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2196,
									"end": 2200,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 2188,
									"end": 2194,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2184,
									"end": 2201,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2174,
									"end": 2201,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2174,
									"end": 2201,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2130,
									"end": 2211,
									"name": "tag",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 2130,
									"end": 2211,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2258,
									"end": 2260,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2250,
									"end": 2256,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2247,
									"end": 2261,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2227,
									"end": 2245,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2224,
									"end": 2262,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 2221,
									"end": 2305,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 2221,
									"end": 2305,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2277,
									"end": 2295,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 2277,
									"end": 2295,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 2277,
									"end": 2295,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2277,
									"end": 2295,
									"name": "tag",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 2277,
									"end": 2295,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2221,
									"end": 2305,
									"name": "tag",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 2221,
									"end": 2305,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2042,
									"end": 2311,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1991,
									"end": 2311,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1991,
									"end": 2311,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1991,
									"end": 2311,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1991,
									"end": 2311,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2317,
									"end": 2458,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 2317,
									"end": 2458,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2366,
									"end": 2370,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2389,
									"end": 2392,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2381,
									"end": 2392,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2381,
									"end": 2392,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2412,
									"end": 2415,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2409,
									"end": 2410,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2402,
									"end": 2416,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2446,
									"end": 2450,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2443,
									"end": 2444,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2433,
									"end": 2451,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 2425,
									"end": 2451,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2425,
									"end": 2451,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2317,
									"end": 2458,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2317,
									"end": 2458,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2317,
									"end": 2458,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2317,
									"end": 2458,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2464,
									"end": 2557,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 2464,
									"end": 2557,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2501,
									"end": 2507,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2548,
									"end": 2550,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2543,
									"end": 2545,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2536,
									"end": 2541,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2532,
									"end": 2546,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2528,
									"end": 2551,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 2518,
									"end": 2551,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2518,
									"end": 2551,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2464,
									"end": 2557,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2464,
									"end": 2557,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2464,
									"end": 2557,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2464,
									"end": 2557,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2563,
									"end": 2670,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 2563,
									"end": 2670,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2607,
									"end": 2615,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2657,
									"end": 2662,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2651,
									"end": 2655,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2647,
									"end": 2663,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2626,
									"end": 2663,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2626,
									"end": 2663,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2563,
									"end": 2670,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2563,
									"end": 2670,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2563,
									"end": 2670,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2563,
									"end": 2670,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2563,
									"end": 2670,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2676,
									"end": 3069,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 2676,
									"end": 3069,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2745,
									"end": 2751,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2795,
									"end": 2796,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 2783,
									"end": 2793,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2779,
									"end": 2797,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2818,
									"end": 2915,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 2848,
									"end": 2914,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2837,
									"end": 2846,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2818,
									"end": 2915,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 2818,
									"end": 2915,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2818,
									"end": 2915,
									"name": "tag",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 2818,
									"end": 2915,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2936,
									"end": 2975,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 2966,
									"end": 2974,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2955,
									"end": 2964,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2936,
									"end": 2975,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 2936,
									"end": 2975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2936,
									"end": 2975,
									"name": "tag",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 2936,
									"end": 2975,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2924,
									"end": 2975,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 2924,
									"end": 2975,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3008,
									"end": 3012,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3004,
									"end": 3013,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2997,
									"end": 3002,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2993,
									"end": 3014,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2984,
									"end": 3014,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 2984,
									"end": 3014,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3057,
									"end": 3061,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3047,
									"end": 3055,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3036,
									"end": 3041,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3033,
									"end": 3063,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 3023,
									"end": 3063,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3023,
									"end": 3063,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2752,
									"end": 3069,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2752,
									"end": 3069,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2676,
									"end": 3069,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 2676,
									"end": 3069,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2676,
									"end": 3069,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2676,
									"end": 3069,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2676,
									"end": 3069,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2676,
									"end": 3069,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3075,
									"end": 3152,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 3075,
									"end": 3152,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3112,
									"end": 3119,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3141,
									"end": 3146,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3130,
									"end": 3146,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3130,
									"end": 3146,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3075,
									"end": 3152,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3075,
									"end": 3152,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3075,
									"end": 3152,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3075,
									"end": 3152,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3158,
									"end": 3218,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 3158,
									"end": 3218,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3186,
									"end": 3189,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3207,
									"end": 3212,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3200,
									"end": 3212,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3200,
									"end": 3212,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3158,
									"end": 3218,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3158,
									"end": 3218,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3158,
									"end": 3218,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3158,
									"end": 3218,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3224,
									"end": 3366,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 3224,
									"end": 3366,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3274,
									"end": 3283,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3307,
									"end": 3360,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 3325,
									"end": 3359,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 3334,
									"end": 3358,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 3352,
									"end": 3357,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3334,
									"end": 3358,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 3334,
									"end": 3358,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3334,
									"end": 3358,
									"name": "tag",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 3334,
									"end": 3358,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3325,
									"end": 3359,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 3325,
									"end": 3359,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3325,
									"end": 3359,
									"name": "tag",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 3325,
									"end": 3359,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3307,
									"end": 3360,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 3307,
									"end": 3360,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3307,
									"end": 3360,
									"name": "tag",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 3307,
									"end": 3360,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3294,
									"end": 3360,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3294,
									"end": 3360,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3224,
									"end": 3366,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3224,
									"end": 3366,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3224,
									"end": 3366,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3224,
									"end": 3366,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3372,
									"end": 3447,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 3372,
									"end": 3447,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3415,
									"end": 3418,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3441,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3429,
									"end": 3441,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3429,
									"end": 3441,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3372,
									"end": 3447,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3372,
									"end": 3447,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3372,
									"end": 3447,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3372,
									"end": 3447,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3453,
									"end": 3722,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 3453,
									"end": 3722,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3563,
									"end": 3602,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 3594,
									"end": 3601,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3563,
									"end": 3602,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 3563,
									"end": 3602,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3563,
									"end": 3602,
									"name": "tag",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 3563,
									"end": 3602,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3624,
									"end": 3715,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 3673,
									"end": 3714,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 3697,
									"end": 3713,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3673,
									"end": 3714,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 3673,
									"end": 3714,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3673,
									"end": 3714,
									"name": "tag",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 3673,
									"end": 3714,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3665,
									"end": 3671,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3658,
									"end": 3662,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3652,
									"end": 3663,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 3624,
									"end": 3715,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 3624,
									"end": 3715,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3624,
									"end": 3715,
									"name": "tag",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 3624,
									"end": 3715,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3618,
									"end": 3622,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3611,
									"end": 3716,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3529,
									"end": 3722,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3453,
									"end": 3722,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3453,
									"end": 3722,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3453,
									"end": 3722,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3453,
									"end": 3722,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3728,
									"end": 3801,
									"name": "tag",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 3728,
									"end": 3801,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3773,
									"end": 3776,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3728,
									"end": 3801,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3728,
									"end": 3801,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3807,
									"end": 3996,
									"name": "tag",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 3807,
									"end": 3996,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3884,
									"end": 3916,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 3884,
									"end": 3916,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 3884,
									"end": 3916,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3884,
									"end": 3916,
									"name": "tag",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 3884,
									"end": 3916,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 3990,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 3983,
									"end": 3989,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3975,
									"end": 3981,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3969,
									"end": 3973,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 3990,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 3925,
									"end": 3990,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 3990,
									"name": "tag",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 3925,
									"end": 3990,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3860,
									"end": 3996,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3807,
									"end": 3996,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3807,
									"end": 3996,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3807,
									"end": 3996,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4002,
									"end": 4188,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 4002,
									"end": 4188,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4062,
									"end": 4182,
									"name": "tag",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 4062,
									"end": 4182,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4079,
									"end": 4082,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4072,
									"end": 4077,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4069,
									"end": 4083,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4062,
									"end": 4182,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4062,
									"end": 4182,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 4062,
									"end": 4182,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4133,
									"end": 4172,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 4170,
									"end": 4171,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4163,
									"end": 4168,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4133,
									"end": 4172,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 4133,
									"end": 4172,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4133,
									"end": 4172,
									"name": "tag",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 4133,
									"end": 4172,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4106,
									"end": 4107,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4099,
									"end": 4104,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4095,
									"end": 4108,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4086,
									"end": 4108,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4086,
									"end": 4108,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4062,
									"end": 4182,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 4062,
									"end": 4182,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4062,
									"end": 4182,
									"name": "tag",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 4062,
									"end": 4182,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4002,
									"end": 4188,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4002,
									"end": 4188,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4002,
									"end": 4188,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4194,
									"end": 4737,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 4194,
									"end": 4737,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4295,
									"end": 4297,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4290,
									"end": 4293,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4287,
									"end": 4298,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4284,
									"end": 4730,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4284,
									"end": 4730,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 4284,
									"end": 4730,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4329,
									"end": 4367,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 4361,
									"end": 4366,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4329,
									"end": 4367,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 4329,
									"end": 4367,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4329,
									"end": 4367,
									"name": "tag",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 4329,
									"end": 4367,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4413,
									"end": 4442,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 4431,
									"end": 4441,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4413,
									"end": 4442,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 4413,
									"end": 4442,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4413,
									"end": 4442,
									"name": "tag",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 4413,
									"end": 4442,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4403,
									"end": 4411,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4399,
									"end": 4443,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4596,
									"end": 4598,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4584,
									"end": 4594,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4581,
									"end": 4599,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4578,
									"end": 4627,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4578,
									"end": 4627,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 4578,
									"end": 4627,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4617,
									"end": 4625,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4602,
									"end": 4625,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4602,
									"end": 4625,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4578,
									"end": 4627,
									"name": "tag",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 4578,
									"end": 4627,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4640,
									"end": 4720,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 4696,
									"end": 4718,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 4714,
									"end": 4717,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4696,
									"end": 4718,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 4696,
									"end": 4718,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4696,
									"end": 4718,
									"name": "tag",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 4696,
									"end": 4718,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4686,
									"end": 4694,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4682,
									"end": 4719,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4669,
									"end": 4680,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4640,
									"end": 4720,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 4640,
									"end": 4720,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4640,
									"end": 4720,
									"name": "tag",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 4640,
									"end": 4720,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4299,
									"end": 4730,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4299,
									"end": 4730,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4284,
									"end": 4730,
									"name": "tag",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 4284,
									"end": 4730,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4194,
									"end": 4737,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4194,
									"end": 4737,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4194,
									"end": 4737,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4194,
									"end": 4737,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4743,
									"end": 4860,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 4743,
									"end": 4860,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4797,
									"end": 4805,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4847,
									"end": 4852,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4841,
									"end": 4845,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4837,
									"end": 4853,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 4816,
									"end": 4853,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4816,
									"end": 4853,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4743,
									"end": 4860,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4743,
									"end": 4860,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4743,
									"end": 4860,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4743,
									"end": 4860,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4743,
									"end": 4860,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4866,
									"end": 5035,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 4866,
									"end": 5035,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4910,
									"end": 4916,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4943,
									"end": 4994,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 4991,
									"end": 4992,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4987,
									"end": 4993,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 4979,
									"end": 4984,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4976,
									"end": 4977,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 4972,
									"end": 4985,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 4943,
									"end": 4994,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 4943,
									"end": 4994,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4943,
									"end": 4994,
									"name": "tag",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 4943,
									"end": 4994,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4939,
									"end": 4995,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 5024,
									"end": 5028,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5018,
									"end": 5022,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5014,
									"end": 5029,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5004,
									"end": 5029,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5004,
									"end": 5029,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4917,
									"end": 5035,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4866,
									"end": 5035,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4866,
									"end": 5035,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4866,
									"end": 5035,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4866,
									"end": 5035,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4866,
									"end": 5035,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5040,
									"end": 5335,
									"name": "tag",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 5040,
									"end": 5335,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5116,
									"end": 5120,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5262,
									"end": 5291,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 5287,
									"end": 5290,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5281,
									"end": 5285,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5262,
									"end": 5291,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 5262,
									"end": 5291,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5262,
									"end": 5291,
									"name": "tag",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 5262,
									"end": 5291,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5254,
									"end": 5291,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5254,
									"end": 5291,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5324,
									"end": 5327,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5321,
									"end": 5322,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 5317,
									"end": 5328,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 5311,
									"end": 5315,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5308,
									"end": 5329,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 5300,
									"end": 5329,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5300,
									"end": 5329,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5040,
									"end": 5335,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5040,
									"end": 5335,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5040,
									"end": 5335,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5040,
									"end": 5335,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5040,
									"end": 5335,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5340,
									"end": 6735,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 5340,
									"end": 6735,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5457,
									"end": 5494,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "151"
								},
								{
									"begin": 5490,
									"end": 5493,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5457,
									"end": 5494,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 5457,
									"end": 5494,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5457,
									"end": 5494,
									"name": "tag",
									"source": 7,
									"value": "151"
								},
								{
									"begin": 5457,
									"end": 5494,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5559,
									"end": 5577,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5551,
									"end": 5557,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5548,
									"end": 5578,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 5545,
									"end": 5601,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5545,
									"end": 5601,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 5545,
									"end": 5601,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5581,
									"end": 5599,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 5581,
									"end": 5599,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 5581,
									"end": 5599,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5581,
									"end": 5599,
									"name": "tag",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 5581,
									"end": 5599,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5545,
									"end": 5601,
									"name": "tag",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 5545,
									"end": 5601,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5625,
									"end": 5663,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 5657,
									"end": 5661,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5651,
									"end": 5662,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 5625,
									"end": 5663,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 5625,
									"end": 5663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5625,
									"end": 5663,
									"name": "tag",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 5625,
									"end": 5663,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5710,
									"end": 5777,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 5770,
									"end": 5776,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5762,
									"end": 5768,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5756,
									"end": 5760,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5710,
									"end": 5777,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 5710,
									"end": 5777,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5710,
									"end": 5777,
									"name": "tag",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 5710,
									"end": 5777,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5804,
									"end": 5805,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5828,
									"end": 5832,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5815,
									"end": 5832,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5815,
									"end": 5832,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5860,
									"end": 5862,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5852,
									"end": 5858,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5849,
									"end": 5863,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 5877,
									"end": 5878,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 5872,
									"end": 6490,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5872,
									"end": 6490,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 5872,
									"end": 6490,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 5872,
									"end": 6490,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6534,
									"end": 6535,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6551,
									"end": 6557,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6548,
									"end": 6625,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6548,
									"end": 6625,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "158"
								},
								{
									"begin": 6548,
									"end": 6625,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6600,
									"end": 6609,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6595,
									"end": 6598,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 6591,
									"end": 6610,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6585,
									"end": 6611,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 6576,
									"end": 6611,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6576,
									"end": 6611,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6548,
									"end": 6625,
									"name": "tag",
									"source": 7,
									"value": "158"
								},
								{
									"begin": 6548,
									"end": 6625,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6651,
									"end": 6718,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "159"
								},
								{
									"begin": 6711,
									"end": 6717,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 6704,
									"end": 6709,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6651,
									"end": 6718,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 6651,
									"end": 6718,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6651,
									"end": 6718,
									"name": "tag",
									"source": 7,
									"value": "159"
								},
								{
									"begin": 6651,
									"end": 6718,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6645,
									"end": 6649,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 6638,
									"end": 6719,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6507,
									"end": 6729,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5842,
									"end": 6729,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "156"
								},
								{
									"begin": 5842,
									"end": 6729,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5872,
									"end": 6490,
									"name": "tag",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 5872,
									"end": 6490,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5924,
									"end": 5928,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5920,
									"end": 5929,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 5912,
									"end": 5918,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5908,
									"end": 5930,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5958,
									"end": 5995,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "160"
								},
								{
									"begin": 5990,
									"end": 5994,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5958,
									"end": 5995,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 5958,
									"end": 5995,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5958,
									"end": 5995,
									"name": "tag",
									"source": 7,
									"value": "160"
								},
								{
									"begin": 5958,
									"end": 5995,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6017,
									"end": 6018,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6031,
									"end": 6239,
									"name": "tag",
									"source": 7,
									"value": "161"
								},
								{
									"begin": 6031,
									"end": 6239,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6045,
									"end": 6052,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6042,
									"end": 6043,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6039,
									"end": 6053,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 6031,
									"end": 6239,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6031,
									"end": 6239,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "163"
								},
								{
									"begin": 6031,
									"end": 6239,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6124,
									"end": 6133,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6119,
									"end": 6122,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 6115,
									"end": 6134,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6109,
									"end": 6135,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 6101,
									"end": 6107,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6094,
									"end": 6136,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6175,
									"end": 6176,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6167,
									"end": 6173,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6163,
									"end": 6177,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6153,
									"end": 6177,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6153,
									"end": 6177,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6222,
									"end": 6224,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6211,
									"end": 6220,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 6207,
									"end": 6225,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6194,
									"end": 6225,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 6194,
									"end": 6225,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6068,
									"end": 6072,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6065,
									"end": 6066,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6061,
									"end": 6073,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6056,
									"end": 6073,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6056,
									"end": 6073,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6031,
									"end": 6239,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "161"
								},
								{
									"begin": 6031,
									"end": 6239,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6031,
									"end": 6239,
									"name": "tag",
									"source": 7,
									"value": "163"
								},
								{
									"begin": 6031,
									"end": 6239,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6267,
									"end": 6273,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 6258,
									"end": 6265,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6255,
									"end": 6274,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 6252,
									"end": 6431,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6252,
									"end": 6431,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "164"
								},
								{
									"begin": 6252,
									"end": 6431,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6325,
									"end": 6334,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6320,
									"end": 6323,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 6316,
									"end": 6335,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6310,
									"end": 6336,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 6368,
									"end": 6416,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "165"
								},
								{
									"begin": 6410,
									"end": 6414,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 6402,
									"end": 6408,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 6398,
									"end": 6415,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6387,
									"end": 6396,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6368,
									"end": 6416,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 6368,
									"end": 6416,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6368,
									"end": 6416,
									"name": "tag",
									"source": 7,
									"value": "165"
								},
								{
									"begin": 6368,
									"end": 6416,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6360,
									"end": 6366,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6353,
									"end": 6417,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6275,
									"end": 6431,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6252,
									"end": 6431,
									"name": "tag",
									"source": 7,
									"value": "164"
								},
								{
									"begin": 6252,
									"end": 6431,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6477,
									"end": 6478,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6473,
									"end": 6474,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 6465,
									"end": 6471,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 6461,
									"end": 6475,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 6457,
									"end": 6479,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6451,
									"end": 6455,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 6444,
									"end": 6480,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5879,
									"end": 6490,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5879,
									"end": 6490,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5879,
									"end": 6490,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5842,
									"end": 6729,
									"name": "tag",
									"source": 7,
									"value": "156"
								},
								{
									"begin": 5842,
									"end": 6729,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5842,
									"end": 6729,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5432,
									"end": 6735,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5432,
									"end": 6735,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5432,
									"end": 6735,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5340,
									"end": 6735,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5340,
									"end": 6735,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5340,
									"end": 6735,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6741,
									"end": 6859,
									"name": "tag",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 6741,
									"end": 6859,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6828,
									"end": 6852,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "167"
								},
								{
									"begin": 6846,
									"end": 6851,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6828,
									"end": 6852,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 6828,
									"end": 6852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6828,
									"end": 6852,
									"name": "tag",
									"source": 7,
									"value": "167"
								},
								{
									"begin": 6828,
									"end": 6852,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6823,
									"end": 6826,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6816,
									"end": 6853,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6741,
									"end": 6859,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6741,
									"end": 6859,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6741,
									"end": 6859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6865,
									"end": 7087,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 6865,
									"end": 7087,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6958,
									"end": 6962,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6996,
									"end": 6998,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6985,
									"end": 6994,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6981,
									"end": 6999,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6973,
									"end": 6999,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6973,
									"end": 6999,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7009,
									"end": 7080,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "169"
								},
								{
									"begin": 7077,
									"end": 7078,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7066,
									"end": 7075,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7062,
									"end": 7079,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7053,
									"end": 7059,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7009,
									"end": 7080,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 7009,
									"end": 7080,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7009,
									"end": 7080,
									"name": "tag",
									"source": 7,
									"value": "169"
								},
								{
									"begin": 7009,
									"end": 7080,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6865,
									"end": 7087,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 6865,
									"end": 7087,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6865,
									"end": 7087,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6865,
									"end": 7087,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6865,
									"end": 7087,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7093,
									"end": 7273,
									"name": "tag",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 7093,
									"end": 7273,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7141,
									"end": 7218,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7138,
									"end": 7139,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7131,
									"end": 7219,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7238,
									"end": 7242,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 7235,
									"end": 7236,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 7228,
									"end": 7243,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7262,
									"end": 7266,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 7259,
									"end": 7260,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7252,
									"end": 7267,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 7279,
									"end": 7381,
									"name": "tag",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 7279,
									"end": 7381,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7321,
									"end": 7329,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7368,
									"end": 7373,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7365,
									"end": 7366,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 7361,
									"end": 7374,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 7340,
									"end": 7374,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7340,
									"end": 7374,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7279,
									"end": 7381,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7279,
									"end": 7381,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7279,
									"end": 7381,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7279,
									"end": 7381,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7387,
									"end": 8235,
									"name": "tag",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 7387,
									"end": 8235,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7448,
									"end": 7453,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7455,
									"end": 7459,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7479,
									"end": 7485,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7470,
									"end": 7485,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7470,
									"end": 7485,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7503,
									"end": 7508,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7494,
									"end": 7508,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7494,
									"end": 7508,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7517,
									"end": 8229,
									"name": "tag",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 7517,
									"end": 8229,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7538,
									"end": 7539,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 7528,
									"end": 7536,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7525,
									"end": 7540,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 7517,
									"end": 8229,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7517,
									"end": 8229,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "175"
								},
								{
									"begin": 7517,
									"end": 8229,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7633,
									"end": 7637,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7628,
									"end": 7631,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 7624,
									"end": 7638,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 7618,
									"end": 7622,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7615,
									"end": 7639,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 7612,
									"end": 7662,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7612,
									"end": 7662,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "176"
								},
								{
									"begin": 7612,
									"end": 7662,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7642,
									"end": 7660,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "177"
								},
								{
									"begin": 7642,
									"end": 7660,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 7642,
									"end": 7660,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7642,
									"end": 7660,
									"name": "tag",
									"source": 7,
									"value": "177"
								},
								{
									"begin": 7642,
									"end": 7660,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7612,
									"end": 7662,
									"name": "tag",
									"source": 7,
									"value": "176"
								},
								{
									"begin": 7612,
									"end": 7662,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7692,
									"end": 7693,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 7682,
									"end": 7690,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7678,
									"end": 7694,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 7675,
									"end": 8126,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7675,
									"end": 8126,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "178"
								},
								{
									"begin": 7675,
									"end": 8126,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8107,
									"end": 8111,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 8100,
									"end": 8105,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8096,
									"end": 8112,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 8087,
									"end": 8112,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8087,
									"end": 8112,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7675,
									"end": 8126,
									"name": "tag",
									"source": 7,
									"value": "178"
								},
								{
									"begin": 7675,
									"end": 8126,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8157,
									"end": 8161,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 8151,
									"end": 8155,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8147,
									"end": 8162,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 8139,
									"end": 8162,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8139,
									"end": 8162,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8187,
									"end": 8219,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "179"
								},
								{
									"begin": 8210,
									"end": 8218,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 8187,
									"end": 8219,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 8187,
									"end": 8219,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8187,
									"end": 8219,
									"name": "tag",
									"source": 7,
									"value": "179"
								},
								{
									"begin": 8187,
									"end": 8219,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8175,
									"end": 8219,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 8175,
									"end": 8219,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7517,
									"end": 8229,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 7517,
									"end": 8229,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7517,
									"end": 8229,
									"name": "tag",
									"source": 7,
									"value": "175"
								},
								{
									"begin": 7517,
									"end": 8229,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7387,
									"end": 8235,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 7387,
									"end": 8235,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7387,
									"end": 8235,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 7387,
									"end": 8235,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7387,
									"end": 8235,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7387,
									"end": 8235,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7387,
									"end": 8235,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7387,
									"end": 8235,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8241,
									"end": 9314,
									"name": "tag",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 8241,
									"end": 9314,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8295,
									"end": 8300,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8486,
									"end": 8494,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8476,
									"end": 8516,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "181"
								},
								{
									"begin": 8476,
									"end": 8516,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8507,
									"end": 8508,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 8498,
									"end": 8508,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8498,
									"end": 8508,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8509,
									"end": 8514,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "180"
								},
								{
									"begin": 8509,
									"end": 8514,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8476,
									"end": 8516,
									"name": "tag",
									"source": 7,
									"value": "181"
								},
								{
									"begin": 8476,
									"end": 8516,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8535,
									"end": 8539,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8525,
									"end": 8561,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "182"
								},
								{
									"begin": 8525,
									"end": 8561,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8552,
									"end": 8553,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8543,
									"end": 8553,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8543,
									"end": 8553,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8554,
									"end": 8559,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "180"
								},
								{
									"begin": 8554,
									"end": 8559,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8525,
									"end": 8561,
									"name": "tag",
									"source": 7,
									"value": "182"
								},
								{
									"begin": 8525,
									"end": 8561,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8621,
									"end": 8625,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8669,
									"end": 8670,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 8664,
									"end": 8691,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8664,
									"end": 8691,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 8664,
									"end": 8691,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "184"
								},
								{
									"begin": 8664,
									"end": 8691,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8705,
									"end": 8706,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 8700,
									"end": 8891,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8700,
									"end": 8891,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 8700,
									"end": 8891,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "185"
								},
								{
									"begin": 8700,
									"end": 8891,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8614,
									"end": 8891,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "183"
								},
								{
									"begin": 8614,
									"end": 8891,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8664,
									"end": 8691,
									"name": "tag",
									"source": 7,
									"value": "184"
								},
								{
									"begin": 8664,
									"end": 8691,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8682,
									"end": 8683,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 8673,
									"end": 8683,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8673,
									"end": 8683,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8684,
									"end": 8689,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8684,
									"end": 8689,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "180"
								},
								{
									"begin": 8684,
									"end": 8689,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8700,
									"end": 8891,
									"name": "tag",
									"source": 7,
									"value": "185"
								},
								{
									"begin": 8700,
									"end": 8891,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8745,
									"end": 8748,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 8735,
									"end": 8743,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8732,
									"end": 8749,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8729,
									"end": 8772,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8729,
									"end": 8772,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "186"
								},
								{
									"begin": 8729,
									"end": 8772,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8752,
									"end": 8770,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "187"
								},
								{
									"begin": 8752,
									"end": 8770,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 8752,
									"end": 8770,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8752,
									"end": 8770,
									"name": "tag",
									"source": 7,
									"value": "187"
								},
								{
									"begin": 8752,
									"end": 8770,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8729,
									"end": 8772,
									"name": "tag",
									"source": 7,
									"value": "186"
								},
								{
									"begin": 8729,
									"end": 8772,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8801,
									"end": 8809,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8798,
									"end": 8799,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 8794,
									"end": 8810,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 8785,
									"end": 8810,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8785,
									"end": 8810,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8836,
									"end": 8839,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8829,
									"end": 8834,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8826,
									"end": 8840,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8823,
									"end": 8863,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8823,
									"end": 8863,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "188"
								},
								{
									"begin": 8823,
									"end": 8863,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8843,
									"end": 8861,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "189"
								},
								{
									"begin": 8843,
									"end": 8861,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 8843,
									"end": 8861,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8843,
									"end": 8861,
									"name": "tag",
									"source": 7,
									"value": "189"
								},
								{
									"begin": 8843,
									"end": 8861,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8823,
									"end": 8863,
									"name": "tag",
									"source": 7,
									"value": "188"
								},
								{
									"begin": 8823,
									"end": 8863,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8876,
									"end": 8881,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8876,
									"end": 8881,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "180"
								},
								{
									"begin": 8876,
									"end": 8881,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8614,
									"end": 8891,
									"name": "tag",
									"source": 7,
									"value": "183"
								},
								{
									"begin": 8614,
									"end": 8891,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8614,
									"end": 8891,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9000,
									"end": 9002,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8990,
									"end": 8998,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8987,
									"end": 9003,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 8981,
									"end": 8984,
									"name": "PUSH",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 8975,
									"end": 8979,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8972,
									"end": 8985,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 8968,
									"end": 9004,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 8950,
									"end": 8952,
									"name": "PUSH",
									"source": 7,
									"value": "4E"
								},
								{
									"begin": 8940,
									"end": 8948,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8937,
									"end": 8953,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 8932,
									"end": 8934,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 8926,
									"end": 8930,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8923,
									"end": 8935,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 8919,
									"end": 8954,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 8903,
									"end": 9014,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 8900,
									"end": 9146,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8900,
									"end": 9146,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "190"
								},
								{
									"begin": 8900,
									"end": 9146,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9056,
									"end": 9064,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9050,
									"end": 9054,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9046,
									"end": 9065,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 9037,
									"end": 9065,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9037,
									"end": 9065,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9091,
									"end": 9094,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9084,
									"end": 9089,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9081,
									"end": 9095,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 9078,
									"end": 9118,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 9078,
									"end": 9118,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "191"
								},
								{
									"begin": 9078,
									"end": 9118,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9098,
									"end": 9116,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "192"
								},
								{
									"begin": 9098,
									"end": 9116,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 9098,
									"end": 9116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9098,
									"end": 9116,
									"name": "tag",
									"source": 7,
									"value": "192"
								},
								{
									"begin": 9098,
									"end": 9116,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9078,
									"end": 9118,
									"name": "tag",
									"source": 7,
									"value": "191"
								},
								{
									"begin": 9078,
									"end": 9118,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9131,
									"end": 9136,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "180"
								},
								{
									"begin": 9131,
									"end": 9136,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8900,
									"end": 9146,
									"name": "tag",
									"source": 7,
									"value": "190"
								},
								{
									"begin": 8900,
									"end": 9146,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9171,
									"end": 9213,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "193"
								},
								{
									"begin": 9209,
									"end": 9212,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9199,
									"end": 9207,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9193,
									"end": 9197,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9190,
									"end": 9191,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 9171,
									"end": 9213,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 9171,
									"end": 9213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9171,
									"end": 9213,
									"name": "tag",
									"source": 7,
									"value": "193"
								},
								{
									"begin": 9171,
									"end": 9213,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9156,
									"end": 9213,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9156,
									"end": 9213,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9156,
									"end": 9213,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9156,
									"end": 9213,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9245,
									"end": 9249,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9240,
									"end": 9243,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9236,
									"end": 9250,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 9229,
									"end": 9234,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9226,
									"end": 9251,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 9223,
									"end": 9274,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 9223,
									"end": 9274,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "194"
								},
								{
									"begin": 9223,
									"end": 9274,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9254,
									"end": 9272,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "195"
								},
								{
									"begin": 9254,
									"end": 9272,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 9254,
									"end": 9272,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9254,
									"end": 9272,
									"name": "tag",
									"source": 7,
									"value": "195"
								},
								{
									"begin": 9254,
									"end": 9272,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9223,
									"end": 9274,
									"name": "tag",
									"source": 7,
									"value": "194"
								},
								{
									"begin": 9223,
									"end": 9274,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9303,
									"end": 9307,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9296,
									"end": 9301,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9292,
									"end": 9308,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 9283,
									"end": 9308,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9283,
									"end": 9308,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8241,
									"end": 9314,
									"name": "tag",
									"source": 7,
									"value": "180"
								},
								{
									"begin": 8241,
									"end": 9314,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8241,
									"end": 9314,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 8241,
									"end": 9314,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 8241,
									"end": 9314,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8241,
									"end": 9314,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8241,
									"end": 9314,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8241,
									"end": 9314,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9320,
									"end": 9406,
									"name": "tag",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 9320,
									"end": 9406,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9355,
									"end": 9362,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9395,
									"end": 9399,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 9388,
									"end": 9393,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9384,
									"end": 9400,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 9373,
									"end": 9400,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9373,
									"end": 9400,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9320,
									"end": 9406,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9320,
									"end": 9406,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9320,
									"end": 9406,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9320,
									"end": 9406,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9412,
									"end": 9693,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 9412,
									"end": 9693,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9470,
									"end": 9475,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9494,
									"end": 9517,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "198"
								},
								{
									"begin": 9512,
									"end": 9516,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9494,
									"end": 9517,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 9494,
									"end": 9517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9494,
									"end": 9517,
									"name": "tag",
									"source": 7,
									"value": "198"
								},
								{
									"begin": 9494,
									"end": 9517,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9486,
									"end": 9517,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9486,
									"end": 9517,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9538,
									"end": 9563,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "199"
								},
								{
									"begin": 9554,
									"end": 9562,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9538,
									"end": 9563,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 9538,
									"end": 9563,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9538,
									"end": 9563,
									"name": "tag",
									"source": 7,
									"value": "199"
								},
								{
									"begin": 9538,
									"end": 9563,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9526,
									"end": 9563,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9526,
									"end": 9563,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9582,
									"end": 9686,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "200"
								},
								{
									"begin": 9619,
									"end": 9685,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9609,
									"end": 9617,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9603,
									"end": 9607,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9582,
									"end": 9686,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 9582,
									"end": 9686,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9582,
									"end": 9686,
									"name": "tag",
									"source": 7,
									"value": "200"
								},
								{
									"begin": 9582,
									"end": 9686,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9573,
									"end": 9686,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9573,
									"end": 9686,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9412,
									"end": 9693,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9412,
									"end": 9693,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9412,
									"end": 9693,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9412,
									"end": 9693,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9412,
									"end": 9693,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9699,
									"end": 10109,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 9699,
									"end": 10109,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9739,
									"end": 9746,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9762,
									"end": 9782,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "202"
								},
								{
									"begin": 9780,
									"end": 9781,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9762,
									"end": 9782,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 9762,
									"end": 9782,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9762,
									"end": 9782,
									"name": "tag",
									"source": 7,
									"value": "202"
								},
								{
									"begin": 9762,
									"end": 9782,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9757,
									"end": 9782,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9757,
									"end": 9782,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9796,
									"end": 9816,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "203"
								},
								{
									"begin": 9814,
									"end": 9815,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9796,
									"end": 9816,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 9796,
									"end": 9816,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9796,
									"end": 9816,
									"name": "tag",
									"source": 7,
									"value": "203"
								},
								{
									"begin": 9796,
									"end": 9816,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9791,
									"end": 9816,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9791,
									"end": 9816,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9851,
									"end": 9852,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9848,
									"end": 9849,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9844,
									"end": 9853,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 9873,
									"end": 9903,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "204"
								},
								{
									"begin": 9891,
									"end": 9902,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9873,
									"end": 9903,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 9873,
									"end": 9903,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9873,
									"end": 9903,
									"name": "tag",
									"source": 7,
									"value": "204"
								},
								{
									"begin": 9873,
									"end": 9903,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9862,
									"end": 9903,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9862,
									"end": 9903,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10052,
									"end": 10053,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10043,
									"end": 10050,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10039,
									"end": 10054,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 10036,
									"end": 10037,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 10033,
									"end": 10055,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 10013,
									"end": 10014,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10006,
									"end": 10015,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 9986,
									"end": 10069,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 9963,
									"end": 10102,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "205"
								},
								{
									"begin": 9963,
									"end": 10102,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 10082,
									"end": 10100,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "206"
								},
								{
									"begin": 10082,
									"end": 10100,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 10082,
									"end": 10100,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10082,
									"end": 10100,
									"name": "tag",
									"source": 7,
									"value": "206"
								},
								{
									"begin": 10082,
									"end": 10100,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9963,
									"end": 10102,
									"name": "tag",
									"source": 7,
									"value": "205"
								},
								{
									"begin": 9963,
									"end": 10102,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9747,
									"end": 10109,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9699,
									"end": 10109,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9699,
									"end": 10109,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9699,
									"end": 10109,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9699,
									"end": 10109,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9699,
									"end": 10109,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10115,
									"end": 10295,
									"name": "tag",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 10115,
									"end": 10295,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10163,
									"end": 10240,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10160,
									"end": 10161,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10153,
									"end": 10241,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 10260,
									"end": 10264,
									"name": "PUSH",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 10257,
									"end": 10258,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 10250,
									"end": 10265,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 10284,
									"end": 10288,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 10281,
									"end": 10282,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10274,
									"end": 10289,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 10301,
									"end": 10486,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 10301,
									"end": 10486,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10341,
									"end": 10342,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10358,
									"end": 10378,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "209"
								},
								{
									"begin": 10376,
									"end": 10377,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10358,
									"end": 10378,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 10358,
									"end": 10378,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10358,
									"end": 10378,
									"name": "tag",
									"source": 7,
									"value": "209"
								},
								{
									"begin": 10358,
									"end": 10378,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10353,
									"end": 10378,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10353,
									"end": 10378,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10392,
									"end": 10412,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "210"
								},
								{
									"begin": 10410,
									"end": 10411,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10392,
									"end": 10412,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 10392,
									"end": 10412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10392,
									"end": 10412,
									"name": "tag",
									"source": 7,
									"value": "210"
								},
								{
									"begin": 10392,
									"end": 10412,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10387,
									"end": 10412,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 10387,
									"end": 10412,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10431,
									"end": 10432,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10421,
									"end": 10456,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "211"
								},
								{
									"begin": 10421,
									"end": 10456,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 10436,
									"end": 10454,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "212"
								},
								{
									"begin": 10436,
									"end": 10454,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 10436,
									"end": 10454,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10436,
									"end": 10454,
									"name": "tag",
									"source": 7,
									"value": "212"
								},
								{
									"begin": 10436,
									"end": 10454,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10421,
									"end": 10456,
									"name": "tag",
									"source": 7,
									"value": "211"
								},
								{
									"begin": 10421,
									"end": 10456,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10478,
									"end": 10479,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10475,
									"end": 10476,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10471,
									"end": 10480,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 10466,
									"end": 10480,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10466,
									"end": 10480,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10301,
									"end": 10486,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 10301,
									"end": 10486,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10301,
									"end": 10486,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10301,
									"end": 10486,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10301,
									"end": 10486,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10492,
									"end": 10686,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 10492,
									"end": 10686,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10532,
									"end": 10536,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10552,
									"end": 10572,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "214"
								},
								{
									"begin": 10570,
									"end": 10571,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10552,
									"end": 10572,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 10552,
									"end": 10572,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10552,
									"end": 10572,
									"name": "tag",
									"source": 7,
									"value": "214"
								},
								{
									"begin": 10552,
									"end": 10572,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10547,
									"end": 10572,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10547,
									"end": 10572,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10586,
									"end": 10606,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "215"
								},
								{
									"begin": 10604,
									"end": 10605,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10586,
									"end": 10606,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 10586,
									"end": 10606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10586,
									"end": 10606,
									"name": "tag",
									"source": 7,
									"value": "215"
								},
								{
									"begin": 10586,
									"end": 10606,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10581,
									"end": 10606,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 10581,
									"end": 10606,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10630,
									"end": 10631,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10627,
									"end": 10628,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10623,
									"end": 10632,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 10615,
									"end": 10632,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10615,
									"end": 10632,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10654,
									"end": 10655,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10648,
									"end": 10652,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10645,
									"end": 10656,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 10642,
									"end": 10679,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 10642,
									"end": 10679,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "216"
								},
								{
									"begin": 10642,
									"end": 10679,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 10659,
									"end": 10677,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "217"
								},
								{
									"begin": 10659,
									"end": 10677,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 10659,
									"end": 10677,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10659,
									"end": 10677,
									"name": "tag",
									"source": 7,
									"value": "217"
								},
								{
									"begin": 10659,
									"end": 10677,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10642,
									"end": 10679,
									"name": "tag",
									"source": 7,
									"value": "216"
								},
								{
									"begin": 10642,
									"end": 10679,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10492,
									"end": 10686,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 10492,
									"end": 10686,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10492,
									"end": 10686,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10492,
									"end": 10686,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10492,
									"end": 10686,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10692,
									"end": 10883,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 10692,
									"end": 10883,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10732,
									"end": 10735,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10751,
									"end": 10771,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "219"
								},
								{
									"begin": 10769,
									"end": 10770,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10751,
									"end": 10771,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 10751,
									"end": 10771,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10751,
									"end": 10771,
									"name": "tag",
									"source": 7,
									"value": "219"
								},
								{
									"begin": 10751,
									"end": 10771,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10746,
									"end": 10771,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10746,
									"end": 10771,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10785,
									"end": 10805,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "220"
								},
								{
									"begin": 10803,
									"end": 10804,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10785,
									"end": 10805,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 10785,
									"end": 10805,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10785,
									"end": 10805,
									"name": "tag",
									"source": 7,
									"value": "220"
								},
								{
									"begin": 10785,
									"end": 10805,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10780,
									"end": 10805,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 10780,
									"end": 10805,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10828,
									"end": 10829,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10825,
									"end": 10826,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10821,
									"end": 10830,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10814,
									"end": 10830,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10814,
									"end": 10830,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10849,
									"end": 10852,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 10846,
									"end": 10847,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10843,
									"end": 10853,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 10840,
									"end": 10876,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 10840,
									"end": 10876,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "221"
								},
								{
									"begin": 10840,
									"end": 10876,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 10856,
									"end": 10874,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "222"
								},
								{
									"begin": 10856,
									"end": 10874,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 10856,
									"end": 10874,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10856,
									"end": 10874,
									"name": "tag",
									"source": 7,
									"value": "222"
								},
								{
									"begin": 10856,
									"end": 10874,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10840,
									"end": 10876,
									"name": "tag",
									"source": 7,
									"value": "221"
								},
								{
									"begin": 10840,
									"end": 10876,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10692,
									"end": 10883,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 10692,
									"end": 10883,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10692,
									"end": 10883,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10692,
									"end": 10883,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10692,
									"end": 10883,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10889,
									"end": 11007,
									"name": "tag",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 10889,
									"end": 11007,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10976,
									"end": 11000,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "224"
								},
								{
									"begin": 10994,
									"end": 10999,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10976,
									"end": 11000,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 10976,
									"end": 11000,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10976,
									"end": 11000,
									"name": "tag",
									"source": 7,
									"value": "224"
								},
								{
									"begin": 10976,
									"end": 11000,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10971,
									"end": 10974,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10964,
									"end": 11001,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 10889,
									"end": 11007,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10889,
									"end": 11007,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10889,
									"end": 11007,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11013,
									"end": 11455,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 11013,
									"end": 11455,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11162,
									"end": 11166,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11200,
									"end": 11202,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 11189,
									"end": 11198,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11185,
									"end": 11203,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 11177,
									"end": 11203,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 11177,
									"end": 11203,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11213,
									"end": 11284,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "226"
								},
								{
									"begin": 11281,
									"end": 11282,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11270,
									"end": 11279,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 11266,
									"end": 11283,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 11257,
									"end": 11263,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 11213,
									"end": 11284,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 11213,
									"end": 11284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11213,
									"end": 11284,
									"name": "tag",
									"source": 7,
									"value": "226"
								},
								{
									"begin": 11213,
									"end": 11284,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11294,
									"end": 11366,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "227"
								},
								{
									"begin": 11362,
									"end": 11364,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 11351,
									"end": 11360,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 11347,
									"end": 11365,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 11338,
									"end": 11344,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 11294,
									"end": 11366,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 11294,
									"end": 11366,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11294,
									"end": 11366,
									"name": "tag",
									"source": 7,
									"value": "227"
								},
								{
									"begin": 11294,
									"end": 11366,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11376,
									"end": 11448,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "228"
								},
								{
									"begin": 11444,
									"end": 11446,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 11433,
									"end": 11442,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 11429,
									"end": 11447,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 11420,
									"end": 11426,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 11376,
									"end": 11448,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 11376,
									"end": 11448,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11376,
									"end": 11448,
									"name": "tag",
									"source": 7,
									"value": "228"
								},
								{
									"begin": 11376,
									"end": 11448,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11013,
									"end": 11455,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 11013,
									"end": 11455,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 11013,
									"end": 11455,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11013,
									"end": 11455,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11013,
									"end": 11455,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11013,
									"end": 11455,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11013,
									"end": 11455,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11461,
									"end": 11683,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 11461,
									"end": 11683,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11554,
									"end": 11558,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11592,
									"end": 11594,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 11581,
									"end": 11590,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11577,
									"end": 11595,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 11569,
									"end": 11595,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 11569,
									"end": 11595,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11605,
									"end": 11676,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "230"
								},
								{
									"begin": 11673,
									"end": 11674,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11662,
									"end": 11671,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 11658,
									"end": 11675,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 11649,
									"end": 11655,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 11605,
									"end": 11676,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 11605,
									"end": 11676,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11605,
									"end": 11676,
									"name": "tag",
									"source": 7,
									"value": "230"
								},
								{
									"begin": 11605,
									"end": 11676,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11461,
									"end": 11683,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 11461,
									"end": 11683,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 11461,
									"end": 11683,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11461,
									"end": 11683,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11461,
									"end": 11683,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 167,
									"end": 2362,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 167,
									"end": 2362,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 167,
									"end": 2362,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 167,
									"end": 2362,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 167,
									"end": 2362,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 167,
									"end": 2362,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 2362,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 167,
									"end": 2362,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 2362,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220494f42b9501d8285f4b158adf5d0cb0691f011d2395ec7afda8831f5140db0df64736f6c634300081e0033",
									".code": [
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH",
											"source": 6,
											"value": "8EA5220F"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH",
											"source": 6,
											"value": "D72B11BD"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH",
											"source": 6,
											"value": "D72B11BD"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH",
											"source": 6,
											"value": "E7B94DF4"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH",
											"source": 6,
											"value": "F887EA40"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH",
											"source": 6,
											"value": "8EA5220F"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH",
											"source": 6,
											"value": "C0D78655"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH",
											"source": 6,
											"value": "C6A30647"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH",
											"source": 6,
											"value": "771A3A1D"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 2362,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2360,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2029,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 2029,
											"end": 2360,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2029,
											"end": 2360,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2360,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2360,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2360,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2360,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2360,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2029,
											"end": 2360,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2360,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 2029,
											"end": 2360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2360,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2029,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 2029,
											"end": 2360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2360,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 2029,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2360,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2029,
											"end": 2360,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 2029,
											"end": 2360,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2360,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 2029,
											"end": 2360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2360,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 2029,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2360,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2029,
											"end": 2360,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2360,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2360,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2360,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2360,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2360,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 214,
											"end": 240,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 214,
											"end": 240,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 214,
											"end": 240,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 214,
											"end": 240,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 214,
											"end": 240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 214,
											"end": 240,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 214,
											"end": 240,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 214,
											"end": 240,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 214,
											"end": 240,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 214,
											"end": 240,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 214,
											"end": 240,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 214,
											"end": 240,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 214,
											"end": 240,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 214,
											"end": 240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 214,
											"end": 240,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 214,
											"end": 240,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 214,
											"end": 240,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 214,
											"end": 240,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 214,
											"end": 240,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 214,
											"end": 240,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 214,
											"end": 240,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 214,
											"end": 240,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 214,
											"end": 240,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 304,
											"end": 328,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 304,
											"end": 328,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 304,
											"end": 328,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 304,
											"end": 328,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 304,
											"end": 328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 304,
											"end": 328,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 304,
											"end": 328,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 304,
											"end": 328,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 304,
											"end": 328,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 304,
											"end": 328,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 304,
											"end": 328,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 304,
											"end": 328,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 304,
											"end": 328,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 304,
											"end": 328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 304,
											"end": 328,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 304,
											"end": 328,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 304,
											"end": 328,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 304,
											"end": 328,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 304,
											"end": 328,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 304,
											"end": 328,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 304,
											"end": 328,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 304,
											"end": 328,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 304,
											"end": 328,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 2023,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1804,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 2023,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1804,
											"end": 2023,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1804,
											"end": 2023,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 2023,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 2023,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 2023,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 2023,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 2023,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 2023,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1804,
											"end": 2023,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 2023,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 2023,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1804,
											"end": 2023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 2023,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1804,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 2023,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1804,
											"end": 2023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 2023,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1804,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 2023,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1804,
											"end": 2023,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 2023,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1804,
											"end": 2023,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 2023,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 2023,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1804,
											"end": 2023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 2023,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1804,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 2023,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1804,
											"end": 2023,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 2023,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 2023,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 2023,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 2023,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 2023,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1159,
											"end": 1247,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1159,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1159,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1159,
											"end": 1247,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1159,
											"end": 1247,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1159,
											"end": 1247,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1159,
											"end": 1247,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1159,
											"end": 1247,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1159,
											"end": 1247,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1159,
											"end": 1247,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1159,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1159,
											"end": 1247,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1159,
											"end": 1247,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1159,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1159,
											"end": 1247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1159,
											"end": 1247,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1159,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1159,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 1159,
											"end": 1247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1159,
											"end": 1247,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1159,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1159,
											"end": 1247,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1253,
											"end": 1383,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1253,
											"end": 1383,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1253,
											"end": 1383,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 1253,
											"end": 1383,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1253,
											"end": 1383,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1253,
											"end": 1383,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1253,
											"end": 1383,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1253,
											"end": 1383,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1253,
											"end": 1383,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1253,
											"end": 1383,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1253,
											"end": 1383,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 1253,
											"end": 1383,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1253,
											"end": 1383,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1253,
											"end": 1383,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 1253,
											"end": 1383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1253,
											"end": 1383,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 1253,
											"end": 1383,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1253,
											"end": 1383,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1253,
											"end": 1383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1253,
											"end": 1383,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 1253,
											"end": 1383,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1253,
											"end": 1383,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 270,
											"end": 298,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 270,
											"end": 298,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 270,
											"end": 298,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 270,
											"end": 298,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 270,
											"end": 298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 270,
											"end": 298,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 270,
											"end": 298,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 270,
											"end": 298,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 270,
											"end": 298,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 270,
											"end": 298,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 270,
											"end": 298,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 270,
											"end": 298,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 270,
											"end": 298,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 270,
											"end": 298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 270,
											"end": 298,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 270,
											"end": 298,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 270,
											"end": 298,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 270,
											"end": 298,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 270,
											"end": 298,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 270,
											"end": 298,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 270,
											"end": 298,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 270,
											"end": 298,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 270,
											"end": 298,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 334,
											"end": 363,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 334,
											"end": 363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 334,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 334,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 334,
											"end": 363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 363,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 334,
											"end": 363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 334,
											"end": 363,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 334,
											"end": 363,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 334,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 334,
											"end": 363,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 334,
											"end": 363,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 334,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 334,
											"end": 363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 363,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 334,
											"end": 363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 334,
											"end": 363,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 334,
											"end": 363,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 334,
											"end": 363,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 334,
											"end": 363,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 334,
											"end": 363,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 334,
											"end": 363,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 334,
											"end": 363,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 427,
											"end": 448,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 427,
											"end": 448,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 427,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 427,
											"end": 448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 427,
											"end": 448,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 427,
											"end": 448,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 427,
											"end": 448,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 427,
											"end": 448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 427,
											"end": 448,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 427,
											"end": 448,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4052,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4068,
											"end": 4081,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 4084,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 4084,
											"end": 4096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 4115,
											"end": 4120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4122,
											"end": 4129,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 4106,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2882,
											"end": 2889,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2360,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 2029,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2131,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2162,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 2176,
											"end": 2182,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2193,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2201,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 2165,
											"end": 2202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2202,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 2165,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2143,
											"end": 2202,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2143,
											"end": 2202,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 2221,
											"end": 2227,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2229,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 2229,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 2229,
											"end": 2241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2229,
											"end": 2241,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 2229,
											"end": 2241,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2278,
											"end": 2284,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 2253,
											"end": 2259,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 2261,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 2261,
											"end": 2273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 2243,
											"end": 2274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 2243,
											"end": 2285,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2285,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 2243,
											"end": 2285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2285,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 2243,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 2212,
											"end": 2286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2286,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 2212,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2303,
											"end": 2353,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 2322,
											"end": 2328,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2330,
											"end": 2339,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2341,
											"end": 2352,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 2303,
											"end": 2353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2303,
											"end": 2353,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 2303,
											"end": 2353,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2353,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2353,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2353,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2360,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2360,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2360,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2360,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2360,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2737,
											"end": 2742,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3085,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3093,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 214,
											"end": 240,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 214,
											"end": 240,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 214,
											"end": 240,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 214,
											"end": 240,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 214,
											"end": 240,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 214,
											"end": 240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 304,
											"end": 328,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 304,
											"end": 328,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 304,
											"end": 328,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 304,
											"end": 328,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 328,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 304,
											"end": 328,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 304,
											"end": 328,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 304,
											"end": 328,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 304,
											"end": 328,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 304,
											"end": 328,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 304,
											"end": 328,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 304,
											"end": 328,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 304,
											"end": 328,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 304,
											"end": 328,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 304,
											"end": 328,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 2023,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1804,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1882,
											"end": 1886,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1898,
											"end": 1917,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 1931,
											"end": 1941,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1943,
											"end": 1952,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1954,
											"end": 1960,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 1920,
											"end": 1961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1961,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 1920,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1898,
											"end": 1961,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1898,
											"end": 1961,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 1993,
											"end": 2002,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2004,
											"end": 2015,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 1992,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 1978,
											"end": 2016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2016,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 1978,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1971,
											"end": 2016,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1971,
											"end": 2016,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1971,
											"end": 2016,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 2023,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 2023,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 2023,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 2023,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 2023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1159,
											"end": 1247,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 1159,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1233,
											"end": 1240,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1224,
											"end": 1230,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 1224,
											"end": 1230,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1224,
											"end": 1240,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1224,
											"end": 1240,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1224,
											"end": 1240,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1224,
											"end": 1240,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1224,
											"end": 1240,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1224,
											"end": 1240,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1224,
											"end": 1240,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1224,
											"end": 1240,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1224,
											"end": 1240,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1224,
											"end": 1240,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1224,
											"end": 1240,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1224,
											"end": 1240,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1224,
											"end": 1240,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1224,
											"end": 1240,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1224,
											"end": 1240,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1224,
											"end": 1240,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1224,
											"end": 1240,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1224,
											"end": 1240,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1159,
											"end": 1247,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1159,
											"end": 1247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1253,
											"end": 1383,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1253,
											"end": 1383,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1376,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1338,
											"end": 1356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 1338,
											"end": 1365,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1357,
											"end": 1364,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1338,
											"end": 1365,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1338,
											"end": 1365,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1338,
											"end": 1365,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1338,
											"end": 1365,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1338,
											"end": 1365,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1338,
											"end": 1365,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1338,
											"end": 1365,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1338,
											"end": 1365,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1338,
											"end": 1365,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1338,
											"end": 1365,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1338,
											"end": 1365,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1338,
											"end": 1365,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1338,
											"end": 1365,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1338,
											"end": 1365,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1338,
											"end": 1365,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1338,
											"end": 1365,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1338,
											"end": 1376,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1338,
											"end": 1376,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1338,
											"end": 1376,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1338,
											"end": 1376,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1338,
											"end": 1376,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1338,
											"end": 1376,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1338,
											"end": 1376,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1338,
											"end": 1376,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1338,
											"end": 1376,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1338,
											"end": 1376,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1338,
											"end": 1376,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1338,
											"end": 1376,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1338,
											"end": 1376,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1338,
											"end": 1376,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1338,
											"end": 1376,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1338,
											"end": 1376,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1338,
											"end": 1376,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1338,
											"end": 1376,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1253,
											"end": 1383,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1253,
											"end": 1383,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1253,
											"end": 1383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 270,
											"end": 298,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 270,
											"end": 298,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 270,
											"end": 298,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 270,
											"end": 298,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 270,
											"end": 298,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 270,
											"end": 298,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 270,
											"end": 298,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 270,
											"end": 298,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 270,
											"end": 298,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 270,
											"end": 298,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 270,
											"end": 298,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 270,
											"end": 298,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 270,
											"end": 298,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 270,
											"end": 298,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 270,
											"end": 298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3650,
											"end": 3655,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3664,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 363,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 334,
											"end": 363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 334,
											"end": 363,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 334,
											"end": 363,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 363,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 334,
											"end": 363,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 334,
											"end": 363,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 334,
											"end": 363,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 334,
											"end": 363,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 363,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 334,
											"end": 363,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 334,
											"end": 363,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 334,
											"end": 363,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 334,
											"end": 363,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 334,
											"end": 363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 427,
											"end": 448,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 427,
											"end": 448,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 427,
											"end": 448,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 427,
											"end": 448,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 427,
											"end": 448,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 427,
											"end": 448,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 8800,
											"end": 8805,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8807,
											"end": 8814,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8816,
											"end": 8821,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 8827,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8791,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 8791,
											"end": 8828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1389,
											"end": 1798,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 1389,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1478,
											"end": 1485,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 1501,
											"end": 1527,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1520,
											"end": 1526,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1501,
											"end": 1527,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1501,
											"end": 1527,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1501,
											"end": 1527,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1501,
											"end": 1527,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1501,
											"end": 1527,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1501,
											"end": 1527,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1501,
											"end": 1527,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1501,
											"end": 1527,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1501,
											"end": 1527,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1501,
											"end": 1527,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1501,
											"end": 1527,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1501,
											"end": 1527,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1501,
											"end": 1527,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1501,
											"end": 1527,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1501,
											"end": 1527,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1501,
											"end": 1527,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1501,
											"end": 1527,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1501,
											"end": 1527,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1501,
											"end": 1527,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1501,
											"end": 1527,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1501,
											"end": 1527,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1501,
											"end": 1527,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1501,
											"end": 1527,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1501,
											"end": 1527,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1501,
											"end": 1527,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1501,
											"end": 1560,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1501,
											"end": 1560,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1501,
											"end": 1560,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1501,
											"end": 1560,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1549,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 1531,
											"end": 1560,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1550,
											"end": 1559,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1560,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1531,
											"end": 1560,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1560,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1531,
											"end": 1560,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1560,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1560,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1560,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1531,
											"end": 1560,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1560,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1560,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1560,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1560,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1531,
											"end": 1560,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1560,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1560,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1560,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1560,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1560,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1560,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1560,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1531,
											"end": 1560,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1560,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1560,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1560,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1531,
											"end": 1560,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1501,
											"end": 1560,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1501,
											"end": 1560,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1497,
											"end": 1600,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1497,
											"end": 1600,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1497,
											"end": 1600,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1589,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1576,
											"end": 1589,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1576,
											"end": 1589,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1576,
											"end": 1589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 1576,
											"end": 1589,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1497,
											"end": 1600,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1497,
											"end": 1600,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1609,
											"end": 1626,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1650,
											"end": 1653,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1639,
											"end": 1646,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1639,
											"end": 1646,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1630,
											"end": 1636,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1630,
											"end": 1646,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1630,
											"end": 1646,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1630,
											"end": 1646,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1630,
											"end": 1646,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 1630,
											"end": 1646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1630,
											"end": 1646,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1630,
											"end": 1646,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1629,
											"end": 1653,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 1629,
											"end": 1653,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1629,
											"end": 1653,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1629,
											"end": 1653,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 1629,
											"end": 1653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1629,
											"end": 1653,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 1629,
											"end": 1653,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1609,
											"end": 1653,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1609,
											"end": 1653,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1679,
											"end": 1680,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1667,
											"end": 1676,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1667,
											"end": 1680,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1663,
											"end": 1757,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1663,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1663,
											"end": 1757,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 1746,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 1712,
											"end": 1718,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1720,
											"end": 1734,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1720,
											"end": 1734,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1734,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1720,
											"end": 1734,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1720,
											"end": 1734,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1720,
											"end": 1734,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1720,
											"end": 1734,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1720,
											"end": 1734,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1720,
											"end": 1734,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1720,
											"end": 1734,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1720,
											"end": 1734,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1736,
											"end": 1745,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 1711,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 1696,
											"end": 1746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 1746,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 1696,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1663,
											"end": 1757,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1663,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1791,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 1779,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 1773,
											"end": 1791,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 1791,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 1773,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 1791,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 1773,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1766,
											"end": 1791,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1766,
											"end": 1791,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1766,
											"end": 1791,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1798,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 1389,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1798,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1798,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4848,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4860,
											"end": 4875,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 4878,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 4878,
											"end": 4890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 4916,
											"end": 4920,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4922,
											"end": 4929,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4931,
											"end": 4936,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 4900,
											"end": 4937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 4957,
											"end": 4961,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 4947,
											"end": 4973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3394,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 3397,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3397,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 3429,
											"end": 3434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3436,
											"end": 3438,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 3419,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3463,
											"end": 3467,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9811,
											"end": 9812,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9799,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9865,
											"end": 9866,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 9836,
											"end": 9868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9912,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9899,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9964,
											"end": 9965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 9936,
											"end": 9967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10017,
											"end": 10022,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 9998,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9999,
											"end": 10004,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10013,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10036,
											"end": 10045,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10082,
											"end": 10089,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10080,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10091,
											"end": 10096,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 10066,
											"end": 10097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5461,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5525,
											"end": 5526,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 5498,
											"end": 5528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5566,
											"end": 5567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 5591,
											"end": 5623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 5651,
											"end": 5655,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5657,
											"end": 5659,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5661,
											"end": 5666,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 5643,
											"end": 5667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10519,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 10532,
											"end": 10537,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10539,
											"end": 10546,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10522,
											"end": 10531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 10522,
											"end": 10547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10597,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10561,
											"end": 10577,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10641,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10633,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10641,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10695,
											"end": 10702,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10704,
											"end": 10720,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10722,
											"end": 10727,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 10668,
											"end": 10728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 10793,
											"end": 10798,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10800,
											"end": 10807,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10833,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10809,
											"end": 10825,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10809,
											"end": 10833,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10835,
											"end": 10840,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 10784,
											"end": 10841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10485,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6094,
											"end": 6095,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6082,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6230,
											"end": 6235,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 6214,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6297,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6335,
											"end": 6340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6392,
											"end": 6396,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6398,
											"end": 6409,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6411,
											"end": 6416,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 6367,
											"end": 6417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6584,
											"end": 6589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6581,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6562,
											"end": 6566,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6252,
											"end": 6614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6642,
											"end": 6643,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6630,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6807,
											"end": 6812,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7011,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7012,
											"end": 7014,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7079,
											"end": 7081,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7077,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7083,
											"end": 7088,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 7064,
											"end": 7089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 535,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 287,
											"end": 535,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 369,
											"end": 370,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 393,
											"end": 399,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 390,
											"end": 391,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 387,
											"end": 400,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 379,
											"end": 492,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 379,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 478,
											"end": 479,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 473,
											"end": 476,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 469,
											"end": 480,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 463,
											"end": 481,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 459,
											"end": 460,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 454,
											"end": 457,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 450,
											"end": 461,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 443,
											"end": 482,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 415,
											"end": 417,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 412,
											"end": 413,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 408,
											"end": 418,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 403,
											"end": 418,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 403,
											"end": 418,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 379,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 379,
											"end": 492,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 526,
											"end": 527,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 523,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 512,
											"end": 515,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 508,
											"end": 524,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 501,
											"end": 528,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 349,
											"end": 535,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 535,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 535,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 535,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 541,
											"end": 643,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 541,
											"end": 643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 582,
											"end": 588,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 635,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 629,
											"end": 636,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 624,
											"end": 626,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 617,
											"end": 622,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 613,
											"end": 627,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 609,
											"end": 637,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 599,
											"end": 637,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 599,
											"end": 637,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 541,
											"end": 643,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 541,
											"end": 643,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 541,
											"end": 643,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 541,
											"end": 643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 737,
											"end": 740,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 765,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 798,
											"end": 803,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 765,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 765,
											"end": 804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 765,
											"end": 804,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 765,
											"end": 804,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 820,
											"end": 891,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 884,
											"end": 890,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 879,
											"end": 882,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 820,
											"end": 891,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 820,
											"end": 891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 820,
											"end": 891,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 820,
											"end": 891,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 813,
											"end": 891,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 813,
											"end": 891,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 900,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 958,
											"end": 964,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 953,
											"end": 956,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 946,
											"end": 950,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 939,
											"end": 944,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 935,
											"end": 951,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 900,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 900,
											"end": 965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 900,
											"end": 965,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 900,
											"end": 965,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 990,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 1012,
											"end": 1018,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 990,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 990,
											"end": 1019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 990,
											"end": 1019,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 990,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 985,
											"end": 988,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 981,
											"end": 1020,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 974,
											"end": 1020,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 974,
											"end": 1020,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 741,
											"end": 1026,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 1026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1183,
											"end": 1185,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1172,
											"end": 1181,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1168,
											"end": 1186,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1186,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1186,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1232,
											"end": 1241,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1230,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1218,
											"end": 1219,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1216,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1203,
											"end": 1220,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1196,
											"end": 1243,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 1333,
											"end": 1337,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1324,
											"end": 1330,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 1260,
											"end": 1338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1338,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 1260,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1252,
											"end": 1338,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1252,
											"end": 1338,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1432,
											"end": 1549,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 1432,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1542,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1538,
											"end": 1539,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1543,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1804,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 1678,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1722,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1755,
											"end": 1797,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1748,
											"end": 1753,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1744,
											"end": 1798,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1733,
											"end": 1798,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1733,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1804,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1804,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1804,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1906,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 1810,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1847,
											"end": 1854,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1865,
											"end": 1900,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1865,
											"end": 1900,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1906,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1906,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1912,
											"end": 2034,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 1912,
											"end": 2034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 2003,
											"end": 2008,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 1985,
											"end": 2009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2009,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 1985,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1978,
											"end": 1983,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 2010,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1965,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 1965,
											"end": 2028,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2024,
											"end": 2025,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2022,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2014,
											"end": 2026,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1965,
											"end": 2028,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 1965,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1912,
											"end": 2034,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1912,
											"end": 2034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2086,
											"end": 2091,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2124,
											"end": 2130,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2111,
											"end": 2131,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2102,
											"end": 2131,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2102,
											"end": 2131,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2140,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 2167,
											"end": 2172,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2140,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 2140,
											"end": 2173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2140,
											"end": 2173,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 2140,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2040,
											"end": 2179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2222,
											"end": 2229,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2251,
											"end": 2256,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2256,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2256,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2268,
											"end": 2390,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 2268,
											"end": 2390,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 2359,
											"end": 2364,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 2341,
											"end": 2365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2334,
											"end": 2339,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2331,
											"end": 2366,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2380,
											"end": 2381,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2377,
											"end": 2378,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2268,
											"end": 2390,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2268,
											"end": 2390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2486,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2487,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2487,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2487,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 2523,
											"end": 2528,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 2496,
											"end": 2529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2396,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2609,
											"end": 2615,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2617,
											"end": 2623,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2666,
											"end": 2668,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2654,
											"end": 2663,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2645,
											"end": 2652,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2641,
											"end": 2664,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2637,
											"end": 2669,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2672,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 2672,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 2672,
											"end": 2751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2672,
											"end": 2751,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 2672,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2792,
											"end": 2793,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2817,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 2862,
											"end": 2869,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2853,
											"end": 2859,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2842,
											"end": 2851,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2838,
											"end": 2860,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2817,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 2817,
											"end": 2870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2817,
											"end": 2870,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 2817,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2807,
											"end": 2870,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2807,
											"end": 2870,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2763,
											"end": 2880,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2919,
											"end": 2921,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 2990,
											"end": 2997,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2981,
											"end": 2987,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2970,
											"end": 2979,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2966,
											"end": 2988,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 2945,
											"end": 2998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2935,
											"end": 2998,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2935,
											"end": 2998,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 3008,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 3015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3021,
											"end": 3111,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 3021,
											"end": 3111,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3055,
											"end": 3062,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3103,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3091,
											"end": 3104,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3105,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3073,
											"end": 3105,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3073,
											"end": 3105,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3021,
											"end": 3111,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3021,
											"end": 3111,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3021,
											"end": 3111,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3021,
											"end": 3111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3117,
											"end": 3226,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 3117,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3198,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 3213,
											"end": 3218,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3198,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 3198,
											"end": 3219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3198,
											"end": 3219,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 3198,
											"end": 3219,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3193,
											"end": 3196,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3186,
											"end": 3220,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3117,
											"end": 3226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3117,
											"end": 3226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3117,
											"end": 3226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3319,
											"end": 3323,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3357,
											"end": 3359,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3346,
											"end": 3355,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3342,
											"end": 3360,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3360,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3360,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3370,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 3432,
											"end": 3433,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3421,
											"end": 3430,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3417,
											"end": 3434,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3414,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3370,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 3370,
											"end": 3435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3370,
											"end": 3435,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 3370,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3448,
											"end": 3566,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 3448,
											"end": 3566,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3535,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 3553,
											"end": 3558,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3535,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 3535,
											"end": 3559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3535,
											"end": 3559,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 3535,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3530,
											"end": 3533,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3523,
											"end": 3560,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3448,
											"end": 3566,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3448,
											"end": 3566,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3448,
											"end": 3566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3572,
											"end": 3794,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 3572,
											"end": 3794,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3665,
											"end": 3669,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3703,
											"end": 3705,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3692,
											"end": 3701,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3688,
											"end": 3706,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3716,
											"end": 3787,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 3784,
											"end": 3785,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3773,
											"end": 3782,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3769,
											"end": 3786,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3760,
											"end": 3766,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3716,
											"end": 3787,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 3716,
											"end": 3787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3716,
											"end": 3787,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 3716,
											"end": 3787,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3572,
											"end": 3794,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3572,
											"end": 3794,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3572,
											"end": 3794,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3572,
											"end": 3794,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3572,
											"end": 3794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3800,
											"end": 4419,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 3800,
											"end": 4419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3885,
											"end": 3891,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3893,
											"end": 3899,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3942,
											"end": 3944,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3930,
											"end": 3939,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3921,
											"end": 3928,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3917,
											"end": 3940,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3913,
											"end": 3945,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3910,
											"end": 4029,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3910,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 3910,
											"end": 4029,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3948,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 3948,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 3948,
											"end": 4027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3948,
											"end": 4027,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 3948,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3910,
											"end": 4029,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 3910,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4068,
											"end": 4069,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4093,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 4138,
											"end": 4145,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4135,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4118,
											"end": 4127,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4114,
											"end": 4136,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4093,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 4093,
											"end": 4146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4093,
											"end": 4146,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 4093,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4039,
											"end": 4156,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4195,
											"end": 4197,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4221,
											"end": 4274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 4266,
											"end": 4273,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4257,
											"end": 4263,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4246,
											"end": 4255,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4242,
											"end": 4264,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4221,
											"end": 4274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 4221,
											"end": 4274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4221,
											"end": 4274,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 4221,
											"end": 4274,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4211,
											"end": 4274,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4211,
											"end": 4274,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4166,
											"end": 4284,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4323,
											"end": 4325,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4349,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 4394,
											"end": 4401,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4385,
											"end": 4391,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4374,
											"end": 4383,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4370,
											"end": 4392,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4349,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 4349,
											"end": 4402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4349,
											"end": 4402,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 4349,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4339,
											"end": 4402,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4339,
											"end": 4402,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4294,
											"end": 4412,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3800,
											"end": 4419,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3800,
											"end": 4419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3800,
											"end": 4419,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3800,
											"end": 4419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3800,
											"end": 4419,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3800,
											"end": 4419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4425,
											"end": 4511,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 4425,
											"end": 4511,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4460,
											"end": 4467,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4500,
											"end": 4504,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4493,
											"end": 4498,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4489,
											"end": 4505,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4478,
											"end": 4505,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4478,
											"end": 4505,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4425,
											"end": 4511,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4425,
											"end": 4511,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4425,
											"end": 4511,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4425,
											"end": 4511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4517,
											"end": 4629,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 4517,
											"end": 4629,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 4616,
											"end": 4621,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 4600,
											"end": 4622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4622,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 4600,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4595,
											"end": 4598,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4588,
											"end": 4623,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4517,
											"end": 4629,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4517,
											"end": 4629,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4517,
											"end": 4629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4849,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 4635,
											"end": 4849,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4724,
											"end": 4728,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4762,
											"end": 4764,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4751,
											"end": 4760,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4747,
											"end": 4765,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4739,
											"end": 4765,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4739,
											"end": 4765,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4775,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 4839,
											"end": 4840,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4828,
											"end": 4837,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4824,
											"end": 4841,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4815,
											"end": 4821,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4775,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 4775,
											"end": 4842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4775,
											"end": 4842,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 4775,
											"end": 4842,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4849,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4849,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4849,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4849,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 5184,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 4855,
											"end": 5184,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4914,
											"end": 4920,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4951,
											"end": 4960,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4942,
											"end": 4949,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4938,
											"end": 4961,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4934,
											"end": 4966,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4931,
											"end": 5050,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4931,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 4931,
											"end": 5050,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 4969,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 4969,
											"end": 5048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 5048,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 4969,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4931,
											"end": 5050,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 4931,
											"end": 5050,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5089,
											"end": 5090,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5114,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 5159,
											"end": 5166,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5150,
											"end": 5156,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5148,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5135,
											"end": 5157,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5114,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 5114,
											"end": 5167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5114,
											"end": 5167,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 5114,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5104,
											"end": 5167,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5104,
											"end": 5167,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5060,
											"end": 5177,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 5184,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 5184,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 5184,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 5184,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 5184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5190,
											"end": 5308,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 5190,
											"end": 5308,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5277,
											"end": 5301,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 5295,
											"end": 5300,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5277,
											"end": 5301,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 5277,
											"end": 5301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5277,
											"end": 5301,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 5277,
											"end": 5301,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5272,
											"end": 5275,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5265,
											"end": 5302,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5190,
											"end": 5308,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5190,
											"end": 5308,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5190,
											"end": 5308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5314,
											"end": 5536,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 5314,
											"end": 5536,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5407,
											"end": 5411,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5445,
											"end": 5447,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5434,
											"end": 5443,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5430,
											"end": 5448,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5422,
											"end": 5448,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5422,
											"end": 5448,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5458,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 5526,
											"end": 5527,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5515,
											"end": 5524,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5511,
											"end": 5528,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5502,
											"end": 5508,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5458,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 5458,
											"end": 5529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5458,
											"end": 5529,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 5458,
											"end": 5529,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5314,
											"end": 5536,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5314,
											"end": 5536,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5314,
											"end": 5536,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5314,
											"end": 5536,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5314,
											"end": 5536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5542,
											"end": 5658,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 5542,
											"end": 5658,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5612,
											"end": 5633,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 5627,
											"end": 5632,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5612,
											"end": 5633,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 5612,
											"end": 5633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5612,
											"end": 5633,
											"name": "tag",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 5612,
											"end": 5633,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5605,
											"end": 5610,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5602,
											"end": 5634,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5592,
											"end": 5652,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 5592,
											"end": 5652,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5648,
											"end": 5649,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5645,
											"end": 5646,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5638,
											"end": 5650,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5592,
											"end": 5652,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 5592,
											"end": 5652,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5542,
											"end": 5658,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5542,
											"end": 5658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5664,
											"end": 5797,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 5664,
											"end": 5797,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5707,
											"end": 5712,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5745,
											"end": 5751,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5732,
											"end": 5752,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5723,
											"end": 5752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5723,
											"end": 5752,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5761,
											"end": 5791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 5785,
											"end": 5790,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5761,
											"end": 5791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 5761,
											"end": 5791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5761,
											"end": 5791,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 5761,
											"end": 5791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5664,
											"end": 5797,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5664,
											"end": 5797,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5664,
											"end": 5797,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5664,
											"end": 5797,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5664,
											"end": 5797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5803,
											"end": 6271,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 5803,
											"end": 6271,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5868,
											"end": 5874,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5876,
											"end": 5882,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5925,
											"end": 5927,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5913,
											"end": 5922,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5904,
											"end": 5911,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5900,
											"end": 5923,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5896,
											"end": 5928,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5893,
											"end": 6012,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5893,
											"end": 6012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 5893,
											"end": 6012,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5931,
											"end": 6010,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 5931,
											"end": 6010,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 5931,
											"end": 6010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5931,
											"end": 6010,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 5931,
											"end": 6010,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5893,
											"end": 6012,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 5893,
											"end": 6012,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6052,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6076,
											"end": 6129,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 6121,
											"end": 6128,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6112,
											"end": 6118,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6101,
											"end": 6110,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6097,
											"end": 6119,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6076,
											"end": 6129,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 6076,
											"end": 6129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6076,
											"end": 6129,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 6076,
											"end": 6129,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6066,
											"end": 6129,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6066,
											"end": 6129,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6022,
											"end": 6139,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6178,
											"end": 6180,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6204,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 6246,
											"end": 6253,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6237,
											"end": 6243,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6226,
											"end": 6235,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6222,
											"end": 6244,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6204,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 6204,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6204,
											"end": 6254,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 6204,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6194,
											"end": 6254,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6194,
											"end": 6254,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6149,
											"end": 6264,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5803,
											"end": 6271,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5803,
											"end": 6271,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5803,
											"end": 6271,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5803,
											"end": 6271,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5803,
											"end": 6271,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5803,
											"end": 6271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6277,
											"end": 6751,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 6277,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6345,
											"end": 6351,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6353,
											"end": 6359,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6402,
											"end": 6404,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6390,
											"end": 6399,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6381,
											"end": 6388,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6377,
											"end": 6400,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6373,
											"end": 6405,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6370,
											"end": 6489,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6370,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 6370,
											"end": 6489,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6487,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 6408,
											"end": 6487,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 6408,
											"end": 6487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6487,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 6408,
											"end": 6487,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6370,
											"end": 6489,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 6370,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6528,
											"end": 6529,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6553,
											"end": 6606,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 6598,
											"end": 6605,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6595,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6578,
											"end": 6587,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6574,
											"end": 6596,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6553,
											"end": 6606,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 6553,
											"end": 6606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6553,
											"end": 6606,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 6553,
											"end": 6606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6543,
											"end": 6606,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6543,
											"end": 6606,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6499,
											"end": 6616,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6657,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6681,
											"end": 6734,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 6726,
											"end": 6733,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6723,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6706,
											"end": 6715,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6702,
											"end": 6724,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6681,
											"end": 6734,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 6681,
											"end": 6734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6681,
											"end": 6734,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 6681,
											"end": 6734,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6671,
											"end": 6734,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6671,
											"end": 6734,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6626,
											"end": 6744,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6277,
											"end": 6751,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6277,
											"end": 6751,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6277,
											"end": 6751,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6277,
											"end": 6751,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6277,
											"end": 6751,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6277,
											"end": 6751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6757,
											"end": 6937,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 6757,
											"end": 6937,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6805,
											"end": 6882,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6802,
											"end": 6803,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6795,
											"end": 6883,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6902,
											"end": 6906,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 6899,
											"end": 6900,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6892,
											"end": 6907,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6926,
											"end": 6930,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6923,
											"end": 6924,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6916,
											"end": 6931,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6943,
											"end": 7263,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 6943,
											"end": 7263,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6987,
											"end": 6993,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7024,
											"end": 7025,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 7018,
											"end": 7022,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7014,
											"end": 7026,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7004,
											"end": 7026,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7004,
											"end": 7026,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7071,
											"end": 7072,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7065,
											"end": 7069,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7061,
											"end": 7073,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7092,
											"end": 7110,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7082,
											"end": 7163,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 7082,
											"end": 7163,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7148,
											"end": 7152,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 7140,
											"end": 7146,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7136,
											"end": 7153,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7126,
											"end": 7153,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7126,
											"end": 7153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7082,
											"end": 7163,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 7082,
											"end": 7163,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7210,
											"end": 7212,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7202,
											"end": 7208,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7199,
											"end": 7213,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7179,
											"end": 7197,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7176,
											"end": 7214,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7173,
											"end": 7257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 7173,
											"end": 7257,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7229,
											"end": 7247,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 7229,
											"end": 7247,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 7229,
											"end": 7247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7229,
											"end": 7247,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 7229,
											"end": 7247,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7173,
											"end": 7257,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 7173,
											"end": 7257,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6994,
											"end": 7263,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6943,
											"end": 7263,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6943,
											"end": 7263,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6943,
											"end": 7263,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6943,
											"end": 7263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7269,
											"end": 7449,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 7269,
											"end": 7449,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7317,
											"end": 7394,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7314,
											"end": 7315,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7307,
											"end": 7395,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7414,
											"end": 7418,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 7411,
											"end": 7412,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7404,
											"end": 7419,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7438,
											"end": 7442,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7435,
											"end": 7436,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7428,
											"end": 7443,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7455,
											"end": 7649,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 7455,
											"end": 7649,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7495,
											"end": 7499,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7515,
											"end": 7535,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 7533,
											"end": 7534,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7515,
											"end": 7535,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 7515,
											"end": 7535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7515,
											"end": 7535,
											"name": "tag",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 7515,
											"end": 7535,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7510,
											"end": 7535,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7510,
											"end": 7535,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7549,
											"end": 7569,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 7567,
											"end": 7568,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7549,
											"end": 7569,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 7549,
											"end": 7569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7549,
											"end": 7569,
											"name": "tag",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 7549,
											"end": 7569,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7544,
											"end": 7569,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7544,
											"end": 7569,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7593,
											"end": 7594,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7590,
											"end": 7591,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7586,
											"end": 7595,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7578,
											"end": 7595,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7578,
											"end": 7595,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7617,
											"end": 7618,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7611,
											"end": 7615,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7608,
											"end": 7619,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7605,
											"end": 7642,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7605,
											"end": 7642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 7605,
											"end": 7642,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7622,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 7622,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 7622,
											"end": 7640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7622,
											"end": 7640,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 7622,
											"end": 7640,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7605,
											"end": 7642,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 7605,
											"end": 7642,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7455,
											"end": 7649,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7455,
											"end": 7649,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7455,
											"end": 7649,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7455,
											"end": 7649,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7455,
											"end": 7649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7655,
											"end": 8065,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 7655,
											"end": 8065,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7695,
											"end": 7702,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7718,
											"end": 7738,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 7736,
											"end": 7737,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7718,
											"end": 7738,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 7718,
											"end": 7738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7718,
											"end": 7738,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 7718,
											"end": 7738,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7713,
											"end": 7738,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7713,
											"end": 7738,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7752,
											"end": 7772,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 7770,
											"end": 7771,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7752,
											"end": 7772,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 7752,
											"end": 7772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7752,
											"end": 7772,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 7752,
											"end": 7772,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7747,
											"end": 7772,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7747,
											"end": 7772,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7807,
											"end": 7808,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7804,
											"end": 7805,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7800,
											"end": 7809,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 7829,
											"end": 7859,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 7847,
											"end": 7858,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7829,
											"end": 7859,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 7829,
											"end": 7859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7829,
											"end": 7859,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 7829,
											"end": 7859,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7818,
											"end": 7859,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7818,
											"end": 7859,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8008,
											"end": 8009,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7999,
											"end": 8006,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7995,
											"end": 8010,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7992,
											"end": 7993,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7989,
											"end": 8011,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7969,
											"end": 7970,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7962,
											"end": 7971,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7942,
											"end": 8025,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 7919,
											"end": 8058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 7919,
											"end": 8058,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8038,
											"end": 8056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 8038,
											"end": 8056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 8038,
											"end": 8056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8038,
											"end": 8056,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 8038,
											"end": 8056,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7919,
											"end": 8058,
											"name": "tag",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 7919,
											"end": 8058,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7703,
											"end": 8065,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7655,
											"end": 8065,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7655,
											"end": 8065,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7655,
											"end": 8065,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7655,
											"end": 8065,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7655,
											"end": 8065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8071,
											"end": 8251,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 8071,
											"end": 8251,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8119,
											"end": 8196,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8116,
											"end": 8117,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8109,
											"end": 8197,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8216,
											"end": 8220,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 8213,
											"end": 8214,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8206,
											"end": 8221,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8240,
											"end": 8244,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8237,
											"end": 8238,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8230,
											"end": 8245,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8257,
											"end": 8442,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 8257,
											"end": 8442,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8297,
											"end": 8298,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8314,
											"end": 8334,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 8332,
											"end": 8333,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8314,
											"end": 8334,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 8314,
											"end": 8334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8314,
											"end": 8334,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 8314,
											"end": 8334,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8309,
											"end": 8334,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8309,
											"end": 8334,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8348,
											"end": 8368,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 8366,
											"end": 8367,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8348,
											"end": 8368,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 8348,
											"end": 8368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8348,
											"end": 8368,
											"name": "tag",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 8348,
											"end": 8368,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8343,
											"end": 8368,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8343,
											"end": 8368,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8387,
											"end": 8388,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8377,
											"end": 8412,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 8377,
											"end": 8412,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8392,
											"end": 8410,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 8392,
											"end": 8410,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 8392,
											"end": 8410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8392,
											"end": 8410,
											"name": "tag",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 8392,
											"end": 8410,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8377,
											"end": 8412,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 8377,
											"end": 8412,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8434,
											"end": 8435,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8431,
											"end": 8432,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8427,
											"end": 8436,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 8422,
											"end": 8436,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8422,
											"end": 8436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8257,
											"end": 8442,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8257,
											"end": 8442,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8257,
											"end": 8442,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8257,
											"end": 8442,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8257,
											"end": 8442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8448,
											"end": 8890,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 8448,
											"end": 8890,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8597,
											"end": 8601,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8635,
											"end": 8637,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 8624,
											"end": 8633,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8620,
											"end": 8638,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8612,
											"end": 8638,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8612,
											"end": 8638,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8648,
											"end": 8719,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 8716,
											"end": 8717,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8705,
											"end": 8714,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8701,
											"end": 8718,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8692,
											"end": 8698,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8648,
											"end": 8719,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 8648,
											"end": 8719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8648,
											"end": 8719,
											"name": "tag",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 8648,
											"end": 8719,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8729,
											"end": 8801,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 8797,
											"end": 8799,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8786,
											"end": 8795,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8782,
											"end": 8800,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8773,
											"end": 8779,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8729,
											"end": 8801,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 8729,
											"end": 8801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8729,
											"end": 8801,
											"name": "tag",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 8729,
											"end": 8801,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8811,
											"end": 8883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 8879,
											"end": 8881,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8868,
											"end": 8877,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8864,
											"end": 8882,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8855,
											"end": 8861,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8811,
											"end": 8883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 8811,
											"end": 8883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8811,
											"end": 8883,
											"name": "tag",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 8811,
											"end": 8883,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8448,
											"end": 8890,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 8448,
											"end": 8890,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8448,
											"end": 8890,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8448,
											"end": 8890,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8448,
											"end": 8890,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8448,
											"end": 8890,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8448,
											"end": 8890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8896,
											"end": 9087,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 8896,
											"end": 9087,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8936,
											"end": 8939,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8955,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 8973,
											"end": 8974,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8955,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 8955,
											"end": 8975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8955,
											"end": 8975,
											"name": "tag",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 8955,
											"end": 8975,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8950,
											"end": 8975,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8950,
											"end": 8975,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8989,
											"end": 9009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 9007,
											"end": 9008,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8989,
											"end": 9009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 8989,
											"end": 9009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8989,
											"end": 9009,
											"name": "tag",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 8989,
											"end": 9009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8984,
											"end": 9009,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8984,
											"end": 9009,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9032,
											"end": 9033,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9029,
											"end": 9030,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9025,
											"end": 9034,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9018,
											"end": 9034,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9018,
											"end": 9034,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9053,
											"end": 9056,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9050,
											"end": 9051,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9047,
											"end": 9057,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9044,
											"end": 9080,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9044,
											"end": 9080,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 9044,
											"end": 9080,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9060,
											"end": 9078,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 9060,
											"end": 9078,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 9060,
											"end": 9078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9060,
											"end": 9078,
											"name": "tag",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 9060,
											"end": 9078,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9044,
											"end": 9080,
											"name": "tag",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 9044,
											"end": 9080,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8896,
											"end": 9087,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8896,
											"end": 9087,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8896,
											"end": 9087,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8896,
											"end": 9087,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8896,
											"end": 9087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/WW.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"devWallet()": "8ea5220f",
							"donationWallet()": "e7b94df4",
							"excludeFromTax(address,bool)": "c6a30647",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"reserveWallet()": "d72b11bd",
							"router()": "f887ea40",
							"setRouter(address)": "c0d78655",
							"symbol()": "95d89b41",
							"taxRate()": "771a3a1d",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reserve\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_dev\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_donation\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"donationWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"excluded\",\"type\":\"bool\"}],\"name\":\"excludeFromTax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserveWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"}],\"name\":\"setRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/WW.sol\":\"WorldWarToken\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/WW.sol\":{\"keccak256\":\"0x16d8103005525b3c82df8c5ae4ad334cfc971a776e9feaa9eca6faae37da23c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73953d3e1a78473930fc52724fe8ace135cc29a4f0097fe9557d97e028543436\",\"dweb:/ipfs/Qmagh6Kc4N2HXjahXCpqqbzefCUYprMXp4pG7wt1hrPxUX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/WW.sol:WorldWarToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/WW.sol:WorldWarToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/WW.sol:WorldWarToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/WW.sol:WorldWarToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/WW.sol:WorldWarToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/WW.sol:WorldWarToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 944,
								"contract": "contracts/WW.sol:WorldWarToken",
								"label": "taxRate",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 946,
								"contract": "contracts/WW.sol:WorldWarToken",
								"label": "reserveWallet",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 948,
								"contract": "contracts/WW.sol:WorldWarToken",
								"label": "devWallet",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 950,
								"contract": "contracts/WW.sol:WorldWarToken",
								"label": "donationWallet",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							},
							{
								"astId": 954,
								"contract": "contracts/WW.sol:WorldWarToken",
								"label": "_isExcludedFromTax",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 956,
								"contract": "contracts/WW.sol:WorldWarToken",
								"label": "router",
								"offset": 0,
								"slot": "11",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1638:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1648:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1656:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1671:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1681:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1594:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1615:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:2"
									},
									"scope": 799,
									"src": "1582:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1820:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1837:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1830:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1805:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:2"
									},
									"scope": 799,
									"src": "1760:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2024:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2041:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2034:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2009:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:2"
									},
									"scope": 799,
									"src": "1962:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2744:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2754:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2737:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:2"
									},
									"scope": 799,
									"src": "2688:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2891:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2908:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2901:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2776:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2839:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2882:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2881:9:2"
									},
									"scope": 799,
									"src": "2830:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3059:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3076:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3086:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3076:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3069:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2933:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2994:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3012:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3004:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3050:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:9:2"
									},
									"scope": 799,
									"src": "2985:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3371:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3389:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3381:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3381:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3397:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3397:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3381:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3436:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3419:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3419:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3419:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3463:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3456:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3107:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3305:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3322:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3314:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3334:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3326:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3365:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:6:2"
									},
									"scope": 799,
									"src": "3296:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3621:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3638:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3650:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3638:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3657:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3638:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3631:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3480:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3541:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3559:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3551:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3574:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3566:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:9:2"
									},
									"scope": 799,
									"src": "3532:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4058:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4076:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4068:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4068:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4084:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4068:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4115:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4122:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4131:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4106:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4106:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4106:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4154:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4147:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3678:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3988:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4004:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3996:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4021:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4013:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4052:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:2"
									},
									"scope": 799,
									"src": "3979:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4850:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4868:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4860:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4860:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4878:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4860:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4916:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4931:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4900:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4900:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4957:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4963:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4967:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4947:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4947:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4947:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4990:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "4983:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4171:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4766:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4787:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4779:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4801:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4793:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4813:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4805:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4844:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4844:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:6:2"
									},
									"scope": 799,
									"src": "4757:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5443:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5457:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5473:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5465:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5465:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5465:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5457:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5453:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5477:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5525:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5517:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5517:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5517:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5498:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5491:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5552:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5566:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5558:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5558:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5552:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5548:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5570:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5620:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5612:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5612:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5612:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5591:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5591:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5584:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5651:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5657:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5661:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5643:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5643:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5643:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5007:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5383:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5401:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5393:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5415:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5407:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5427:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5419:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5392:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5443:0:2"
									},
									"scope": 799,
									"src": "5374:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6064:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6078:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6094:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6086:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6086:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6086:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6078:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6252:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6274:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6266:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6266:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6288:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6298:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6288:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6266:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6321:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6335:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6321:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6317:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6342:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6392:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6398:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6411:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6367:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6367:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6360:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6445:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6552:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6562:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6552:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6570:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6584:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6570:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6552:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6552:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6074:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6098:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6214:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6230:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6214:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6214:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6628:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6642:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6634:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6634:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6634:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6628:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6843:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6857:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7002:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7012:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7002:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7019:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7002:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7002:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6624:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6646:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6660:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6791:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6807:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6791:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6791:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7073:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7079:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7083:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7064:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7064:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7059:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5680:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5998:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6014:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6006:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6006:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6028:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6020:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6005:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6064:0:2"
									},
									"scope": 799,
									"src": "5989:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7495:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7509:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7528:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7520:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7520:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7520:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7509:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7505:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7532:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7582:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7574:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7574:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7574:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7553:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7553:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7546:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7621:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7613:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7613:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7613:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7625:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7634:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7605:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7605:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7605:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7102:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7448:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7462:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7454:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7454:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7479:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7471:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7453:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7495:0:2"
									},
									"scope": 799,
									"src": "7439:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8021:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8035:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8054:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8046:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8046:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8046:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8035:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8031:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8058:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8106:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8098:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8098:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8098:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8079:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8079:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8072:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8137:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8154:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8146:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8146:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8146:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8158:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8129:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8129:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8129:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7653:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7974:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7988:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7980:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7980:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8005:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7997:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7979:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8021:0:2"
									},
									"scope": 799,
									"src": "7965:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8781:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8800:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8807:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8816:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8823:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8791:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8791:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8791:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8177:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8733:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8725:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8748:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8740:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8740:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8765:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8757:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8757:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8724:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8781:0:2"
									},
									"scope": 799,
									"src": "8707:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9780:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9794:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9811:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9803:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9803:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9803:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9794:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9790:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9815:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9865:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9857:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9857:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9857:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9836:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9836:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9829:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9892:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9911:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9903:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9903:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9903:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9892:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9888:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9915:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9964:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9956:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9956:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9956:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9936:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9936:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9929:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "9987:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "9999:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9987:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10006:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9987:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10017:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9987:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "9987:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10036:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10032:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10047:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10075:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10082:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10091:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10066:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10066:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10061:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8841:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9691:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9708:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9700:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9700:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9723:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9715:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9715:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9740:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9732:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9732:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9752:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9747:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9747:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9699:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9780:0:2"
									},
									"scope": 799,
									"src": "9682:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10485:387:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10503:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10495:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10495:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10532:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10522:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10522:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10495:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10561:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10585:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10585:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10580:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10580:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10594:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10580:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10561:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10557:309:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10599:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10617:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10636:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10617:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10613:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10643:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10695:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10704:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10722:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10668:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10668:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10661:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10756:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10793:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10800:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10809:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10828:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10809:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10835:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10784:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10784:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10784:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10120:271:2",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10405:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10429:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10421:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10421:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10444:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10436:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10436:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10461:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10453:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10453:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10420:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10485:0:2"
									},
									"scope": 799,
									"src": "10396:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9768:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10770:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"contracts/WW.sol": {
				"ast": {
					"absolutePath": "contracts/WW.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"Ownable": [
							147
						],
						"WorldWarToken": [
							1191
						]
					},
					"id": 1192,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1192,
							"sourceUnit": 800,
							"src": "57:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1192,
							"sourceUnit": 148,
							"src": "113:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 938,
										"name": "ERC20",
										"nameLocations": [
											"193:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "193:5:6"
									},
									"id": 939,
									"nodeType": "InheritanceSpecifier",
									"src": "193:5:6"
								},
								{
									"baseName": {
										"id": 940,
										"name": "Ownable",
										"nameLocations": [
											"200:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "200:7:6"
									},
									"id": 941,
									"nodeType": "InheritanceSpecifier",
									"src": "200:7:6"
								}
							],
							"canonicalName": "WorldWarToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1191,
							"linearizedBaseContracts": [
								1191,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "WorldWarToken",
							"nameLocation": "176:13:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "771a3a1d",
									"id": 944,
									"mutability": "mutable",
									"name": "taxRate",
									"nameLocation": "229:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1191,
									"src": "214:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 942,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "214:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 943,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "239:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d72b11bd",
									"id": 946,
									"mutability": "mutable",
									"name": "reserveWallet",
									"nameLocation": "285:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 1191,
									"src": "270:28:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 945,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "270:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8ea5220f",
									"id": 948,
									"mutability": "mutable",
									"name": "devWallet",
									"nameLocation": "319:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1191,
									"src": "304:24:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 947,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "304:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e7b94df4",
									"id": 950,
									"mutability": "mutable",
									"name": "donationWallet",
									"nameLocation": "349:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 1191,
									"src": "334:29:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 949,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "334:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 954,
									"mutability": "mutable",
									"name": "_isExcludedFromTax",
									"nameLocation": "403:18:6",
									"nodeType": "VariableDeclaration",
									"scope": 1191,
									"src": "370:51:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 953,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 951,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "378:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "370:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 952,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "389:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "f887ea40",
									"id": 956,
									"mutability": "mutable",
									"name": "router",
									"nameLocation": "442:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 1191,
									"src": "427:21:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 955,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "427:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1044,
										"nodeType": "Block",
										"src": "569:584:6",
										"statements": [
											{
												"assignments": [
													974
												],
												"declarations": [
													{
														"constant": false,
														"id": 974,
														"mutability": "mutable",
														"name": "totalSupply",
														"nameLocation": "587:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1044,
														"src": "579:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 973,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "579:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 981,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130305f3030305f303030",
														"id": 975,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "601:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000000_by_1",
															"typeString": "int_const 100000000"
														},
														"value": "100_000_000"
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 979,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "615:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 977,
																"name": "decimals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 363,
																"src": "621:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																	"typeString": "function () view returns (uint8)"
																}
															},
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "621:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "615:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "601:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "579:52:6"
											},
											{
												"assignments": [
													983
												],
												"declarations": [
													{
														"constant": false,
														"id": 983,
														"mutability": "mutable",
														"name": "devAmount",
														"nameLocation": "650:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 1044,
														"src": "642:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 982,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "642:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 990,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 986,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 984,
																	"name": "totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 974,
																	"src": "663:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3135",
																	"id": 985,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "677:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_15_by_1",
																		"typeString": "int_const 15"
																	},
																	"value": "15"
																},
																"src": "663:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 987,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "662:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 988,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "683:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "662:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "642:44:6"
											},
											{
												"assignments": [
													992
												],
												"declarations": [
													{
														"constant": false,
														"id": 992,
														"mutability": "mutable",
														"name": "reserveAmount",
														"nameLocation": "704:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 1044,
														"src": "696:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 991,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "696:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 996,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 993,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "720:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 994,
														"name": "devAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 983,
														"src": "734:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "720:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "696:47:6"
											},
											{
												"expression": {
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 997,
														"name": "reserveWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "754:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 998,
														"name": "_reserve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "770:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "754:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1000,
												"nodeType": "ExpressionStatement",
												"src": "754:24:6"
											},
											{
												"expression": {
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1001,
														"name": "devWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "788:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1002,
														"name": "_dev",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "800:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "788:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1004,
												"nodeType": "ExpressionStatement",
												"src": "788:16:6"
											},
											{
												"expression": {
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1005,
														"name": "donationWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "814:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1006,
														"name": "_donation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "831:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "814:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1008,
												"nodeType": "ExpressionStatement",
												"src": "814:26:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1010,
															"name": "devWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "857:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1011,
															"name": "devAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "868:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1009,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "851:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "851:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1013,
												"nodeType": "ExpressionStatement",
												"src": "851:27:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1015,
															"name": "reserveWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "894:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1016,
															"name": "reserveAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "909:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1014,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "888:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "888:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1018,
												"nodeType": "ExpressionStatement",
												"src": "888:35:6"
											},
											{
												"expression": {
													"id": 1024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1019,
															"name": "_isExcludedFromTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "962:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1022,
														"indexExpression": {
															"expression": {
																"id": 1020,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "981:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "985:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "981:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "962:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1023,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "995:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "962:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1025,
												"nodeType": "ExpressionStatement",
												"src": "962:37:6"
											},
											{
												"expression": {
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1026,
															"name": "_isExcludedFromTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "1009:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1028,
														"indexExpression": {
															"id": 1027,
															"name": "reserveWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "1028:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1009:33:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1029,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1045:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1009:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1031,
												"nodeType": "ExpressionStatement",
												"src": "1009:40:6"
											},
											{
												"expression": {
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1032,
															"name": "_isExcludedFromTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "1059:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1034,
														"indexExpression": {
															"id": 1033,
															"name": "devWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "1078:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1059:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1035,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1091:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1059:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1037,
												"nodeType": "ExpressionStatement",
												"src": "1059:36:6"
											},
											{
												"expression": {
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1038,
															"name": "_isExcludedFromTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "1105:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1040,
														"indexExpression": {
															"id": 1039,
															"name": "donationWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "1124:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1105:34:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1041,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1142:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1105:41:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "1105:41:6"
											}
										]
									},
									"id": 1045,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "576f726c642057617220546f6b656e",
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "524:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_f0af42496fd05017a1bad88b2752be155c16cd0b1937ff8b46c5bbbf25b2c52b",
														"typeString": "literal_string \"World War Token\""
													},
													"value": "World War Token"
												},
												{
													"hexValue": "5757",
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "543:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_6f97b8f146980b648241685dce130d9353ecd028fd8ae91621675d5727247294",
														"typeString": "literal_string \"WW\""
													},
													"value": "WW"
												}
											],
											"id": 967,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 964,
												"name": "ERC20",
												"nameLocations": [
													"518:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "518:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "518:30:6"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 969,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "557:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "561:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "557:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 971,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 968,
												"name": "Ownable",
												"nameLocations": [
													"549:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "549:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "549:19:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "_reserve",
												"nameLocation": "475:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "467:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "467:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "_dev",
												"nameLocation": "493:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "485:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "485:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "_donation",
												"nameLocation": "507:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "499:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 961,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "499:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "466:51:6"
									},
									"returnParameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "569:0:6"
									},
									"scope": 1191,
									"src": "455:698:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1056,
										"nodeType": "Block",
										"src": "1214:33:6",
										"statements": [
											{
												"expression": {
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1052,
														"name": "router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "1224:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1053,
														"name": "_router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1047,
														"src": "1233:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1224:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1055,
												"nodeType": "ExpressionStatement",
												"src": "1224:16:6"
											}
										]
									},
									"functionSelector": "c0d78655",
									"id": 1057,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1050,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1049,
												"name": "onlyOwner",
												"nameLocations": [
													"1204:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1204:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1204:9:6"
										}
									],
									"name": "setRouter",
									"nameLocation": "1168:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "_router",
												"nameLocation": "1186:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "1178:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1178:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1177:17:6"
									},
									"returnParameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1214:0:6"
									},
									"scope": 1191,
									"src": "1159:88:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1072,
										"nodeType": "Block",
										"src": "1328:55:6",
										"statements": [
											{
												"expression": {
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1066,
															"name": "_isExcludedFromTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "1338:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1068,
														"indexExpression": {
															"id": 1067,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "1357:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1338:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1069,
														"name": "excluded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1061,
														"src": "1368:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1338:38:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1071,
												"nodeType": "ExpressionStatement",
												"src": "1338:38:6"
											}
										]
									},
									"functionSelector": "c6a30647",
									"id": 1073,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1064,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1063,
												"name": "onlyOwner",
												"nameLocations": [
													"1318:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1318:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1318:9:6"
										}
									],
									"name": "excludeFromTax",
									"nameLocation": "1262:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1285:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "1277:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1058,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1277:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "excluded",
												"nameLocation": "1299:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "1294:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1060,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1294:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1276:32:6"
									},
									"returnParameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1328:0:6"
									},
									"scope": 1191,
									"src": "1253:130:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1121,
										"nodeType": "Block",
										"src": "1487:311:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1084,
															"name": "_isExcludedFromTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "1501:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1086,
														"indexExpression": {
															"id": 1085,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "1520:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1501:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"baseExpression": {
															"id": 1087,
															"name": "_isExcludedFromTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "1531:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1089,
														"indexExpression": {
															"id": 1088,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "1550:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1531:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1501:59:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1094,
												"nodeType": "IfStatement",
												"src": "1497:103:6",
												"trueBody": {
													"id": 1093,
													"nodeType": "Block",
													"src": "1562:38:6",
													"statements": [
														{
															"expression": {
																"id": 1091,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1079,
																"src": "1583:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1083,
															"id": 1092,
															"nodeType": "Return",
															"src": "1576:13:6"
														}
													]
												}
											},
											{
												"assignments": [
													1096
												],
												"declarations": [
													{
														"constant": false,
														"id": 1096,
														"mutability": "mutable",
														"name": "taxAmount",
														"nameLocation": "1617:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 1121,
														"src": "1609:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1095,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1609:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1103,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1097,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1079,
																	"src": "1630:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1098,
																	"name": "taxRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 944,
																	"src": "1639:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1630:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1100,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1629:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1101,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1650:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "1629:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1609:44:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1104,
														"name": "taxAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1096,
														"src": "1667:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1105,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1679:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1667:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1116,
												"nodeType": "IfStatement",
												"src": "1663:94:6",
												"trueBody": {
													"id": 1115,
													"nodeType": "Block",
													"src": "1682:75:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1110,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1075,
																		"src": "1712:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1111,
																		"name": "donationWallet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 950,
																		"src": "1720:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1112,
																		"name": "taxAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1096,
																		"src": "1736:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1107,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "1696:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_WorldWarToken_$1191_$",
																			"typeString": "type(contract super WorldWarToken)"
																		}
																	},
																	"id": 1109,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1702:9:6",
																	"memberName": "_transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 529,
																	"src": "1696:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1696:50:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1114,
															"nodeType": "ExpressionStatement",
															"src": "1696:50:6"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1117,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1079,
														"src": "1773:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1118,
														"name": "taxAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1096,
														"src": "1782:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1773:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1083,
												"id": 1120,
												"nodeType": "Return",
												"src": "1766:25:6"
											}
										]
									},
									"id": 1122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_handleTax",
									"nameLocation": "1398:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1417:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "1409:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1074,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1409:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1433:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "1425:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1076,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1425:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1452:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "1444:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1444:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1408:51:6"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "1478:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1081,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1478:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1477:9:6"
									},
									"scope": 1191,
									"src": "1389:409:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										409
									],
									"body": {
										"id": 1147,
										"nodeType": "Block",
										"src": "1888:135:6",
										"statements": [
											{
												"assignments": [
													1133
												],
												"declarations": [
													{
														"constant": false,
														"id": 1133,
														"mutability": "mutable",
														"name": "finalAmount",
														"nameLocation": "1906:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1147,
														"src": "1898:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1132,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1898:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1140,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1135,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1931:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1935:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1931:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1137,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1124,
															"src": "1943:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1138,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1126,
															"src": "1954:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1134,
														"name": "_handleTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1122,
														"src": "1920:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,address,uint256) returns (uint256)"
														}
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1920:41:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1898:63:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1143,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1124,
															"src": "1993:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1144,
															"name": "finalAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "2004:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1141,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1978:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_WorldWarToken_$1191_$",
																"typeString": "type(contract super WorldWarToken)"
															}
														},
														"id": 1142,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1984:8:6",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 409,
														"src": "1978:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 1145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1978:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1131,
												"id": 1146,
												"nodeType": "Return",
												"src": "1971:45:6"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1813:8:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1128,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1864:8:6"
									},
									"parameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1830:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "1822:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1822:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1849:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "1841:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1841:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1821:35:6"
									},
									"returnParameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "1882:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1129,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1882:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1881:6:6"
									},
									"scope": 1191,
									"src": "1804:219:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										482
									],
									"body": {
										"id": 1189,
										"nodeType": "Block",
										"src": "2133:227:6",
										"statements": [
											{
												"assignments": [
													1161
												],
												"declarations": [
													{
														"constant": false,
														"id": 1161,
														"mutability": "mutable",
														"name": "finalAmount",
														"nameLocation": "2151:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1189,
														"src": "2143:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1160,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2143:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1167,
												"initialValue": {
													"arguments": [
														{
															"id": 1163,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1150,
															"src": "2176:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1164,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1152,
															"src": "2184:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1165,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1154,
															"src": "2195:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1162,
														"name": "_handleTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1122,
														"src": "2165:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,address,uint256) returns (uint256)"
														}
													},
													"id": 1166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2165:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2143:59:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1169,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1150,
															"src": "2221:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1170,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 915,
																"src": "2229:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2229:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1173,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1150,
																		"src": "2253:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1174,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "2261:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1175,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2261:12:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1172,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 426,
																	"src": "2243:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 1176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2243:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"components": [
																	{
																		"id": 1177,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1154,
																		"src": "2278:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1178,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2277:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2243:42:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1168,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "2212:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2212:74:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1181,
												"nodeType": "ExpressionStatement",
												"src": "2212:74:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1184,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1150,
															"src": "2322:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1185,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1152,
															"src": "2330:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1186,
															"name": "finalAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "2341:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1182,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2303:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_WorldWarToken_$1191_$",
																"typeString": "type(contract super WorldWarToken)"
															}
														},
														"id": 1183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2309:12:6",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 482,
														"src": "2303:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1159,
												"id": 1188,
												"nodeType": "Return",
												"src": "2296:57:6"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2038:12:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1156,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2109:8:6"
									},
									"parameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2059:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "2051:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2051:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2075:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "2067:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2067:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2094:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "2086:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2086:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2050:51:6"
									},
									"returnParameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "2127:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1157,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2127:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2126:6:6"
									},
									"scope": 1191,
									"src": "2029:331:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1192,
							"src": "167:2195:6",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820
							]
						}
					],
					"src": "32:2330:6"
				},
				"id": 6
			}
		}
	}
}